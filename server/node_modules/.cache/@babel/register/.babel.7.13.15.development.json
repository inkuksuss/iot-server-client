{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/init.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/init.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/init.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/init.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "init.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nrequire(\"./db\");\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nrequire(\"./models/data\");\n\nrequire(\"./models/User\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar PORT = process.env.PORT || 5000;\n\nvar handleListing = function handleListing() {\n  return console.log(\"\\uD83D\\uDE08Listening on: http://localhost:\".concat(PORT));\n};\n\n_app[\"default\"].listen(PORT, handleListing);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJoYW5kbGVMaXN0aW5nIiwiY29uc29sZSIsImxvZyIsImFwcCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBQSxtQkFBT0MsTUFBUDs7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLElBQW9CLElBQWpDOztBQUVBLElBQU1HLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0I7QUFBQSxTQUNsQkMsT0FBTyxDQUFDQyxHQUFSLHNEQUFnREwsSUFBaEQsRUFEa0I7QUFBQSxDQUF0Qjs7QUFHQU0sZ0JBQUlDLE1BQUosQ0FBV1AsSUFBWCxFQUFpQkcsYUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCBcIi4vZGJcIjtcbmltcG9ydCBhcHAgZnJvbSAnLi9hcHAnO1xuaW1wb3J0IFwiLi9tb2RlbHMvZGF0YVwiO1xuaW1wb3J0IFwiLi9tb2RlbHMvVXNlclwiO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDUwMDA7XG5cbmNvbnN0IGhhbmRsZUxpc3RpbmcgPSAoKSA9PlxuICAgIGNvbnNvbGUubG9nKGDwn5iITGlzdGVuaW5nIG9uOiBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKTtcblxuYXBwLmxpc3RlbihQT1JULCBoYW5kbGVMaXN0aW5nKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "dotenv",
        "config",
        "PORT",
        "process",
        "env",
        "handleListing",
        "console",
        "log",
        "app",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAClBC,OAAO,CAACC,GAAR,sDAAgDL,IAAhD,EADkB;AAAA,CAAtB;;AAGAM,gBAAIC,MAAJ,CAAWP,IAAX,EAAiBG,aAAjB",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "import dotenv from 'dotenv';\nimport \"./db\";\nimport app from './app';\nimport \"./models/data\";\nimport \"./models/User\";\n\ndotenv.config();\n\nconst PORT = process.env.PORT || 5000;\n\nconst handleListing = () =>\n    console.log(`😈Listening on: http://localhost:${PORT}`);\n\napp.listen(PORT, handleListing);"
      ]
    },
    "sourceType": "script",
    "mtime": 1618331402740
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/db.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/db.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\n_mongoose[\"default\"].connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useUnifiedTopology: true\n});\n\nvar db = _mongoose[\"default\"].connection;\n\nvar handleOpen = function handleOpen() {\n  return console.log(\"😎Connected to DB\");\n};\n\nvar handleError = function handleError(error) {\n  return console.log(\"\\uD83E\\uDD75Error on DB Connection: \".concat(error));\n};\n\ndb.once(\"open\", handleOpen);\ndb.on('error', handleError);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJjb25uZWN0aW9uIiwiaGFuZGxlT3BlbiIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVFcnJvciIsImVycm9yIiwib25jZSIsIm9uIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUFBLG1CQUFPQyxNQUFQOztBQUVBQyxxQkFBU0MsT0FBVCxDQUFpQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQTdCLEVBQXdDO0FBQ3BDQyxFQUFBQSxlQUFlLEVBQUUsSUFEbUI7QUFFcENDLEVBQUFBLGdCQUFnQixFQUFFLEtBRmtCO0FBR3BDQyxFQUFBQSxrQkFBa0IsRUFBRTtBQUhnQixDQUF4Qzs7QUFPQSxJQUFNQyxFQUFFLEdBQUdSLHFCQUFTUyxVQUFwQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYTtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLENBQU47QUFBQSxDQUFuQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFEO0FBQUEsU0FBV0gsT0FBTyxDQUFDQyxHQUFSLCtDQUF5Q0UsS0FBekMsRUFBWDtBQUFBLENBQXBCOztBQUVBTixFQUFFLENBQUNPLElBQUgsQ0FBUSxNQUFSLEVBQWdCTCxVQUFoQjtBQUNBRixFQUFFLENBQUNRLEVBQUgsQ0FBTSxPQUFOLEVBQWVILFdBQWYiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09fVVJMLCB7XG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIHVzZUZpbmRBbmRNb2RpZnk6IGZhbHNlLFxuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZVxuICAgIH1cbik7XG5cbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcbmNvbnN0IGhhbmRsZU9wZW4gPSAoKSA9PiBjb25zb2xlLmxvZyhcIvCfmI5Db25uZWN0ZWQgdG8gREJcIilcbmNvbnN0IGhhbmRsZUVycm9yID0gKGVycm9yKSA9PiBjb25zb2xlLmxvZyhg8J+ltUVycm9yIG9uIERCIENvbm5lY3Rpb246ICR7ZXJyb3J9YClcblxuZGIub25jZShcIm9wZW5cIiwgaGFuZGxlT3Blbik7XG5kYi5vbignZXJyb3InLCBoYW5kbGVFcnJvcik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "dotenv",
        "config",
        "mongoose",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "useFindAndModify",
        "useUnifiedTopology",
        "db",
        "connection",
        "handleOpen",
        "console",
        "log",
        "handleError",
        "error",
        "once",
        "on"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEAC,qBAASC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACpCC,EAAAA,eAAe,EAAE,IADmB;AAEpCC,EAAAA,gBAAgB,EAAE,KAFkB;AAGpCC,EAAAA,kBAAkB,EAAE;AAHgB,CAAxC;;AAOA,IAAMC,EAAE,GAAGR,qBAASS,UAApB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,CAAnB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAWH,OAAO,CAACC,GAAR,+CAAyCE,KAAzC,EAAX;AAAA,CAApB;;AAEAN,EAAE,CAACO,IAAH,CAAQ,MAAR,EAAgBL,UAAhB;AACAF,EAAE,CAACQ,EAAH,CAAM,OAAN,EAAeH,WAAf",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nmongoose.connect(process.env.MONGO_URL, {\n    useNewUrlParser: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true\n    }\n);\n\nconst db = mongoose.connection;\nconst handleOpen = () => console.log(\"😎Connected to DB\")\nconst handleError = (error) => console.log(`🥵Error on DB Connection: ${error}`)\n\ndb.once(\"open\", handleOpen);\ndb.on('error', handleError);"
      ]
    },
    "sourceType": "script",
    "mtime": 1618324362111
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/app.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/app.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _connectMongo = _interopRequireDefault(require(\"connect-mongo\"));\n\nvar _globalRouter = _interopRequireDefault(require(\"./routers/globalRouter\"));\n\nvar _userRouter = _interopRequireDefault(require(\"./routers/userRouter\"));\n\nvar _dataRouter = _interopRequireDefault(require(\"./routers/dataRouter\"));\n\nvar _apiRouter = _interopRequireDefault(require(\"./routers/apiRouter\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _middleware = require(\"./middleware\");\n\nrequire(\"./passport\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); //middlewares\n\napp.use((0, _helmet[\"default\"])({\n  contentSecurityPolicy: false\n})); // 보안\n\napp.set(\"view engine\", \"pug\"); //view Engine\n\napp.use(\"/uploads\", _express[\"default\"][\"static\"]('uploads')); // /uploads로 접근하면 uploads파일로 싸줌\n\napp.use(\"/static\", _express[\"default\"][\"static\"]('static'));\napp.use(\"/image\", _express[\"default\"][\"static\"]('image'));\napp.use((0, _cookieParser[\"default\"])()); // 쿠키 저장\n\napp.use(_bodyParser[\"default\"].json()); //JSON 가져옴\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // FORM형식 가져옴\n\napp.use((0, _morgan[\"default\"])(\"dev\")); // 접속 추적\n\napp.use((0, _expressSession[\"default\"])({\n  secret: process.env.COOKIE_SECRET,\n  resave: false,\n  saveUninitialized: false,\n  store: _connectMongo[\"default\"].create({\n    mongoUrl: process.env.MONGO_URL,\n    autoRemove: 'native',\n    ttl: 60 * 60\n  })\n}));\napp.use(_passport[\"default\"].initialize());\napp.use(_passport[\"default\"].session());\napp.use(_middleware.localsMiddleware); //Router\n\napp.use(_routes[\"default\"].api, _apiRouter[\"default\"]);\napp.use(_routes[\"default\"].home, _globalRouter[\"default\"]);\napp.use(_routes[\"default\"].users, _userRouter[\"default\"]);\napp.use(_routes[\"default\"].data, _dataRouter[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJjb250ZW50U2VjdXJpdHlQb2xpY3kiLCJzZXQiLCJleHByZXNzIiwiYm9keVBhcmVzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwic2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkNPT0tJRV9TRUNSRVQiLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsInN0b3JlIiwiTW9uZ29zdG9yZSIsImNyZWF0ZSIsIm1vbmdvVXJsIiwiTU9OR09fVVJMIiwiYXV0b1JlbW92ZSIsInR0bCIsInBhc3Nwb3J0IiwiaW5pdGlhbGl6ZSIsInNlc3Npb24iLCJsb2NhbHNNaWRkbGV3YXJlIiwicm91dGVzIiwiYXBpIiwiYXBpUm91dGVyIiwiaG9tZSIsImdsb2JhbFJvdXRlciIsInVzZXJzIiwidXNlclJvdXRlciIsImRhdGEiLCJkYXRhUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUdBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTztBQUNYQyxFQUFBQSxxQkFBcUIsRUFBRTtBQURaLENBQVAsQ0FBUixFLENBRUs7O0FBQ0xGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkIsRSxDQUErQjs7QUFDL0JILEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JHLDhCQUFlLFNBQWYsQ0FBcEIsRSxDQUFnRDs7QUFDaERKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJHLDhCQUFlLFFBQWYsQ0FBbkI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsUUFBUixFQUFrQkcsOEJBQWUsT0FBZixDQUFsQjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUSwrQkFBUixFLENBQXlCOztBQUN6QkQsR0FBRyxDQUFDQyxHQUFKLENBQVFJLHVCQUFZQyxJQUFaLEVBQVIsRSxDQUE2Qjs7QUFDN0JOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRSSx1QkFBWUUsVUFBWixDQUF1QjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF2QixDQUFSLEUsQ0FBcUQ7O0FBQ3JEUixHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVIsRSxDQUF3Qjs7QUFDeEJELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdDQUFRO0FBQ1pRLEVBQUFBLE1BQU0sRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGFBRFI7QUFFWkMsRUFBQUEsTUFBTSxFQUFFLEtBRkk7QUFHWkMsRUFBQUEsaUJBQWlCLEVBQUUsS0FIUDtBQUlaQyxFQUFBQSxLQUFLLEVBQUVDLHlCQUFXQyxNQUFYLENBQWtCO0FBQUVDLElBQUFBLFFBQVEsRUFBRVIsT0FBTyxDQUFDQyxHQUFSLENBQVlRLFNBQXhCO0FBQW1DQyxJQUFBQSxVQUFVLEVBQUUsUUFBL0M7QUFBeURDLElBQUFBLEdBQUcsRUFBRSxLQUFLO0FBQW5FLEdBQWxCO0FBSkssQ0FBUixDQUFSO0FBTUFyQixHQUFHLENBQUNDLEdBQUosQ0FBUXFCLHFCQUFTQyxVQUFULEVBQVI7QUFDQXZCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRcUIscUJBQVNFLE9BQVQsRUFBUjtBQUNBeEIsR0FBRyxDQUFDQyxHQUFKLENBQVF3Qiw0QkFBUixFLENBRUE7O0FBQ0F6QixHQUFHLENBQUNDLEdBQUosQ0FBUXlCLG1CQUFPQyxHQUFmLEVBQW9CQyxxQkFBcEI7QUFDQTVCLEdBQUcsQ0FBQ0MsR0FBSixDQUFReUIsbUJBQU9HLElBQWYsRUFBcUJDLHdCQUFyQjtBQUNBOUIsR0FBRyxDQUFDQyxHQUFKLENBQVF5QixtQkFBT0ssS0FBZixFQUFzQkMsc0JBQXRCO0FBQ0FoQyxHQUFHLENBQUNDLEdBQUosQ0FBUXlCLG1CQUFPTyxJQUFmLEVBQXFCQyxzQkFBckI7ZUFHZWxDLEciLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcbmltcG9ydCBoZWxtZXQgZnJvbSBcImhlbG1ldFwiO1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tIFwiY29va2llLXBhcnNlclwiO1xuaW1wb3J0IGJvZHlQYXJlc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xuaW1wb3J0IHBhc3Nwb3J0IGZyb20gXCJwYXNzcG9ydFwiO1xuaW1wb3J0IHNlc3Npb24gZnJvbSBcImV4cHJlc3Mtc2Vzc2lvblwiO1xuaW1wb3J0IE1vbmdvc3RvcmUgZnJvbSBcImNvbm5lY3QtbW9uZ29cIjtcbmltcG9ydCBnbG9iYWxSb3V0ZXIgZnJvbSBcIi4vcm91dGVycy9nbG9iYWxSb3V0ZXJcIjtcbmltcG9ydCB1c2VyUm91dGVyIGZyb20gXCIuL3JvdXRlcnMvdXNlclJvdXRlclwiO1xuaW1wb3J0IGRhdGFSb3V0ZXIgZnJvbSBcIi4vcm91dGVycy9kYXRhUm91dGVyXCI7XG5pbXBvcnQgYXBpUm91dGVyIGZyb20gXCIuL3JvdXRlcnMvYXBpUm91dGVyXCI7XG5pbXBvcnQgcm91dGVzIGZyb20gXCIuL3JvdXRlc1wiO1xuaW1wb3J0IHsgbG9jYWxzTWlkZGxld2FyZSB9IGZyb20gJy4vbWlkZGxld2FyZSc7XG5pbXBvcnQgXCIuL3Bhc3Nwb3J0XCI7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuXG4vL21pZGRsZXdhcmVzXG5hcHAudXNlKGhlbG1ldCh7IFxuICAgIGNvbnRlbnRTZWN1cml0eVBvbGljeTogZmFsc2UgXG59KSk7IC8vIOuztOyViFxuYXBwLnNldChcInZpZXcgZW5naW5lXCIsIFwicHVnXCIpOyAvL3ZpZXcgRW5naW5lXG5hcHAudXNlKFwiL3VwbG9hZHNcIiwgZXhwcmVzcy5zdGF0aWMoJ3VwbG9hZHMnKSk7IC8vIC91cGxvYWRz66GcIOygkeq3vO2VmOuptCB1cGxvYWRz7YyM7J2866GcIOyLuOykjFxuYXBwLnVzZShcIi9zdGF0aWNcIiwgZXhwcmVzcy5zdGF0aWMoJ3N0YXRpYycpKTtcbmFwcC51c2UoXCIvaW1hZ2VcIiwgZXhwcmVzcy5zdGF0aWMoJ2ltYWdlJykpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7IC8vIOy/oO2CpCDsoIDsnqVcbmFwcC51c2UoYm9keVBhcmVzZXIuanNvbigpKTsgLy9KU09OIOqwgOyguOyYtFxuYXBwLnVzZShib2R5UGFyZXNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpOyAvLyBGT1JN7ZiV7IudIOqwgOyguOyYtFxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpOyAvLyDsoJHsho0g7LaU7KCBXG5hcHAudXNlKHNlc3Npb24oe1xuICAgIHNlY3JldDogcHJvY2Vzcy5lbnYuQ09PS0lFX1NFQ1JFVCxcbiAgICByZXNhdmU6IGZhbHNlLFxuICAgIHNhdmVVbmluaXRpYWxpemVkOiBmYWxzZSxcbiAgICBzdG9yZTogTW9uZ29zdG9yZS5jcmVhdGUoeyBtb25nb1VybDogcHJvY2Vzcy5lbnYuTU9OR09fVVJMLCBhdXRvUmVtb3ZlOiAnbmF0aXZlJywgdHRsOiA2MCAqIDYwfSksXG59KSk7XG5hcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XG5hcHAudXNlKHBhc3Nwb3J0LnNlc3Npb24oKSk7XG5hcHAudXNlKGxvY2Fsc01pZGRsZXdhcmUpO1xuXG4vL1JvdXRlclxuYXBwLnVzZShyb3V0ZXMuYXBpLCBhcGlSb3V0ZXIpO1xuYXBwLnVzZShyb3V0ZXMuaG9tZSwgZ2xvYmFsUm91dGVyKTtcbmFwcC51c2Uocm91dGVzLnVzZXJzLCB1c2VyUm91dGVyKTtcbmFwcC51c2Uocm91dGVzLmRhdGEsIGRhdGFSb3V0ZXIpO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGFwcDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "contentSecurityPolicy",
        "set",
        "express",
        "bodyPareser",
        "json",
        "urlencoded",
        "extended",
        "secret",
        "process",
        "env",
        "COOKIE_SECRET",
        "resave",
        "saveUninitialized",
        "store",
        "Mongostore",
        "create",
        "mongoUrl",
        "MONGO_URL",
        "autoRemove",
        "ttl",
        "passport",
        "initialize",
        "session",
        "localsMiddleware",
        "routes",
        "api",
        "apiRouter",
        "home",
        "globalRouter",
        "users",
        "userRouter",
        "data",
        "dataRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAGA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO;AACXC,EAAAA,qBAAqB,EAAE;AADZ,CAAP,CAAR,E,CAEK;;AACLF,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAA+B;;AAC/BH,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBG,8BAAe,SAAf,CAApB,E,CAAgD;;AAChDJ,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBG,8BAAe,QAAf,CAAnB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBG,8BAAe,OAAf,CAAlB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,+BAAR,E,CAAyB;;AACzBD,GAAG,CAACC,GAAJ,CAAQI,uBAAYC,IAAZ,EAAR,E,CAA6B;;AAC7BN,GAAG,CAACC,GAAJ,CAAQI,uBAAYE,UAAZ,CAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB,CAAR,E,CAAqD;;AACrDR,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;;AACxBD,GAAG,CAACC,GAAJ,CAAQ,gCAAQ;AACZQ,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADR;AAEZC,EAAAA,MAAM,EAAE,KAFI;AAGZC,EAAAA,iBAAiB,EAAE,KAHP;AAIZC,EAAAA,KAAK,EAAEC,yBAAWC,MAAX,CAAkB;AAAEC,IAAAA,QAAQ,EAAER,OAAO,CAACC,GAAR,CAAYQ,SAAxB;AAAmCC,IAAAA,UAAU,EAAE,QAA/C;AAAyDC,IAAAA,GAAG,EAAE,KAAK;AAAnE,GAAlB;AAJK,CAAR,CAAR;AAMArB,GAAG,CAACC,GAAJ,CAAQqB,qBAASC,UAAT,EAAR;AACAvB,GAAG,CAACC,GAAJ,CAAQqB,qBAASE,OAAT,EAAR;AACAxB,GAAG,CAACC,GAAJ,CAAQwB,4BAAR,E,CAEA;;AACAzB,GAAG,CAACC,GAAJ,CAAQyB,mBAAOC,GAAf,EAAoBC,qBAApB;AACA5B,GAAG,CAACC,GAAJ,CAAQyB,mBAAOG,IAAf,EAAqBC,wBAArB;AACA9B,GAAG,CAACC,GAAJ,CAAQyB,mBAAOK,KAAf,EAAsBC,sBAAtB;AACAhC,GAAG,CAACC,GAAJ,CAAQyB,mBAAOO,IAAf,EAAqBC,sBAArB;eAGelC,G",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "import express from \"express\";\nimport morgan from \"morgan\";\nimport helmet from \"helmet\";\nimport cookieParser from \"cookie-parser\";\nimport bodyPareser from \"body-parser\";\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport Mongostore from \"connect-mongo\";\nimport globalRouter from \"./routers/globalRouter\";\nimport userRouter from \"./routers/userRouter\";\nimport dataRouter from \"./routers/dataRouter\";\nimport apiRouter from \"./routers/apiRouter\";\nimport routes from \"./routes\";\nimport { localsMiddleware } from './middleware';\nimport \"./passport\";\n\nconst app = express();\n\n\n//middlewares\napp.use(helmet({ \n    contentSecurityPolicy: false \n})); // 보안\napp.set(\"view engine\", \"pug\"); //view Engine\napp.use(\"/uploads\", express.static('uploads')); // /uploads로 접근하면 uploads파일로 싸줌\napp.use(\"/static\", express.static('static'));\napp.use(\"/image\", express.static('image'));\napp.use(cookieParser()); // 쿠키 저장\napp.use(bodyPareser.json()); //JSON 가져옴\napp.use(bodyPareser.urlencoded({ extended: true })); // FORM형식 가져옴\napp.use(morgan(\"dev\")); // 접속 추적\napp.use(session({\n    secret: process.env.COOKIE_SECRET,\n    resave: false,\n    saveUninitialized: false,\n    store: Mongostore.create({ mongoUrl: process.env.MONGO_URL, autoRemove: 'native', ttl: 60 * 60}),\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(localsMiddleware);\n\n//Router\napp.use(routes.api, apiRouter);\napp.use(routes.home, globalRouter);\napp.use(routes.users, userRouter);\napp.use(routes.data, dataRouter);\n\n\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330514636
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/routers/globalRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/routers/globalRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/routers/globalRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/routers/globalRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
        "sourceFileName": "globalRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _dataController = require(\"../controllers/dataController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middleware = require(\"../middleware\");\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar globalRouter = _express[\"default\"].Router();\n\nglobalRouter // Join\n.get(_routes[\"default\"].join, _middleware.onlyPublic, _userController.getJoin).post(_routes[\"default\"].join, _middleware.onlyPublic, _userController.postJoin, _userController.postLogin);\nglobalRouter // Login\n.post(_routes[\"default\"].login, _middleware.onlyPublic, _userController.postLogin).get(_routes[\"default\"].login, _middleware.onlyPublic, _userController.getLogin);\nglobalRouter.get(_routes[\"default\"].google, _userController.googleLogin);\nglobalRouter.get(_routes[\"default\"].googleCallback, _passport[\"default\"].authenticate('google', {\n  successRedirect: \"\".concat(_routes[\"default\"].home),\n  failureRedirect: \"\".concat(_routes[\"default\"].login)\n}));\nglobalRouter.get(_routes[\"default\"].logout, _middleware.onlyPrivate, _userController.logout); // .post(routes.logout)\n\nglobalRouter.get(_routes[\"default\"].home, _dataController.home).post(_routes[\"default\"].home, _dataController.postHome);\nglobalRouter.get(_routes[\"default\"].me, _userController.getMe);\nglobalRouter.get(_routes[\"default\"].search, _dataController.search);\nvar _default = globalRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbFJvdXRlci5qcyJdLCJuYW1lcyI6WyJnbG9iYWxSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Iiwicm91dGVzIiwiam9pbiIsIm9ubHlQdWJsaWMiLCJnZXRKb2luIiwicG9zdCIsInBvc3RKb2luIiwicG9zdExvZ2luIiwibG9naW4iLCJnZXRMb2dpbiIsImdvb2dsZSIsImdvb2dsZUxvZ2luIiwiZ29vZ2xlQ2FsbGJhY2siLCJwYXNzcG9ydCIsImF1dGhlbnRpY2F0ZSIsInN1Y2Nlc3NSZWRpcmVjdCIsImhvbWUiLCJmYWlsdXJlUmVkaXJlY3QiLCJsb2dvdXQiLCJvbmx5UHJpdmF0ZSIsInBvc3RIb21lIiwibWUiLCJnZXRNZSIsInNlYXJjaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBR0EsSUFBTUEsWUFBWSxHQUFHQyxvQkFBUUMsTUFBUixFQUFyQjs7QUFFQUYsWUFBWSxDQUFDO0FBQUQsQ0FDUEcsR0FETCxDQUNTQyxtQkFBT0MsSUFEaEIsRUFDc0JDLHNCQUR0QixFQUNrQ0MsdUJBRGxDLEVBRUtDLElBRkwsQ0FFVUosbUJBQU9DLElBRmpCLEVBRXVCQyxzQkFGdkIsRUFFbUNHLHdCQUZuQyxFQUU2Q0MseUJBRjdDO0FBS0FWLFlBQVksQ0FBQztBQUFELENBQ1BRLElBREwsQ0FDVUosbUJBQU9PLEtBRGpCLEVBQ3dCTCxzQkFEeEIsRUFDb0NJLHlCQURwQyxFQUVLUCxHQUZMLENBRVNDLG1CQUFPTyxLQUZoQixFQUV1Qkwsc0JBRnZCLEVBRW1DTSx3QkFGbkM7QUFJQVosWUFBWSxDQUFDRyxHQUFiLENBQWlCQyxtQkFBT1MsTUFBeEIsRUFBZ0NDLDJCQUFoQztBQUVBZCxZQUFZLENBQUNHLEdBQWIsQ0FBaUJDLG1CQUFPVyxjQUF4QixFQUNJQyxxQkFBU0MsWUFBVCxDQUFzQixRQUF0QixFQUFnQztBQUM1QkMsRUFBQUEsZUFBZSxZQUFLZCxtQkFBT2UsSUFBWixDQURhO0FBRTVCQyxFQUFBQSxlQUFlLFlBQUtoQixtQkFBT08sS0FBWjtBQUZhLENBQWhDLENBREo7QUFPQVgsWUFBWSxDQUNQRyxHQURMLENBQ1NDLG1CQUFPaUIsTUFEaEIsRUFDd0JDLHVCQUR4QixFQUNxQ0Qsc0JBRHJDLEUsQ0FFSTs7QUFFSnJCLFlBQVksQ0FDUEcsR0FETCxDQUNTQyxtQkFBT2UsSUFEaEIsRUFDc0JBLG9CQUR0QixFQUVLWCxJQUZMLENBRVVKLG1CQUFPZSxJQUZqQixFQUV1Qkksd0JBRnZCO0FBS0F2QixZQUFZLENBQUNHLEdBQWIsQ0FBaUJDLG1CQUFPb0IsRUFBeEIsRUFBNEJDLHFCQUE1QjtBQUNBekIsWUFBWSxDQUFDRyxHQUFiLENBQWlCQyxtQkFBT3NCLE1BQXhCLEVBQWdDQSxzQkFBaEM7ZUFFZTFCLFkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyL3JvdXRlcnMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBwYXNzcG9ydCBmcm9tICdwYXNzcG9ydCc7XG5pbXBvcnQgeyBob21lLCBwb3N0SG9tZSwgc2VhcmNoIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvZGF0YUNvbnRyb2xsZXInO1xuaW1wb3J0IHsgZ2V0Sm9pbiwgcG9zdEpvaW4sIGxvZ291dCwgZ2V0TG9naW4sIHBvc3RMb2dpbiwgZ29vZ2xlTG9naW4sIGdldE1lIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlckNvbnRyb2xsZXInO1xuaW1wb3J0IHsgb25seVByaXZhdGUsIG9ubHlQdWJsaWMgfSBmcm9tICcuLi9taWRkbGV3YXJlJztcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4uL3JvdXRlc1wiO1xuXG5cbmNvbnN0IGdsb2JhbFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmdsb2JhbFJvdXRlciAvLyBKb2luXG4gICAgLmdldChyb3V0ZXMuam9pbiwgb25seVB1YmxpYywgZ2V0Sm9pbilcbiAgICAucG9zdChyb3V0ZXMuam9pbiwgb25seVB1YmxpYywgcG9zdEpvaW4sIHBvc3RMb2dpbik7XG5cbiAgICBcbmdsb2JhbFJvdXRlciAvLyBMb2dpblxuICAgIC5wb3N0KHJvdXRlcy5sb2dpbiwgb25seVB1YmxpYywgcG9zdExvZ2luKVxuICAgIC5nZXQocm91dGVzLmxvZ2luLCBvbmx5UHVibGljLCBnZXRMb2dpbik7XG5cbmdsb2JhbFJvdXRlci5nZXQocm91dGVzLmdvb2dsZSwgZ29vZ2xlTG9naW4pO1xuXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5nb29nbGVDYWxsYmFjaywgXG4gICAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdnb29nbGUnLCB7XG4gICAgICAgIHN1Y2Nlc3NSZWRpcmVjdDogYCR7cm91dGVzLmhvbWV9YCxcbiAgICAgICAgZmFpbHVyZVJlZGlyZWN0OiBgJHtyb3V0ZXMubG9naW59YFxuICAgIH1cbikpO1xuICAgICAgICBcbmdsb2JhbFJvdXRlclxuICAgIC5nZXQocm91dGVzLmxvZ291dCwgb25seVByaXZhdGUsIGxvZ291dClcbiAgICAvLyAucG9zdChyb3V0ZXMubG9nb3V0KVxuXG5nbG9iYWxSb3V0ZXJcbiAgICAuZ2V0KHJvdXRlcy5ob21lLCBob21lKVxuICAgIC5wb3N0KHJvdXRlcy5ob21lLCBwb3N0SG9tZSk7XG5cblxuZ2xvYmFsUm91dGVyLmdldChyb3V0ZXMubWUsIGdldE1lKTtcbmdsb2JhbFJvdXRlci5nZXQocm91dGVzLnNlYXJjaCwgc2VhcmNoKTtcblxuZXhwb3J0IGRlZmF1bHQgZ2xvYmFsUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "globalRouter.js"
      ],
      "names": [
        "globalRouter",
        "express",
        "Router",
        "get",
        "routes",
        "join",
        "onlyPublic",
        "getJoin",
        "post",
        "postJoin",
        "postLogin",
        "login",
        "getLogin",
        "google",
        "googleLogin",
        "googleCallback",
        "passport",
        "authenticate",
        "successRedirect",
        "home",
        "failureRedirect",
        "logout",
        "onlyPrivate",
        "postHome",
        "me",
        "getMe",
        "search"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;AAEAF,YAAY,CAAC;AAAD,CACPG,GADL,CACSC,mBAAOC,IADhB,EACsBC,sBADtB,EACkCC,uBADlC,EAEKC,IAFL,CAEUJ,mBAAOC,IAFjB,EAEuBC,sBAFvB,EAEmCG,wBAFnC,EAE6CC,yBAF7C;AAKAV,YAAY,CAAC;AAAD,CACPQ,IADL,CACUJ,mBAAOO,KADjB,EACwBL,sBADxB,EACoCI,yBADpC,EAEKP,GAFL,CAESC,mBAAOO,KAFhB,EAEuBL,sBAFvB,EAEmCM,wBAFnC;AAIAZ,YAAY,CAACG,GAAb,CAAiBC,mBAAOS,MAAxB,EAAgCC,2BAAhC;AAEAd,YAAY,CAACG,GAAb,CAAiBC,mBAAOW,cAAxB,EACIC,qBAASC,YAAT,CAAsB,QAAtB,EAAgC;AAC5BC,EAAAA,eAAe,YAAKd,mBAAOe,IAAZ,CADa;AAE5BC,EAAAA,eAAe,YAAKhB,mBAAOO,KAAZ;AAFa,CAAhC,CADJ;AAOAX,YAAY,CACPG,GADL,CACSC,mBAAOiB,MADhB,EACwBC,uBADxB,EACqCD,sBADrC,E,CAEI;;AAEJrB,YAAY,CACPG,GADL,CACSC,mBAAOe,IADhB,EACsBA,oBADtB,EAEKX,IAFL,CAEUJ,mBAAOe,IAFjB,EAEuBI,wBAFvB;AAKAvB,YAAY,CAACG,GAAb,CAAiBC,mBAAOoB,EAAxB,EAA4BC,qBAA5B;AACAzB,YAAY,CAACG,GAAb,CAAiBC,mBAAOsB,MAAxB,EAAgCA,sBAAhC;eAEe1B,Y",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "sourcesContent": [
        "import express from \"express\";\nimport passport from 'passport';\nimport { home, postHome, search } from '../controllers/dataController';\nimport { getJoin, postJoin, logout, getLogin, postLogin, googleLogin, getMe } from '../controllers/userController';\nimport { onlyPrivate, onlyPublic } from '../middleware';\nimport routes from \"../routes\";\n\n\nconst globalRouter = express.Router();\n\nglobalRouter // Join\n    .get(routes.join, onlyPublic, getJoin)\n    .post(routes.join, onlyPublic, postJoin, postLogin);\n\n    \nglobalRouter // Login\n    .post(routes.login, onlyPublic, postLogin)\n    .get(routes.login, onlyPublic, getLogin);\n\nglobalRouter.get(routes.google, googleLogin);\n\nglobalRouter.get(routes.googleCallback, \n    passport.authenticate('google', {\n        successRedirect: `${routes.home}`,\n        failureRedirect: `${routes.login}`\n    }\n));\n        \nglobalRouter\n    .get(routes.logout, onlyPrivate, logout)\n    // .post(routes.logout)\n\nglobalRouter\n    .get(routes.home, home)\n    .post(routes.home, postHome);\n\n\nglobalRouter.get(routes.me, getMe);\nglobalRouter.get(routes.search, search);\n\nexport default globalRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330301345
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/controllers/dataController.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/controllers/dataController.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/controllers/dataController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/controllers/dataController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
        "sourceFileName": "dataController.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.weather = exports.dataDetail = exports.datas = exports.search = exports.postHome = exports.home = void 0;\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _data = _interopRequireDefault(require(\"../models/data\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar home = function home(req, res) {\n  res.render(\"home\", {\n    pageTitle: \"Home\"\n  });\n};\n\nexports.home = home;\n\nvar postHome = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user, jsonUser, loggedUser;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = req.body.user;\n            jsonUser = JSON.parse(user);\n            _context.prev = 2;\n            _context.next = 5;\n            return _User[\"default\"].findOne({\n              email: jsonUser.email\n            });\n\n          case 5:\n            loggedUser = _context.sent;\n            res.render('home', {\n              loggedUser: loggedUser\n            });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n            res.redirect(_routes[\"default\"].login);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function postHome(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.postHome = postHome;\n\nvar search = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var searchingBy;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            searchingBy = req.query.term;\n\n            try {} catch (err) {\n              console.log(err);\n            }\n\n            res.render(\"Search\", {\n              pageTitle: \"Searching\",\n              searchingBy: searchingBy\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function search(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.search = search;\n\nvar datas = function datas(req, res) {\n  res.render(\"datas\", {\n    pageTitle: \"Data\"\n  });\n};\n\nexports.datas = datas;\n\nvar dataDetail = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var id, data;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = req.params.id;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return findById(id);\n\n          case 4:\n            data = _context3.sent;\n            res.render(\"dataDetail\", {\n              pageTitle: \"DataDetail\"\n            });\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.redirect(_routes[\"default\"].home);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function dataDetail(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.dataDetail = dataDetail;\n\nvar weather = function weather(req, res) {\n  res.render(\"weather\", {\n    pageTitle: \"weather\"\n  });\n};\n\nexports.weather = weather;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImhvbWUiLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJwYWdlVGl0bGUiLCJwb3N0SG9tZSIsInVzZXIiLCJib2R5IiwianNvblVzZXIiLCJKU09OIiwicGFyc2UiLCJVc2VyIiwiZmluZE9uZSIsImVtYWlsIiwibG9nZ2VkVXNlciIsImNvbnNvbGUiLCJsb2ciLCJyZWRpcmVjdCIsInJvdXRlcyIsImxvZ2luIiwic2VhcmNoIiwic2VhcmNoaW5nQnkiLCJxdWVyeSIsInRlcm0iLCJlcnIiLCJkYXRhcyIsImRhdGFEZXRhaWwiLCJpZCIsInBhcmFtcyIsImZpbmRCeUlkIiwiZGF0YSIsIndlYXRoZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFHTyxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBTyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsTUFBWCxFQUFtQjtBQUFFQyxJQUFBQSxTQUFTLEVBQUU7QUFBYixHQUFuQjtBQUNILENBRk07Ozs7QUFJQSxJQUFNQyxRQUFRO0FBQUEscUVBQUcsaUJBQU9KLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFUkksWUFBQUEsSUFGUSxHQUdoQkwsR0FIZ0IsQ0FFaEJNLElBRmdCLENBRVJELElBRlE7QUFJZEUsWUFBQUEsUUFKYyxHQUlIQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0osSUFBWCxDQUpHO0FBQUE7QUFBQTtBQUFBLG1CQU1TSyxpQkFBS0MsT0FBTCxDQUFhO0FBQUVDLGNBQUFBLEtBQUssRUFBRUwsUUFBUSxDQUFDSztBQUFsQixhQUFiLENBTlQ7O0FBQUE7QUFNVkMsWUFBQUEsVUFOVTtBQU9oQlosWUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsTUFBWCxFQUFtQjtBQUFFVyxjQUFBQSxVQUFVLEVBQVZBO0FBQUYsYUFBbkI7QUFQZ0I7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFTaEJDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBZCxZQUFBQSxHQUFHLENBQUNlLFFBQUosQ0FBYUMsbUJBQU9DLEtBQXBCOztBQVZnQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFSZCxRQUFRO0FBQUE7QUFBQTtBQUFBLEdBQWQ7Ozs7QUFjQSxJQUFNZSxNQUFNO0FBQUEsc0VBQUcsa0JBQU1uQixHQUFOLEVBQVdDLEdBQVg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUNtQixZQUFBQSxXQUZELEdBR2RwQixHQUhjLENBRWRxQixLQUZjLENBRUxDLElBRks7O0FBSWxCLGdCQUFJLENBQ0gsQ0FERCxDQUNFLE9BQU1DLEdBQU4sRUFBVztBQUNUVCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEsR0FBWjtBQUNIOztBQUNEdEIsWUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsUUFBWCxFQUFxQjtBQUFFQyxjQUFBQSxTQUFTLEVBQUUsV0FBYjtBQUEwQmlCLGNBQUFBLFdBQVcsRUFBWEE7QUFBMUIsYUFBckI7O0FBUmtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQU5ELE1BQU07QUFBQTtBQUFBO0FBQUEsR0FBWjs7OztBQVdBLElBQU1LLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUN4QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQkEsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFQyxJQUFBQSxTQUFTLEVBQUU7QUFBYixHQUFwQjtBQUNILENBRk07Ozs7QUFJQSxJQUFNc0IsVUFBVTtBQUFBLHNFQUFHLGtCQUFNekIsR0FBTixFQUFXQyxHQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVSeUIsWUFBQUEsRUFGUSxHQUdsQjFCLEdBSGtCLENBRWxCMkIsTUFGa0IsQ0FFUkQsRUFGUTtBQUFBO0FBQUE7QUFBQSxtQkFLQ0UsUUFBUSxDQUFDRixFQUFELENBTFQ7O0FBQUE7QUFLWkcsWUFBQUEsSUFMWTtBQU1sQjVCLFlBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLFlBQVgsRUFBeUI7QUFBRUMsY0FBQUEsU0FBUyxFQUFFO0FBQWIsYUFBekI7QUFOa0I7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFRbEJGLFlBQUFBLEdBQUcsQ0FBQ2UsUUFBSixDQUFhQyxtQkFBT2xCLElBQXBCOztBQVJrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFWMEIsVUFBVTtBQUFBO0FBQUE7QUFBQSxHQUFoQjs7OztBQVlBLElBQU1LLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUM5QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ0EsRUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsU0FBWCxFQUFzQjtBQUFFQyxJQUFBQSxTQUFTLEVBQUU7QUFBYixHQUF0QjtBQUNILENBRk0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByb3V0ZXMgZnJvbSBcIi4uL3JvdXRlc1wiO1xuaW1wb3J0IERhdGEgZnJvbSBcIi4uL21vZGVscy9kYXRhXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vbW9kZWxzL1VzZXJcIlxuXG5cbmV4cG9ydCBjb25zdCBob21lID0gKHJlcSwgcmVzKSA9PiB7XG4gICAgcmVzLnJlbmRlcihcImhvbWVcIiwgeyBwYWdlVGl0bGU6IFwiSG9tZVwiIH0pXG59O1xuXG5leHBvcnQgY29uc3QgcG9zdEhvbWUgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IFxuICAgICAgICBib2R5OiB7IHVzZXIgfVxuICAgIH0gPSByZXE7XG4gICAgY29uc3QganNvblVzZXIgPSBKU09OLnBhcnNlKHVzZXIpO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGxvZ2dlZFVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyBlbWFpbDoganNvblVzZXIuZW1haWwgfSk7XG4gICAgICAgIHJlcy5yZW5kZXIoJ2hvbWUnLCB7IGxvZ2dlZFVzZXIgfSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMubG9naW4pO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzZWFyY2ggPSBhc3luYyhyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgXG4gICAgICAgIHF1ZXJ5OiB7IHRlcm06IHNlYXJjaGluZ0J5IH1cbiAgICB9ID0gcmVxO1xuICAgIHRyeSB7XG4gICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9XG4gICAgcmVzLnJlbmRlcihcIlNlYXJjaFwiLCB7IHBhZ2VUaXRsZTogXCJTZWFyY2hpbmdcIiwgc2VhcmNoaW5nQnkgfSlcbn07XG5cbmV4cG9ydCBjb25zdCBkYXRhcyA9IChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5yZW5kZXIoXCJkYXRhc1wiLCB7IHBhZ2VUaXRsZTogXCJEYXRhXCIgfSlcbn07XG5cbmV4cG9ydCBjb25zdCBkYXRhRGV0YWlsID0gYXN5bmMocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IFxuICAgICAgICBwYXJhbXM6IHsgaWQgfVxuICAgIH0gPSByZXE7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGZpbmRCeUlkKGlkKVxuICAgICAgICByZXMucmVuZGVyKFwiZGF0YURldGFpbFwiLCB7IHBhZ2VUaXRsZTogXCJEYXRhRGV0YWlsXCIgfSlcbiAgICB9IGNhdGNoKGVycm9yKSB7XG4gICAgICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuaG9tZSk7XG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHdlYXRoZXIgPSAocmVxLCByZXMpID0+IHtcbiAgICByZXMucmVuZGVyKFwid2VhdGhlclwiLCB7IHBhZ2VUaXRsZTogXCJ3ZWF0aGVyXCIgfSk7XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "dataController.js"
      ],
      "names": [
        "home",
        "req",
        "res",
        "render",
        "pageTitle",
        "postHome",
        "user",
        "body",
        "jsonUser",
        "JSON",
        "parse",
        "User",
        "findOne",
        "email",
        "loggedUser",
        "console",
        "log",
        "redirect",
        "routes",
        "login",
        "search",
        "searchingBy",
        "query",
        "term",
        "err",
        "datas",
        "dataDetail",
        "id",
        "params",
        "findById",
        "data",
        "weather"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAGO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAnB;AACH,CAFM;;;;AAIA,IAAMC,QAAQ;AAAA,qEAAG,iBAAOJ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAERI,YAAAA,IAFQ,GAGhBL,GAHgB,CAEhBM,IAFgB,CAERD,IAFQ;AAIdE,YAAAA,QAJc,GAIHC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAJG;AAAA;AAAA;AAAA,mBAMSK,iBAAKC,OAAL,CAAa;AAAEC,cAAAA,KAAK,EAAEL,QAAQ,CAACK;AAAlB,aAAb,CANT;;AAAA;AAMVC,YAAAA,UANU;AAOhBZ,YAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAmB;AAAEW,cAAAA,UAAU,EAAVA;AAAF,aAAnB;AAPgB;AAAA;;AAAA;AAAA;AAAA;AAShBC,YAAAA,OAAO,CAACC,GAAR;AACAd,YAAAA,GAAG,CAACe,QAAJ,CAAaC,mBAAOC,KAApB;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARd,QAAQ;AAAA;AAAA;AAAA,GAAd;;;;AAcA,IAAMe,MAAM;AAAA,sEAAG,kBAAMnB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAECmB,YAAAA,WAFD,GAGdpB,GAHc,CAEdqB,KAFc,CAELC,IAFK;;AAIlB,gBAAI,CACH,CADD,CACE,OAAMC,GAAN,EAAW;AACTT,cAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH;;AACDtB,YAAAA,GAAG,CAACC,MAAJ,CAAW,QAAX,EAAqB;AAAEC,cAAAA,SAAS,EAAE,WAAb;AAA0BiB,cAAAA,WAAW,EAAXA;AAA1B,aAArB;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAND,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAWA,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACxB,GAAD,EAAMC,GAAN,EAAc;AAC/BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAApB;AACH,CAFM;;;;AAIA,IAAMsB,UAAU;AAAA,sEAAG,kBAAMzB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAERyB,YAAAA,EAFQ,GAGlB1B,GAHkB,CAElB2B,MAFkB,CAERD,EAFQ;AAAA;AAAA;AAAA,mBAKCE,QAAQ,CAACF,EAAD,CALT;;AAAA;AAKZG,YAAAA,IALY;AAMlB5B,YAAAA,GAAG,CAACC,MAAJ,CAAW,YAAX,EAAyB;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAzB;AANkB;AAAA;;AAAA;AAAA;AAAA;AAQlBF,YAAAA,GAAG,CAACe,QAAJ,CAAaC,mBAAOlB,IAApB;;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAV0B,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAYA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAAC9B,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,SAAX,EAAsB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAtB;AACH,CAFM",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
      "sourcesContent": [
        "import routes from \"../routes\";\nimport Data from \"../models/data\";\nimport User from \"../models/User\"\n\n\nexport const home = (req, res) => {\n    res.render(\"home\", { pageTitle: \"Home\" })\n};\n\nexport const postHome = async (req, res) => {\n    const { \n        body: { user }\n    } = req;\n    const jsonUser = JSON.parse(user);\n    try {\n        const loggedUser = await User.findOne({ email: jsonUser.email });\n        res.render('home', { loggedUser });\n    } catch (err) {\n        console.log(err);\n        res.redirect(routes.login);\n    }\n};\n\nexport const search = async(req, res) => {\n    const { \n        query: { term: searchingBy }\n    } = req;\n    try {\n    } catch(err) {\n        console.log(err);\n    }\n    res.render(\"Search\", { pageTitle: \"Searching\", searchingBy })\n};\n\nexport const datas = (req, res) => {\n    res.render(\"datas\", { pageTitle: \"Data\" })\n};\n\nexport const dataDetail = async(req, res) => {\n    const { \n        params: { id }\n    } = req;\n    try {\n        const data = await findById(id)\n        res.render(\"dataDetail\", { pageTitle: \"DataDetail\" })\n    } catch(error) {\n        res.redirect(routes.home);\n    }\n};\n\nexport const weather = (req, res) => {\n    res.render(\"weather\", { pageTitle: \"weather\" });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1618329459328
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/routes.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/routes.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/routes.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "routes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// Global\nvar HOME = \"/\";\nvar JOIN = \"/join\";\nvar LOGIN = \"/login\";\nvar LOGOUT = \"/logout\";\nvar SEARCH = \"/search\"; // Users\n\nvar USERS = \"/users\";\nvar USER_DETAIL = \"/:id\";\nvar EDIT_PROFILE = \"/edit-profile\";\nvar CHANGE_PASSWORD = \"/change-password\";\nvar ME = \"/me\"; // data\n\nvar DATAS = \"/data\";\nvar DATA_DETAIL = \"/:id/detail\"; // Social Login\n\nvar GOOGLE = \"/auth/google\";\nvar GOOGLE_CALLBACK = \"/auth/google/callback\"; // API\n\nvar API = \"/api\";\nvar WEATHER = \"/weather\";\nvar KAKAO_LOGIN = \"/:id/kakao\";\nvar routes = {\n  //Global\n  home: HOME,\n  join: JOIN,\n  login: LOGIN,\n  logout: LOGOUT,\n  search: SEARCH,\n  //Users\n  users: USERS,\n  userDetail: function userDetail(id) {\n    if (id) {\n      return \"/users/\".concat(id);\n    } else {\n      return USER_DETAIL;\n    }\n  },\n  editProfile: EDIT_PROFILE,\n  changePassword: CHANGE_PASSWORD,\n  me: ME,\n  //Datas\n  data: DATAS,\n  dataDetail: function dataDetail(id) {\n    if (id) {\n      return \"/data/\".concat(id, \"/detail\");\n    } else {\n      return DATA_DETAIL;\n    }\n  },\n  // Social Login\n  google: GOOGLE,\n  googleCallback: GOOGLE_CALLBACK,\n  // API\n  api: API,\n  weather: WEATHER,\n  kakaoLogin: KAKAO_LOGIN\n};\nvar _default = routes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJIT01FIiwiSk9JTiIsIkxPR0lOIiwiTE9HT1VUIiwiU0VBUkNIIiwiVVNFUlMiLCJVU0VSX0RFVEFJTCIsIkVESVRfUFJPRklMRSIsIkNIQU5HRV9QQVNTV09SRCIsIk1FIiwiREFUQVMiLCJEQVRBX0RFVEFJTCIsIkdPT0dMRSIsIkdPT0dMRV9DQUxMQkFDSyIsIkFQSSIsIldFQVRIRVIiLCJLQUtBT19MT0dJTiIsInJvdXRlcyIsImhvbWUiLCJqb2luIiwibG9naW4iLCJsb2dvdXQiLCJzZWFyY2giLCJ1c2VycyIsInVzZXJEZXRhaWwiLCJpZCIsImVkaXRQcm9maWxlIiwiY2hhbmdlUGFzc3dvcmQiLCJtZSIsImRhdGEiLCJkYXRhRGV0YWlsIiwiZ29vZ2xlIiwiZ29vZ2xlQ2FsbGJhY2siLCJhcGkiLCJ3ZWF0aGVyIiwia2FrYW9Mb2dpbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFNQSxJQUFJLEdBQUcsR0FBYjtBQUNBLElBQU1DLElBQUksR0FBRyxPQUFiO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLFFBQWQ7QUFDQSxJQUFNQyxNQUFNLEdBQUcsU0FBZjtBQUNBLElBQU1DLE1BQU0sR0FBRyxTQUFmLEMsQ0FFQTs7QUFDQSxJQUFNQyxLQUFLLEdBQUcsUUFBZDtBQUNBLElBQU1DLFdBQVcsR0FBRyxNQUFwQjtBQUNBLElBQU1DLFlBQVksR0FBRyxlQUFyQjtBQUNBLElBQU1DLGVBQWUsR0FBRyxrQkFBeEI7QUFDQSxJQUFNQyxFQUFFLEdBQUcsS0FBWCxDLENBRUE7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLE9BQWQ7QUFDQSxJQUFNQyxXQUFXLEdBQUcsYUFBcEIsQyxDQUVBOztBQUNBLElBQU1DLE1BQU0sR0FBRyxjQUFmO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLHVCQUF4QixDLENBRUE7O0FBQ0EsSUFBTUMsR0FBRyxHQUFHLE1BQVo7QUFDQSxJQUFNQyxPQUFPLEdBQUcsVUFBaEI7QUFDQSxJQUFNQyxXQUFXLEdBQUcsWUFBcEI7QUFFQSxJQUFNQyxNQUFNLEdBQUc7QUFDWDtBQUNBQyxFQUFBQSxJQUFJLEVBQUVsQixJQUZLO0FBR1htQixFQUFBQSxJQUFJLEVBQUVsQixJQUhLO0FBSVhtQixFQUFBQSxLQUFLLEVBQUVsQixLQUpJO0FBS1htQixFQUFBQSxNQUFNLEVBQUVsQixNQUxHO0FBTVhtQixFQUFBQSxNQUFNLEVBQUVsQixNQU5HO0FBUVg7QUFDQW1CLEVBQUFBLEtBQUssRUFBRWxCLEtBVEk7QUFVWG1CLEVBQUFBLFVBQVUsRUFBRSxvQkFBQUMsRUFBRSxFQUFJO0FBQ2QsUUFBSUEsRUFBSixFQUFRO0FBQ04sOEJBQWlCQSxFQUFqQjtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU9uQixXQUFQO0FBQ0Q7QUFDSixHQWhCVTtBQWlCWG9CLEVBQUFBLFdBQVcsRUFBRW5CLFlBakJGO0FBa0JYb0IsRUFBQUEsY0FBYyxFQUFFbkIsZUFsQkw7QUFtQlhvQixFQUFBQSxFQUFFLEVBQUVuQixFQW5CTztBQXFCWDtBQUNBb0IsRUFBQUEsSUFBSSxFQUFFbkIsS0F0Qks7QUF1QlhvQixFQUFBQSxVQUFVLEVBQUUsb0JBQUFMLEVBQUUsRUFBSTtBQUNkLFFBQUlBLEVBQUosRUFBUTtBQUNOLDZCQUFnQkEsRUFBaEI7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPZCxXQUFQO0FBQ0Q7QUFDSixHQTdCVTtBQStCWDtBQUNBb0IsRUFBQUEsTUFBTSxFQUFFbkIsTUFoQ0c7QUFpQ1hvQixFQUFBQSxjQUFjLEVBQUVuQixlQWpDTDtBQW1DWDtBQUNBb0IsRUFBQUEsR0FBRyxFQUFFbkIsR0FwQ007QUFxQ1hvQixFQUFBQSxPQUFPLEVBQUVuQixPQXJDRTtBQXNDWG9CLEVBQUFBLFVBQVUsRUFBRW5CO0FBdENELENBQWY7ZUF5Q2VDLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEdsb2JhbFxuY29uc3QgSE9NRSA9IFwiL1wiO1xuY29uc3QgSk9JTiA9IFwiL2pvaW5cIjtcbmNvbnN0IExPR0lOID0gXCIvbG9naW5cIjtcbmNvbnN0IExPR09VVCA9IFwiL2xvZ291dFwiO1xuY29uc3QgU0VBUkNIID0gXCIvc2VhcmNoXCI7XG5cbi8vIFVzZXJzXG5jb25zdCBVU0VSUyA9IFwiL3VzZXJzXCI7XG5jb25zdCBVU0VSX0RFVEFJTCA9IFwiLzppZFwiO1xuY29uc3QgRURJVF9QUk9GSUxFID0gXCIvZWRpdC1wcm9maWxlXCI7XG5jb25zdCBDSEFOR0VfUEFTU1dPUkQgPSBcIi9jaGFuZ2UtcGFzc3dvcmRcIjtcbmNvbnN0IE1FID0gXCIvbWVcIjtcblxuLy8gZGF0YVxuY29uc3QgREFUQVMgPSBcIi9kYXRhXCI7XG5jb25zdCBEQVRBX0RFVEFJTCA9IFwiLzppZC9kZXRhaWxcIjtcblxuLy8gU29jaWFsIExvZ2luXG5jb25zdCBHT09HTEUgPSBcIi9hdXRoL2dvb2dsZVwiO1xuY29uc3QgR09PR0xFX0NBTExCQUNLID0gXCIvYXV0aC9nb29nbGUvY2FsbGJhY2tcIjtcblxuLy8gQVBJXG5jb25zdCBBUEkgPSBcIi9hcGlcIjtcbmNvbnN0IFdFQVRIRVIgPSBcIi93ZWF0aGVyXCI7XG5jb25zdCBLQUtBT19MT0dJTiA9IFwiLzppZC9rYWthb1wiO1xuXG5jb25zdCByb3V0ZXMgPSB7XG4gICAgLy9HbG9iYWxcbiAgICBob21lOiBIT01FLFxuICAgIGpvaW46IEpPSU4sXG4gICAgbG9naW46IExPR0lOLFxuICAgIGxvZ291dDogTE9HT1VULFxuICAgIHNlYXJjaDogU0VBUkNILFxuXG4gICAgLy9Vc2Vyc1xuICAgIHVzZXJzOiBVU0VSUyxcbiAgICB1c2VyRGV0YWlsOiBpZCA9PiB7XG4gICAgICAgIGlmIChpZCkge1xuICAgICAgICAgIHJldHVybiBgL3VzZXJzLyR7aWR9YDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gVVNFUl9ERVRBSUw7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGVkaXRQcm9maWxlOiBFRElUX1BST0ZJTEUsXG4gICAgY2hhbmdlUGFzc3dvcmQ6IENIQU5HRV9QQVNTV09SRCxcbiAgICBtZTogTUUsXG4gICAgXG4gICAgLy9EYXRhc1xuICAgIGRhdGE6IERBVEFTLFxuICAgIGRhdGFEZXRhaWw6IGlkID0+IHtcbiAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgcmV0dXJuIGAvZGF0YS8ke2lkfS9kZXRhaWxgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBEQVRBX0RFVEFJTDtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyBTb2NpYWwgTG9naW5cbiAgICBnb29nbGU6IEdPT0dMRSxcbiAgICBnb29nbGVDYWxsYmFjazogR09PR0xFX0NBTExCQUNLLFxuXG4gICAgLy8gQVBJXG4gICAgYXBpOiBBUEksXG4gICAgd2VhdGhlcjogV0VBVEhFUixcbiAgICBrYWthb0xvZ2luOiBLQUtBT19MT0dJTlxufTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVzO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "HOME",
        "JOIN",
        "LOGIN",
        "LOGOUT",
        "SEARCH",
        "USERS",
        "USER_DETAIL",
        "EDIT_PROFILE",
        "CHANGE_PASSWORD",
        "ME",
        "DATAS",
        "DATA_DETAIL",
        "GOOGLE",
        "GOOGLE_CALLBACK",
        "API",
        "WEATHER",
        "KAKAO_LOGIN",
        "routes",
        "home",
        "join",
        "login",
        "logout",
        "search",
        "users",
        "userDetail",
        "id",
        "editProfile",
        "changePassword",
        "me",
        "data",
        "dataDetail",
        "google",
        "googleCallback",
        "api",
        "weather",
        "kakaoLogin"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,IAAI,GAAG,GAAb;AACA,IAAMC,IAAI,GAAG,OAAb;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,MAAM,GAAG,SAAf,C,CAEA;;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,WAAW,GAAG,MAApB;AACA,IAAMC,YAAY,GAAG,eAArB;AACA,IAAMC,eAAe,GAAG,kBAAxB;AACA,IAAMC,EAAE,GAAG,KAAX,C,CAEA;;AACA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,WAAW,GAAG,aAApB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,cAAf;AACA,IAAMC,eAAe,GAAG,uBAAxB,C,CAEA;;AACA,IAAMC,GAAG,GAAG,MAAZ;AACA,IAAMC,OAAO,GAAG,UAAhB;AACA,IAAMC,WAAW,GAAG,YAApB;AAEA,IAAMC,MAAM,GAAG;AACX;AACAC,EAAAA,IAAI,EAAElB,IAFK;AAGXmB,EAAAA,IAAI,EAAElB,IAHK;AAIXmB,EAAAA,KAAK,EAAElB,KAJI;AAKXmB,EAAAA,MAAM,EAAElB,MALG;AAMXmB,EAAAA,MAAM,EAAElB,MANG;AAQX;AACAmB,EAAAA,KAAK,EAAElB,KATI;AAUXmB,EAAAA,UAAU,EAAE,oBAAAC,EAAE,EAAI;AACd,QAAIA,EAAJ,EAAQ;AACN,8BAAiBA,EAAjB;AACD,KAFD,MAEO;AACL,aAAOnB,WAAP;AACD;AACJ,GAhBU;AAiBXoB,EAAAA,WAAW,EAAEnB,YAjBF;AAkBXoB,EAAAA,cAAc,EAAEnB,eAlBL;AAmBXoB,EAAAA,EAAE,EAAEnB,EAnBO;AAqBX;AACAoB,EAAAA,IAAI,EAAEnB,KAtBK;AAuBXoB,EAAAA,UAAU,EAAE,oBAAAL,EAAE,EAAI;AACd,QAAIA,EAAJ,EAAQ;AACN,6BAAgBA,EAAhB;AACD,KAFD,MAEO;AACL,aAAOd,WAAP;AACD;AACJ,GA7BU;AA+BX;AACAoB,EAAAA,MAAM,EAAEnB,MAhCG;AAiCXoB,EAAAA,cAAc,EAAEnB,eAjCL;AAmCX;AACAoB,EAAAA,GAAG,EAAEnB,GApCM;AAqCXoB,EAAAA,OAAO,EAAEnB,OArCE;AAsCXoB,EAAAA,UAAU,EAAEnB;AAtCD,CAAf;eAyCeC,M",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "// Global\nconst HOME = \"/\";\nconst JOIN = \"/join\";\nconst LOGIN = \"/login\";\nconst LOGOUT = \"/logout\";\nconst SEARCH = \"/search\";\n\n// Users\nconst USERS = \"/users\";\nconst USER_DETAIL = \"/:id\";\nconst EDIT_PROFILE = \"/edit-profile\";\nconst CHANGE_PASSWORD = \"/change-password\";\nconst ME = \"/me\";\n\n// data\nconst DATAS = \"/data\";\nconst DATA_DETAIL = \"/:id/detail\";\n\n// Social Login\nconst GOOGLE = \"/auth/google\";\nconst GOOGLE_CALLBACK = \"/auth/google/callback\";\n\n// API\nconst API = \"/api\";\nconst WEATHER = \"/weather\";\nconst KAKAO_LOGIN = \"/:id/kakao\";\n\nconst routes = {\n    //Global\n    home: HOME,\n    join: JOIN,\n    login: LOGIN,\n    logout: LOGOUT,\n    search: SEARCH,\n\n    //Users\n    users: USERS,\n    userDetail: id => {\n        if (id) {\n          return `/users/${id}`;\n        } else {\n          return USER_DETAIL;\n        }\n    },\n    editProfile: EDIT_PROFILE,\n    changePassword: CHANGE_PASSWORD,\n    me: ME,\n    \n    //Datas\n    data: DATAS,\n    dataDetail: id => {\n        if (id) {\n          return `/data/${id}/detail`;\n        } else {\n          return DATA_DETAIL;\n        }\n    },\n\n    // Social Login\n    google: GOOGLE,\n    googleCallback: GOOGLE_CALLBACK,\n\n    // API\n    api: API,\n    weather: WEATHER,\n    kakaoLogin: KAKAO_LOGIN\n};\n\nexport default routes;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330155808
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/models/data.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/models/data.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/models/data.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/models/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
        "sourceFileName": "data.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DataSchema = new _mongoose[\"default\"].Schema({\n  humidity: Number,\n  degree: Number,\n  measuredAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  provided: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  }\n});\n\nvar model = _mongoose[\"default\"].model('Data', DataSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsiRGF0YVNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiaHVtaWRpdHkiLCJOdW1iZXIiLCJkZWdyZWUiLCJtZWFzdXJlZEF0IiwidHlwZSIsIkRhdGUiLCJub3ciLCJwcm92aWRlZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ25DQyxFQUFBQSxRQUFRLEVBQUVDLE1BRHlCO0FBRW5DQyxFQUFBQSxNQUFNLEVBQUVELE1BRjJCO0FBR25DRSxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxJQURFO0FBRVIsZUFBU0EsSUFBSSxDQUFDQztBQUZOLEdBSHVCO0FBT25DQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkgsSUFBQUEsSUFBSSxFQUFFTixxQkFBU0MsTUFBVCxDQUFnQlMsS0FBaEIsQ0FBc0JDLFFBRHRCO0FBRU5DLElBQUFBLEdBQUcsRUFBRTtBQUZDO0FBUHlCLENBQXBCLENBQW5COztBQWFBLElBQU1DLEtBQUssR0FBR2IscUJBQVNhLEtBQVQsQ0FBZSxNQUFmLEVBQXVCZCxVQUF2QixDQUFkOztlQUVlYyxLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgRGF0YVNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGh1bWlkaXR5OiBOdW1iZXIsXG4gICAgZGVncmVlOiBOdW1iZXIsXG4gICAgbWVhc3VyZWRBdDoge1xuICAgICAgICB0eXBlOiBEYXRlLFxuICAgICAgICBkZWZhdWx0OiBEYXRlLm5vd1xuICAgIH0sXG4gICAgcHJvdmlkZWQ6IHtcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6IFwiVXNlclwiXG4gICAgfVxufSk7XG5cbmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ0RhdGEnLCBEYXRhU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgbW9kZWw7Il19",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "DataSchema",
        "mongoose",
        "Schema",
        "humidity",
        "Number",
        "degree",
        "measuredAt",
        "type",
        "Date",
        "now",
        "provided",
        "Types",
        "ObjectId",
        "ref",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,QAAQ,EAAEC,MADyB;AAEnCC,EAAAA,MAAM,EAAED,MAF2B;AAGnCE,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAHuB;AAOnCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEN,qBAASC,MAAT,CAAgBS,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,GAAG,EAAE;AAFC;AAPyB,CAApB,CAAnB;;AAaA,IAAMC,KAAK,GAAGb,qBAASa,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAd;;eAEec,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst DataSchema = new mongoose.Schema({\n    humidity: Number,\n    degree: Number,\n    measuredAt: {\n        type: Date,\n        default: Date.now\n    },\n    provided: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n    }\n});\n\nconst model = mongoose.model('Data', DataSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618331401030
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/models/User.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/models/User.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/models/User.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
        "sourceFileName": "User.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _passportLocalMongoose = _interopRequireDefault(require(\"passport-local-mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar UserSchema = new _mongoose[\"default\"].Schema({\n  name: String,\n  email: String,\n  avatar: String,\n  provider: String,\n  datas: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Data'\n  }]\n}, {\n  versionKey: false\n});\nUserSchema.plugin(_passportLocalMongoose[\"default\"], {\n  usernameField: \"email\"\n});\n\nvar model = _mongoose[\"default\"].model(\"User\", UserSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImVtYWlsIiwiYXZhdGFyIiwicHJvdmlkZXIiLCJkYXRhcyIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwidmVyc2lvbktleSIsInBsdWdpbiIsInBhc3Nwb3J0TG9jYWxNb25nb29zZSIsInVzZXJuYW1lRmllbGQiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ25DQyxFQUFBQSxJQUFJLEVBQUVDLE1BRDZCO0FBRW5DQyxFQUFBQSxLQUFLLEVBQUVELE1BRjRCO0FBR25DRSxFQUFBQSxNQUFNLEVBQUVGLE1BSDJCO0FBSW5DRyxFQUFBQSxRQUFRLEVBQUVILE1BSnlCO0FBS25DSSxFQUFBQSxLQUFLLEVBQUUsQ0FDSDtBQUNJQyxJQUFBQSxJQUFJLEVBQUVSLHFCQUFTQyxNQUFULENBQWdCUSxLQUFoQixDQUFzQkMsUUFEaEM7QUFFSUMsSUFBQUEsR0FBRyxFQUFFO0FBRlQsR0FERztBQUw0QixDQUFwQixFQVdoQjtBQUNDQyxFQUFBQSxVQUFVLEVBQUU7QUFEYixDQVhnQixDQUFuQjtBQWVBYixVQUFVLENBQUNjLE1BQVgsQ0FBa0JDLGlDQUFsQixFQUF5QztBQUFFQyxFQUFBQSxhQUFhLEVBQUU7QUFBakIsQ0FBekM7O0FBRUEsSUFBTUMsS0FBSyxHQUFHaEIscUJBQVNnQixLQUFULENBQWUsTUFBZixFQUF1QmpCLFVBQXZCLENBQWQ7O2VBRWVpQixLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCBwYXNzcG9ydExvY2FsTW9uZ29vc2UgZnJvbSAncGFzc3BvcnQtbG9jYWwtbW9uZ29vc2UnO1xuXG5jb25zdCBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgbmFtZTogU3RyaW5nLFxuICAgIGVtYWlsOiBTdHJpbmcsXG4gICAgYXZhdGFyOiBTdHJpbmcsXG4gICAgcHJvdmlkZXI6IFN0cmluZyxcbiAgICBkYXRhczogW1xuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdEYXRhJ1xuICAgICAgICB9XG4gICAgXVxufSwgeyBcbiAgICB2ZXJzaW9uS2V5OiBmYWxzZVxufSk7XG5cblVzZXJTY2hlbWEucGx1Z2luKHBhc3Nwb3J0TG9jYWxNb25nb29zZSwgeyB1c2VybmFtZUZpZWxkOiBcImVtYWlsXCJ9KTtcblxuY29uc3QgbW9kZWwgPSBtb25nb29zZS5tb2RlbChcIlVzZXJcIiwgVXNlclNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "UserSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "email",
        "avatar",
        "provider",
        "datas",
        "type",
        "Types",
        "ObjectId",
        "ref",
        "versionKey",
        "plugin",
        "passportLocalMongoose",
        "usernameField",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,IAAI,EAAEC,MAD6B;AAEnCC,EAAAA,KAAK,EAAED,MAF4B;AAGnCE,EAAAA,MAAM,EAAEF,MAH2B;AAInCG,EAAAA,QAAQ,EAAEH,MAJyB;AAKnCI,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,IAAI,EAAER,qBAASC,MAAT,CAAgBQ,KAAhB,CAAsBC,QADhC;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADG;AAL4B,CAApB,EAWhB;AACCC,EAAAA,UAAU,EAAE;AADb,CAXgB,CAAnB;AAeAb,UAAU,CAACc,MAAX,CAAkBC,iCAAlB,EAAyC;AAAEC,EAAAA,aAAa,EAAE;AAAjB,CAAzC;;AAEA,IAAMC,KAAK,GAAGhB,qBAASgB,KAAT,CAAe,MAAf,EAAuBjB,UAAvB,CAAd;;eAEeiB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport passportLocalMongoose from 'passport-local-mongoose';\n\nconst UserSchema = new mongoose.Schema({\n    name: String,\n    email: String,\n    avatar: String,\n    provider: String,\n    datas: [\n        {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'Data'\n        }\n    ]\n}, { \n    versionKey: false\n});\n\nUserSchema.plugin(passportLocalMongoose, { usernameField: \"email\"});\n\nconst model = mongoose.model(\"User\", UserSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618328932119
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/controllers/userController.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/controllers/userController.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/controllers/userController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/controllers/userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
        "sourceFileName": "userController.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postChangePassword = exports.getChangePassword = exports.postEditProfile = exports.getEditProfile = exports.userDetail = exports.getMe = exports.logout = exports.postKakaoLogin = exports.googleLoginCallback = exports.googleLogin = exports.postLogin = exports.getLogin = exports.postJoin = exports.getJoin = void 0;\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Global\nvar getJoin = function getJoin(req, res) {\n  res.render(\"join\", {\n    pageTitle: \"Join\"\n  });\n};\n\nexports.getJoin = getJoin;\n\nvar postJoin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var _req$body, name, email, password, password2, user;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, password2 = _req$body.password2;\n\n            if (!(password !== password2)) {\n              _context.next = 6;\n              break;\n            }\n\n            res.status(400);\n            res.render(\"join\", {\n              pageTitle: \"Join\"\n            });\n            _context.next = 19;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return (0, _User[\"default\"])({\n              name: name,\n              email: email,\n              avatar: \"basicimg\"\n            });\n\n          case 9:\n            user = _context.sent;\n            _context.next = 12;\n            return _User[\"default\"].register(user, password);\n\n          case 12:\n            next();\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            console.log(_context.t0);\n            res.redirect(_routes[\"default\"].home);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function postJoin(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.postJoin = postJoin;\n\nvar getLogin = function getLogin(req, res) {\n  return res.render(\"login\", {\n    pageTitle: \"Log In\"\n  });\n};\n\nexports.getLogin = getLogin;\n\nvar postLogin = _passport[\"default\"].authenticate(\"local\", {\n  failureRedirect: _routes[\"default\"].login,\n  successRedirect: _routes[\"default\"].home\n});\n\nexports.postLogin = postLogin;\n\nvar googleLogin = _passport[\"default\"].authenticate('google', {\n  scope: ['email', 'profile']\n});\n\nexports.googleLogin = googleLogin;\n\nvar googleLoginCallback = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(request, accessToken, refreshToken, profile, done) {\n    var _profile$_json, sub, name, email, picture, user, newUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _profile$_json = profile._json, sub = _profile$_json.sub, name = _profile$_json.name, email = _profile$_json.email, picture = _profile$_json.picture;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _User[\"default\"].findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (!user) {\n              _context2.next = 11;\n              break;\n            }\n\n            user.googleId = sub;\n            user.save();\n            return _context2.abrupt(\"return\", done(null, user));\n\n          case 11:\n            _context2.next = 13;\n            return _User[\"default\"].create({\n              email: email,\n              name: name,\n              googleId: sub,\n              avatar: picture\n            });\n\n          case 13:\n            newUser = _context2.sent;\n            newUser.save();\n            return _context2.abrupt(\"return\", done(null, newUser));\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", done(_context2.t0));\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 18]]);\n  }));\n\n  return function googleLoginCallback(_x4, _x5, _x6, _x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.googleLoginCallback = googleLoginCallback;\n\nvar postKakaoLogin = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var id, _req$body$user, profile, host, user, newUser;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = req.params.id, _req$body$user = req.body.user, profile = _req$body$user.profile, host = _req$body$user.host; // token = req.body.token\n\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _User[\"default\"].findOne({\n              email: id\n            });\n\n          case 4:\n            user = _context3.sent;\n\n            if (!user) {\n              _context3.next = 13;\n              break;\n            }\n\n            user.provider = host;\n            user.save();\n            req.session.passport = {\n              user: id,\n              token: req.body.token\n            };\n            req.session.save();\n            res.status(200);\n            _context3.next = 19;\n            break;\n\n          case 13:\n            _context3.next = 15;\n            return _User[\"default\"].create({\n              name: profile.nickname,\n              email: id,\n              avatar: profile.profile_image_url,\n              provider: host\n            });\n\n          case 15:\n            newUser = _context3.sent;\n            newUser.save();\n            req.session.passport = {\n              user: id,\n              token: req.body.token\n            };\n            res.status(200);\n\n          case 19:\n            _context3.next = 25;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(400);\n            console.log(_context3.t0);\n\n          case 25:\n            _context3.prev = 25;\n            res.end();\n            return _context3.finish(25);\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 21, 25, 28]]);\n  }));\n\n  return function postKakaoLogin(_x9, _x10) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.postKakaoLogin = postKakaoLogin;\n\nvar logout = function logout(req, res) {\n  req.logout();\n  req.session.destroy(function () {\n    res.clearCookie('connect.sid');\n    res.redirect(_routes[\"default\"].login);\n  });\n};\n\nexports.logout = logout;\n\nvar getMe = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            id = req.user.id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _User[\"default\"].findById(id);\n\n          case 4:\n            user = _context4.sent;\n            res.render(\"userDetail\", {\n              pageTitle: \"User Detail\",\n              user: user\n            });\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.redirect(_routes[\"default\"].home);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function getMe(_x11, _x12) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Users\n\n\nexports.getMe = getMe;\n\nvar userDetail = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.params.id;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _User[\"default\"].findById(id);\n\n          case 4:\n            user = _context5.sent;\n            res.render(\"userDetail\", {\n              pageTitle: \"User Detail\",\n              user: user\n            });\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.redirect(_routes[\"default\"].home);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function userDetail(_x13, _x14) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.userDetail = userDetail;\n\nvar getEditProfile = function getEditProfile(req, res) {\n  res.render(\"editProfile\", {\n    pageTitle: \"Edit Profile\"\n  });\n};\n\nexports.getEditProfile = getEditProfile;\n\nvar postEditProfile = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, name, email, file;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body2 = req.body, name = _req$body2.name, email = _req$body2.email, file = req.file; /////////////////////////////// req.user로 하면 에러뜸 why?\n\n            _context6.prev = 1;\n            _context6.next = 4;\n            return _User[\"default\"].findByIdAndUpdate({\n              _id: req.user._id\n            }, {\n              $set: {\n                name: name,\n                email: email,\n                avatar: file ? file.path : req.user.avatar\n              }\n            }, {\n              \"new\": true\n            });\n\n          case 4:\n            res.redirect(_routes[\"default\"].me);\n            _context6.next = 10;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](1);\n            res.redirect(_routes[\"default\"].editProfile);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 7]]);\n  }));\n\n  return function postEditProfile(_x15, _x16) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.postEditProfile = postEditProfile;\n\nvar getChangePassword = function getChangePassword(req, res) {\n  res.render(\"changePassword\", {\n    pageTitle: \"Change Paasword\"\n  });\n};\n\nexports.getChangePassword = getChangePassword;\n\nvar postChangePassword = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body3, oldPassword, newPassword, newPassword1;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _req$body3 = req.body, oldPassword = _req$body3.oldPassword, newPassword = _req$body3.newPassword, newPassword1 = _req$body3.newPassword1;\n            _context7.prev = 1;\n\n            if (!(newPassword !== newPassword1)) {\n              _context7.next = 6;\n              break;\n            }\n\n            res.status(400);\n            res.redirect(\"/users\".concat(_routes[\"default\"].changePassword));\n            return _context7.abrupt(\"return\");\n\n          case 6:\n            _context7.next = 8;\n            return req.user.changePassword(oldPassword, newPassword1);\n\n          case 8:\n            res.redirect(_routes[\"default\"].me);\n            _context7.next = 15;\n            break;\n\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](1);\n            res.status(400);\n            res.redirect(\"/users\".concat(_routes[\"default\"].changePassword));\n\n          case 15:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 11]]);\n  }));\n\n  return function postChangePassword(_x17, _x18) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.postChangePassword = postChangePassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "getJoin",
        "req",
        "res",
        "render",
        "pageTitle",
        "postJoin",
        "next",
        "body",
        "name",
        "email",
        "password",
        "password2",
        "status",
        "avatar",
        "user",
        "User",
        "register",
        "console",
        "log",
        "redirect",
        "routes",
        "home",
        "getLogin",
        "postLogin",
        "passport",
        "authenticate",
        "failureRedirect",
        "login",
        "successRedirect",
        "googleLogin",
        "scope",
        "googleLoginCallback",
        "request",
        "accessToken",
        "refreshToken",
        "profile",
        "done",
        "_json",
        "sub",
        "picture",
        "findOne",
        "googleId",
        "save",
        "create",
        "newUser",
        "postKakaoLogin",
        "id",
        "params",
        "host",
        "provider",
        "session",
        "token",
        "nickname",
        "profile_image_url",
        "end",
        "logout",
        "destroy",
        "clearCookie",
        "getMe",
        "findById",
        "userDetail",
        "getEditProfile",
        "postEditProfile",
        "file",
        "findByIdAndUpdate",
        "_id",
        "$set",
        "path",
        "me",
        "editProfile",
        "getChangePassword",
        "postChangePassword",
        "oldPassword",
        "newPassword",
        "newPassword1",
        "changePassword"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/controllers/",
      "sourcesContent": [
        "import passport from \"passport\";\nimport routes from \"../routes\";\nimport User from \"../models/User\";\n\n// Global\nexport const getJoin = (req, res) => {\n    res.render(\"join\", { pageTitle: \"Join\" });\n};\n  \nexport const postJoin = async (req, res, next) => {\n    const {\n        body: { name, email, password, password2 }\n    } = req;\n    if (password !== password2) {\n        res.status(400);\n        res.render(\"join\", { pageTitle: \"Join\" });\n    } else {\n        try {\n            const user = await User({\n                name,\n                email,\n                avatar: \"basicimg\"\n            });\n            await User.register(user, password);\n            next();\n        } catch(err) {\n            console.log(err);\n            res.redirect(routes.home);\n        }\n    }\n};\n\nexport const getLogin = (req, res) =>\n  res.render(\"login\", { pageTitle: \"Log In\" });\n\nexport const postLogin = passport.authenticate(\"local\", {\n    failureRedirect: routes.login,\n    successRedirect: routes.home\n});\n\nexport const googleLogin = passport.authenticate('google',{ scope: [ 'email', 'profile' ] });\n\nexport const googleLoginCallback = async (request, accessToken, refreshToken, profile, done) => {\n    const { \n        _json: { sub, name, email, picture }\n    } = profile;\n    try {\n        const user = await User.findOne({ email })\n        if(user) {\n            user.googleId = sub;\n            user.save();\n            return done(null, user);\n        } else {\n           const newUser = await User.create({\n               email,\n               name,\n               googleId: sub,\n               avatar: picture\n           });\n           newUser.save();\n           return done(null, newUser); \n        }\n    } catch (err) {\n        return done(err);\n    }\n};\n\nexport const postKakaoLogin = async (req, res) => {\n    const {\n         params : { id },\n         body: { user: { profile, host }},\n    } = req; // token = req.body.token\n    try {\n        const user = await User.findOne({ \n            email: id \n        })\n        if(user) {\n            user.provider = host;\n            user.save();\n            req.session.passport = { \n                user: id,\n                token: req.body.token \n            }\n            req.session.save();\n            res.status(200);\n        } else {\n            const newUser = await User.create({\n                name: profile.nickname,\n                email: id,\n                avatar: profile.profile_image_url,\n                provider: host\n            })\n            newUser.save();\n            req.session.passport = { \n                user: id,\n                token: req.body.token \n            }\n            res.status(200);\n        }    \n    } catch(err) {\n        res.status(400);\n        console.log(err);\n    } finally {\n        res.end();\n    }\n};\n\nexport const logout = (req, res) => {\n    req.logout();\n    req.session.destroy(() => {\n        res.clearCookie('connect.sid');\n        res.redirect(routes.login);\n    }); \n};\n\nexport const getMe =  async (req, res) => {\n    const { \n        user: { id }\n    } = req;\n    try {\n        const user = await User.findById(id)\n        res.render(\"userDetail\", { pageTitle: \"User Detail\", user });\n    } catch(err) {\n        res.redirect(routes.home);\n    }\n};\n\n// Users\nexport const userDetail = async (req, res) => {\n    const {\n      params: { id }\n    } = req;\n    try {\n      const user = await User.findById(id);\n      res.render(\"userDetail\", { pageTitle: \"User Detail\", user });\n    } catch (error) {\n      res.redirect(routes.home);\n    }\n};\n\nexport const getEditProfile = (req, res) => {\n     res.render(\"editProfile\", { pageTitle: \"Edit Profile\" })};\n\nexport const postEditProfile = async (req, res) => {\n    const {\n         body: {    \n            name,\n            email\n         },\n         file\n    } = req;    /////////////////////////////// req.user로 하면 에러뜸 why?\n    try {\n        await User.findByIdAndUpdate({_id: req.user._id}, {$set: {  \n            name,\n            email,\n            avatar: (file ? file.path : req.user.avatar)\n        }}, {new: true});\n        res.redirect(routes.me);\n    } catch (err) {\n        res.redirect(routes.editProfile);\n    }\n};\n\nexport const getChangePassword = (req,res) => {\n     res.render(\"changePassword\", { pageTitle: \"Change Paasword\" })};\n\nexport const postChangePassword =  async (req,res) => {\n    const { body:\n            {\n                oldPassword,\n                newPassword,\n                newPassword1\n            }\n        } = req;\n    try {\n        if(newPassword !== newPassword1) {\n            res.status(400);\n            res.redirect(`/users${routes.changePassword}`);\n            return;\n        }\n        await req.user.changePassword(oldPassword, newPassword1);\n        res.redirect(routes.me);\n    } catch(err) {\n        res.status(400);\n        res.redirect(`/users${routes.changePassword}`);\n    }\n};\n   \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330181069
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/middleware.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/middleware.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/middleware.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "middleware.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadAvatar = exports.onlyPrivate = exports.onlyPublic = exports.localsMiddleware = void 0;\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar multerAvatar = (0, _multer[\"default\"])({\n  dest: \"uploads/boards/\"\n});\n\nvar localsMiddleware = function localsMiddleware(req, res, next) {\n  res.locals.siteName = \"IOT서버\";\n  res.locals.routes = _routes[\"default\"]; // res.setHeader(\"Content-Security-Policy\", \"script-src 'self' https://archive.org\");\n\n  res.locals.loggedUser = req.body.user || req.user || null;\n  next();\n};\n\nexports.localsMiddleware = localsMiddleware;\n\nvar onlyPublic = function onlyPublic(req, res, next) {\n  if (req.user || req.body.user) {\n    res.redirect(_routes[\"default\"].home);\n  } else {\n    next();\n  }\n};\n\nexports.onlyPublic = onlyPublic;\n\nvar onlyPrivate = function onlyPrivate(req, res, next) {\n  if (req.user || req.body.user) {\n    next();\n  } else {\n    res.redirect(_routes[\"default\"].home);\n  }\n};\n\nexports.onlyPrivate = onlyPrivate;\nvar uploadAvatar = multerAvatar.single(\"avatar\");\nexports.uploadAvatar = uploadAvatar;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsibXVsdGVyQXZhdGFyIiwiZGVzdCIsImxvY2Fsc01pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0IiwibG9jYWxzIiwic2l0ZU5hbWUiLCJyb3V0ZXMiLCJsb2dnZWRVc2VyIiwiYm9keSIsInVzZXIiLCJvbmx5UHVibGljIiwicmVkaXJlY3QiLCJob21lIiwib25seVByaXZhdGUiLCJ1cGxvYWRBdmF0YXIiLCJzaW5nbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLFlBQVksR0FBRyx3QkFBTztBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFQLENBQXJCOztBQUVPLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVlDLElBQVosRUFBcUI7QUFDakRELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXQyxRQUFYLEdBQXNCLE9BQXRCO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXRSxNQUFYLEdBQW9CQSxrQkFBcEIsQ0FGaUQsQ0FHakQ7O0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXRyxVQUFYLEdBQXdCTixHQUFHLENBQUNPLElBQUosQ0FBU0MsSUFBVCxJQUFpQlIsR0FBRyxDQUFDUSxJQUFyQixJQUE2QixJQUFyRDtBQUNBTixFQUFBQSxJQUFJO0FBQ1AsQ0FOTTs7OztBQVFBLElBQU1PLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQzVDLE1BQUdGLEdBQUcsQ0FBQ1EsSUFBSixJQUFZUixHQUFHLENBQUNPLElBQUosQ0FBU0MsSUFBeEIsRUFBOEI7QUFDNUJQLElBQUFBLEdBQUcsQ0FBQ1MsUUFBSixDQUFhTCxtQkFBT00sSUFBcEI7QUFDRCxHQUZELE1BRU87QUFDTFQsSUFBQUEsSUFBSTtBQUNMO0FBQ0YsQ0FOTTs7OztBQVFBLElBQU1VLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQzdDLE1BQUdGLEdBQUcsQ0FBQ1EsSUFBSixJQUFZUixHQUFHLENBQUNPLElBQUosQ0FBU0MsSUFBeEIsRUFBOEI7QUFDNUJOLElBQUFBLElBQUk7QUFDTCxHQUZELE1BRU87QUFDTEQsSUFBQUEsR0FBRyxDQUFDUyxRQUFKLENBQWFMLG1CQUFPTSxJQUFwQjtBQUNEO0FBQ0YsQ0FOTTs7O0FBUUEsSUFBTUUsWUFBWSxHQUFHaEIsWUFBWSxDQUFDaUIsTUFBYixDQUFvQixRQUFwQixDQUFyQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG11bHRlciBmcm9tIFwibXVsdGVyXCI7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJztcblxuY29uc3QgbXVsdGVyQXZhdGFyID0gbXVsdGVyKHsgZGVzdDogXCJ1cGxvYWRzL2JvYXJkcy9cIn0pO1xuXG5leHBvcnQgY29uc3QgbG9jYWxzTWlkZGxld2FyZSA9IChyZXEsIHJlcyAsIG5leHQpID0+IHtcbiAgICByZXMubG9jYWxzLnNpdGVOYW1lID0gXCJJT1TshJzrsoRcIjtcbiAgICByZXMubG9jYWxzLnJvdXRlcyA9IHJvdXRlcztcbiAgICAvLyByZXMuc2V0SGVhZGVyKFwiQ29udGVudC1TZWN1cml0eS1Qb2xpY3lcIiwgXCJzY3JpcHQtc3JjICdzZWxmJyBodHRwczovL2FyY2hpdmUub3JnXCIpO1xuICAgIHJlcy5sb2NhbHMubG9nZ2VkVXNlciA9IHJlcS5ib2R5LnVzZXIgfHwgcmVxLnVzZXIgfHwgbnVsbDtcbiAgICBuZXh0KCk7XG59O1xuXG5leHBvcnQgY29uc3Qgb25seVB1YmxpYyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEudXNlciB8fCByZXEuYm9keS51c2VyKSB7XG4gICAgcmVzLnJlZGlyZWN0KHJvdXRlcy5ob21lKTtcbiAgfSBlbHNlIHtcbiAgICBuZXh0KCk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBvbmx5UHJpdmF0ZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBpZihyZXEudXNlciB8fCByZXEuYm9keS51c2VyKSB7XG4gICAgbmV4dCgpO1xuICB9IGVsc2Uge1xuICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuaG9tZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHVwbG9hZEF2YXRhciA9IG11bHRlckF2YXRhci5zaW5nbGUoXCJhdmF0YXJcIikiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "middleware.js"
      ],
      "names": [
        "multerAvatar",
        "dest",
        "localsMiddleware",
        "req",
        "res",
        "next",
        "locals",
        "siteName",
        "routes",
        "loggedUser",
        "body",
        "user",
        "onlyPublic",
        "redirect",
        "home",
        "onlyPrivate",
        "uploadAvatar",
        "single"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,YAAY,GAAG,wBAAO;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAP,CAArB;;AAEO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAYC,IAAZ,EAAqB;AACjDD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,QAAX,GAAsB,OAAtB;AACAH,EAAAA,GAAG,CAACE,MAAJ,CAAWE,MAAX,GAAoBA,kBAApB,CAFiD,CAGjD;;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWG,UAAX,GAAwBN,GAAG,CAACO,IAAJ,CAASC,IAAT,IAAiBR,GAAG,CAACQ,IAArB,IAA6B,IAArD;AACAN,EAAAA,IAAI;AACP,CANM;;;;AAQA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,MAAGF,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACO,IAAJ,CAASC,IAAxB,EAA8B;AAC5BP,IAAAA,GAAG,CAACS,QAAJ,CAAaL,mBAAOM,IAApB;AACD,GAFD,MAEO;AACLT,IAAAA,IAAI;AACL;AACF,CANM;;;;AAQA,IAAMU,WAAW,GAAG,SAAdA,WAAc,CAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7C,MAAGF,GAAG,CAACQ,IAAJ,IAAYR,GAAG,CAACO,IAAJ,CAASC,IAAxB,EAA8B;AAC5BN,IAAAA,IAAI;AACL,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACS,QAAJ,CAAaL,mBAAOM,IAApB;AACD;AACF,CANM;;;AAQA,IAAME,YAAY,GAAGhB,YAAY,CAACiB,MAAb,CAAoB,QAApB,CAArB",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "import multer from \"multer\";\nimport routes from './routes';\n\nconst multerAvatar = multer({ dest: \"uploads/boards/\"});\n\nexport const localsMiddleware = (req, res , next) => {\n    res.locals.siteName = \"IOT서버\";\n    res.locals.routes = routes;\n    // res.setHeader(\"Content-Security-Policy\", \"script-src 'self' https://archive.org\");\n    res.locals.loggedUser = req.body.user || req.user || null;\n    next();\n};\n\nexport const onlyPublic = (req, res, next) => {\n  if(req.user || req.body.user) {\n    res.redirect(routes.home);\n  } else {\n    next();\n  }\n};\n\nexport const onlyPrivate = (req, res, next) => {\n  if(req.user || req.body.user) {\n    next();\n  } else {\n    res.redirect(routes.home);\n  }\n}\n\nexport const uploadAvatar = multerAvatar.single(\"avatar\")"
      ]
    },
    "sourceType": "script",
    "mtime": 1618334135400
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/routers/userRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/routers/userRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/routers/userRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/routers/userRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
        "sourceFileName": "userRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middleware = require(\"../middleware\");\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar userRouter = _express[\"default\"].Router();\n\nuserRouter.get(_routes[\"default\"].editProfile, _middleware.onlyPrivate, _userController.getEditProfile).post(_routes[\"default\"].editProfile, _middleware.onlyPrivate, _middleware.uploadAvatar, _userController.postEditProfile);\nuserRouter.get(_routes[\"default\"].changePassword, _middleware.onlyPrivate, _userController.getChangePassword).post(_routes[\"default\"].changePassword, _middleware.onlyPrivate, _userController.postChangePassword);\nuserRouter.get(_routes[\"default\"].userDetail(), _middleware.onlyPrivate, _userController.userDetail);\nvar _default = userRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJSb3V0ZXIuanMiXSwibmFtZXMiOlsidXNlclJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyb3V0ZXMiLCJlZGl0UHJvZmlsZSIsIm9ubHlQcml2YXRlIiwiZ2V0RWRpdFByb2ZpbGUiLCJwb3N0IiwidXBsb2FkQXZhdGFyIiwicG9zdEVkaXRQcm9maWxlIiwiY2hhbmdlUGFzc3dvcmQiLCJnZXRDaGFuZ2VQYXNzd29yZCIsInBvc3RDaGFuZ2VQYXNzd29yZCIsInVzZXJEZXRhaWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkI7O0FBRUFGLFVBQVUsQ0FDTEcsR0FETCxDQUNTQyxtQkFBT0MsV0FEaEIsRUFDNkJDLHVCQUQ3QixFQUMwQ0MsOEJBRDFDLEVBRUtDLElBRkwsQ0FFVUosbUJBQU9DLFdBRmpCLEVBRThCQyx1QkFGOUIsRUFFMkNHLHdCQUYzQyxFQUV5REMsK0JBRnpEO0FBSUFWLFVBQVUsQ0FDTEcsR0FETCxDQUNTQyxtQkFBT08sY0FEaEIsRUFDZ0NMLHVCQURoQyxFQUM2Q00saUNBRDdDLEVBRUtKLElBRkwsQ0FFVUosbUJBQU9PLGNBRmpCLEVBRWlDTCx1QkFGakMsRUFFOENPLGtDQUY5QztBQUlBYixVQUFVLENBQUNHLEdBQVgsQ0FBZUMsbUJBQU9VLFVBQVAsRUFBZixFQUFvQ1IsdUJBQXBDLEVBQWlEUSwwQkFBakQ7ZUFFZWQsVSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvcm91dGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IHVzZXJEZXRhaWwsIGdldEVkaXRQcm9maWxlLCBwb3N0RWRpdFByb2ZpbGUsIGdldENoYW5nZVBhc3N3b3JkLCBwb3N0Q2hhbmdlUGFzc3dvcmQgfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XG5pbXBvcnQgeyBvbmx5UHJpdmF0ZSwgdXBsb2FkQXZhdGFyIH0gZnJvbSAnLi4vbWlkZGxld2FyZSc7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4uL3JvdXRlcyc7XG5cbmNvbnN0IHVzZXJSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG51c2VyUm91dGVyXG4gICAgLmdldChyb3V0ZXMuZWRpdFByb2ZpbGUsIG9ubHlQcml2YXRlLCBnZXRFZGl0UHJvZmlsZSlcbiAgICAucG9zdChyb3V0ZXMuZWRpdFByb2ZpbGUsIG9ubHlQcml2YXRlLCB1cGxvYWRBdmF0YXIsIHBvc3RFZGl0UHJvZmlsZSk7XG5cbnVzZXJSb3V0ZXJcbiAgICAuZ2V0KHJvdXRlcy5jaGFuZ2VQYXNzd29yZCwgb25seVByaXZhdGUsIGdldENoYW5nZVBhc3N3b3JkKSAgXG4gICAgLnBvc3Qocm91dGVzLmNoYW5nZVBhc3N3b3JkLCBvbmx5UHJpdmF0ZSwgcG9zdENoYW5nZVBhc3N3b3JkKTtcblxudXNlclJvdXRlci5nZXQocm91dGVzLnVzZXJEZXRhaWwoKSwgb25seVByaXZhdGUsIHVzZXJEZXRhaWwpO1xuXG5leHBvcnQgZGVmYXVsdCB1c2VyUm91dGVyO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "userRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "get",
        "routes",
        "editProfile",
        "onlyPrivate",
        "getEditProfile",
        "post",
        "uploadAvatar",
        "postEditProfile",
        "changePassword",
        "getChangePassword",
        "postChangePassword",
        "userDetail"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CACLG,GADL,CACSC,mBAAOC,WADhB,EAC6BC,uBAD7B,EAC0CC,8BAD1C,EAEKC,IAFL,CAEUJ,mBAAOC,WAFjB,EAE8BC,uBAF9B,EAE2CG,wBAF3C,EAEyDC,+BAFzD;AAIAV,UAAU,CACLG,GADL,CACSC,mBAAOO,cADhB,EACgCL,uBADhC,EAC6CM,iCAD7C,EAEKJ,IAFL,CAEUJ,mBAAOO,cAFjB,EAEiCL,uBAFjC,EAE8CO,kCAF9C;AAIAb,UAAU,CAACG,GAAX,CAAeC,mBAAOU,UAAP,EAAf,EAAoCR,uBAApC,EAAiDQ,0BAAjD;eAEed,U",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "sourcesContent": [
        "import express from 'express';\nimport { userDetail, getEditProfile, postEditProfile, getChangePassword, postChangePassword } from '../controllers/userController';\nimport { onlyPrivate, uploadAvatar } from '../middleware';\nimport routes from '../routes';\n\nconst userRouter = express.Router();\n\nuserRouter\n    .get(routes.editProfile, onlyPrivate, getEditProfile)\n    .post(routes.editProfile, onlyPrivate, uploadAvatar, postEditProfile);\n\nuserRouter\n    .get(routes.changePassword, onlyPrivate, getChangePassword)  \n    .post(routes.changePassword, onlyPrivate, postChangePassword);\n\nuserRouter.get(routes.userDetail(), onlyPrivate, userDetail);\n\nexport default userRouter;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330437058
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/routers/apiRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/routers/apiRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/routers/apiRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/routers/apiRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
        "sourceFileName": "apiRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middleware = require(\"../middleware\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar apiRouter = _express[\"default\"].Router();\n\napiRouter.post(_routes[\"default\"].kakaoLogin, _middleware.onlyPublic, _userController.postKakaoLogin); // apiRouter.post(routes.weather, onlyPrivate, weather);\n\nvar _default = apiRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaVJvdXRlci5qcyJdLCJuYW1lcyI6WyJhcGlSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInJvdXRlcyIsImtha2FvTG9naW4iLCJvbmx5UHVibGljIiwicG9zdEtha2FvTG9naW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbEI7O0FBRUFGLFNBQVMsQ0FBQ0csSUFBVixDQUFlQyxtQkFBT0MsVUFBdEIsRUFBa0NDLHNCQUFsQyxFQUE4Q0MsOEJBQTlDLEUsQ0FDQTs7ZUFFZVAsUyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvcm91dGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHJvdXRlcyBmcm9tIFwiLi4vcm91dGVzXCI7XG5pbXBvcnQgeyBwb3N0S2FrYW9Mb2dpbiB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcbmltcG9ydCB7IG9ubHlQcml2YXRlLCBvbmx5UHVibGljIH0gZnJvbSAnLi4vbWlkZGxld2FyZSc7XG5cbmNvbnN0IGFwaVJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmFwaVJvdXRlci5wb3N0KHJvdXRlcy5rYWthb0xvZ2luLCBvbmx5UHVibGljLCBwb3N0S2FrYW9Mb2dpbik7XG4vLyBhcGlSb3V0ZXIucG9zdChyb3V0ZXMud2VhdGhlciwgb25seVByaXZhdGUsIHdlYXRoZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBhcGlSb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "apiRouter.js"
      ],
      "names": [
        "apiRouter",
        "express",
        "Router",
        "post",
        "routes",
        "kakaoLogin",
        "onlyPublic",
        "postKakaoLogin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAGC,oBAAQC,MAAR,EAAlB;;AAEAF,SAAS,CAACG,IAAV,CAAeC,mBAAOC,UAAtB,EAAkCC,sBAAlC,EAA8CC,8BAA9C,E,CACA;;eAEeP,S",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "sourcesContent": [
        "import express from \"express\";\nimport routes from \"../routes\";\nimport { postKakaoLogin } from '../controllers/userController';\nimport { onlyPrivate, onlyPublic } from '../middleware';\n\nconst apiRouter = express.Router();\n\napiRouter.post(routes.kakaoLogin, onlyPublic, postKakaoLogin);\n// apiRouter.post(routes.weather, onlyPrivate, weather);\n\nexport default apiRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618330457428
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/passport.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/passport.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/passport.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
        "sourceFileName": "passport.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _passportGoogleOauth = _interopRequireDefault(require(\"passport-google-oauth2\"));\n\nvar _userController = require(\"./controllers/userController\");\n\nvar _User = _interopRequireDefault(require(\"./models/User\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_passport[\"default\"].use(_User[\"default\"].createStrategy());\n\n_passport[\"default\"].use(new _passportGoogleOauth[\"default\"]({\n  clientID: process.env.GOOGLE_CLIENT_ID,\n  clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  callbackURL: \"http://localhost:5000\".concat(_routes[\"default\"].googleCallback),\n  passReqToCallback: true\n}, _userController.googleLoginCallback));\n\n_passport[\"default\"].serializeUser(_User[\"default\"].serializeUser(function (user, done) {\n  return done(null, user);\n}));\n\n_passport[\"default\"].deserializeUser(function (id, done) {\n  _User[\"default\"].findOne({\n    email: id\n  }, function (err, user) {\n    done(err, user);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwidXNlIiwiVXNlciIsImNyZWF0ZVN0cmF0ZWd5IiwiR29vZ2xlU3RyYXRlZ3kiLCJjbGllbnRJRCIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEIiwiY2xpZW50U2VjcmV0IiwiR09PR0xFX0NMSUVOVF9TRUNSRVQiLCJjYWxsYmFja1VSTCIsInJvdXRlcyIsImdvb2dsZUNhbGxiYWNrIiwicGFzc1JlcVRvQ2FsbGJhY2siLCJnb29nbGVMb2dpbkNhbGxiYWNrIiwic2VyaWFsaXplVXNlciIsInVzZXIiLCJkb25lIiwiZGVzZXJpYWxpemVVc2VyIiwiaWQiLCJmaW5kT25lIiwiZW1haWwiLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEscUJBQVNDLEdBQVQsQ0FBYUMsaUJBQUtDLGNBQUwsRUFBYjs7QUFFQUgscUJBQVNDLEdBQVQsQ0FDSSxJQUFJRywrQkFBSixDQUFtQjtBQUNmQyxFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxnQkFEUDtBQUVmQyxFQUFBQSxZQUFZLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxvQkFGWDtBQUdmQyxFQUFBQSxXQUFXLGlDQUEwQkMsbUJBQU9DLGNBQWpDLENBSEk7QUFJZkMsRUFBQUEsaUJBQWlCLEVBQUU7QUFKSixDQUFuQixFQU1BQyxtQ0FOQSxDQURKOztBQVVBZixxQkFBU2dCLGFBQVQsQ0FBdUJkLGlCQUFLYyxhQUFMLENBQW1CLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFnQjtBQUN0RCxTQUFPQSxJQUFJLENBQUMsSUFBRCxFQUFPRCxJQUFQLENBQVg7QUFDSCxDQUZzQixDQUF2Qjs7QUFJQWpCLHFCQUFTbUIsZUFBVCxDQUF5QixVQUFDQyxFQUFELEVBQUtGLElBQUwsRUFBYztBQUNuQ2hCLG1CQUFLbUIsT0FBTCxDQUFhO0FBQUNDLElBQUFBLEtBQUssRUFBRUY7QUFBUixHQUFiLEVBQTBCLFVBQUNHLEdBQUQsRUFBTU4sSUFBTixFQUFlO0FBQ3JDQyxJQUFBQSxJQUFJLENBQUNLLEdBQUQsRUFBTU4sSUFBTixDQUFKO0FBQ0gsR0FGRDtBQUdILENBSkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNzcG9ydCBmcm9tIFwicGFzc3BvcnRcIjtcbmltcG9ydCBHb29nbGVTdHJhdGVneSBmcm9tIFwicGFzc3BvcnQtZ29vZ2xlLW9hdXRoMlwiO1xuaW1wb3J0IHsgZ29vZ2xlTG9naW5DYWxsYmFjayB9IGZyb20gJy4vY29udHJvbGxlcnMvdXNlckNvbnRyb2xsZXInO1xuaW1wb3J0IFVzZXIgZnJvbSBcIi4vbW9kZWxzL1VzZXJcIjtcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnO1xuXG5wYXNzcG9ydC51c2UoVXNlci5jcmVhdGVTdHJhdGVneSgpKTtcblxucGFzc3BvcnQudXNlKFxuICAgIG5ldyBHb29nbGVTdHJhdGVneSh7XG4gICAgICAgIGNsaWVudElEOiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lELFxuICAgICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVULFxuICAgICAgICBjYWxsYmFja1VSTDogYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMCR7cm91dGVzLmdvb2dsZUNhbGxiYWNrfWAsXG4gICAgICAgIHBhc3NSZXFUb0NhbGxiYWNrOiB0cnVlXG4gICAgfSxcbiAgICBnb29nbGVMb2dpbkNhbGxiYWNrXG4pKTtcblxucGFzc3BvcnQuc2VyaWFsaXplVXNlcihVc2VyLnNlcmlhbGl6ZVVzZXIoKHVzZXIsIGRvbmUpID0+IHtcbiAgICByZXR1cm4gZG9uZShudWxsLCB1c2VyKTtcbn0pKTtcblxucGFzc3BvcnQuZGVzZXJpYWxpemVVc2VyKChpZCwgZG9uZSkgPT4ge1xuICAgIFVzZXIuZmluZE9uZSh7ZW1haWw6IGlkfSwgKGVyciwgdXNlcikgPT4ge1xuICAgICAgICBkb25lKGVyciwgdXNlcik7XG4gICAgfSk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "use",
        "User",
        "createStrategy",
        "GoogleStrategy",
        "clientID",
        "process",
        "env",
        "GOOGLE_CLIENT_ID",
        "clientSecret",
        "GOOGLE_CLIENT_SECRET",
        "callbackURL",
        "routes",
        "googleCallback",
        "passReqToCallback",
        "googleLoginCallback",
        "serializeUser",
        "user",
        "done",
        "deserializeUser",
        "id",
        "findOne",
        "email",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,qBAASC,GAAT,CAAaC,iBAAKC,cAAL,EAAb;;AAEAH,qBAASC,GAAT,CACI,IAAIG,+BAAJ,CAAmB;AACfC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADP;AAEfC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFX;AAGfC,EAAAA,WAAW,iCAA0BC,mBAAOC,cAAjC,CAHI;AAIfC,EAAAA,iBAAiB,EAAE;AAJJ,CAAnB,EAMAC,mCANA,CADJ;;AAUAf,qBAASgB,aAAT,CAAuBd,iBAAKc,aAAL,CAAmB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACtD,SAAOA,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAX;AACH,CAFsB,CAAvB;;AAIAjB,qBAASmB,eAAT,CAAyB,UAACC,EAAD,EAAKF,IAAL,EAAc;AACnChB,mBAAKmB,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAEF;AAAR,GAAb,EAA0B,UAACG,GAAD,EAAMN,IAAN,EAAe;AACrCC,IAAAA,IAAI,CAACK,GAAD,EAAMN,IAAN,CAAJ;AACH,GAFD;AAGH,CAJD",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/",
      "sourcesContent": [
        "import passport from \"passport\";\nimport GoogleStrategy from \"passport-google-oauth2\";\nimport { googleLoginCallback } from './controllers/userController';\nimport User from \"./models/User\";\nimport routes from './routes';\n\npassport.use(User.createStrategy());\n\npassport.use(\n    new GoogleStrategy({\n        clientID: process.env.GOOGLE_CLIENT_ID,\n        clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n        callbackURL: `http://localhost:5000${routes.googleCallback}`,\n        passReqToCallback: true\n    },\n    googleLoginCallback\n));\n\npassport.serializeUser(User.serializeUser((user, done) => {\n    return done(null, user);\n}));\n\npassport.deserializeUser((id, done) => {\n    User.findOne({email: id}, (err, user) => {\n        done(err, user);\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1618325843742
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/routers/dataRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver",
      "filename": "/Users/gim-ingug/Documents/iotserver/routers/dataRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/routers/dataRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/routers/dataRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
        "sourceFileName": "dataRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dataController = require(\"../controllers/dataController\");\n\nvar _middleware = require(\"../middleware\");\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar dataRouter = _express[\"default\"].Router(); // dataRouter.get(routes.datas, onlyPrivate, datas);\n// dataRouter.get(routes.dataDetail(), onlyPrivate, dataDetail);\n\n\nvar _default = dataRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFSb3V0ZXIuanMiXSwibmFtZXMiOlsiZGF0YVJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkIsQyxDQUVBO0FBRUE7OztlQUVlRixVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9yb3V0ZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgZGF0YURldGFpbCwgZGF0YXMgfSBmcm9tICcuLi9jb250cm9sbGVycy9kYXRhQ29udHJvbGxlcic7XG5pbXBvcnQgeyBvbmx5UHJpdmF0ZSB9IGZyb20gJy4uL21pZGRsZXdhcmUnO1xuaW1wb3J0IHJvdXRlcyBmcm9tICcuLi9yb3V0ZXMnO1xuXG5cbmNvbnN0IGRhdGFSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBkYXRhUm91dGVyLmdldChyb3V0ZXMuZGF0YXMsIG9ubHlQcml2YXRlLCBkYXRhcyk7XG5cbi8vIGRhdGFSb3V0ZXIuZ2V0KHJvdXRlcy5kYXRhRGV0YWlsKCksIG9ubHlQcml2YXRlLCBkYXRhRGV0YWlsKTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YVJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dataRouter.js"
      ],
      "names": [
        "dataRouter",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB,C,CAEA;AAEA;;;eAEeF,U",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/routers/",
      "sourcesContent": [
        "import express from 'express';\nimport { dataDetail, datas } from '../controllers/dataController';\nimport { onlyPrivate } from '../middleware';\nimport routes from '../routes';\n\n\nconst dataRouter = express.Router();\n\n// dataRouter.get(routes.datas, onlyPrivate, datas);\n\n// dataRouter.get(routes.dataDetail(), onlyPrivate, dataDetail);\n\nexport default dataRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1618331358225
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/init.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/init.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/init.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/init.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "init.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io\"));\n\nvar _mqtt = _interopRequireDefault(require(\"mqtt\"));\n\nrequire(\"./db\");\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nvar _Dht = _interopRequireDefault(require(\"./models/Dht\"));\n\nvar _Pms = _interopRequireDefault(require(\"./models/Pms\"));\n\nvar _Product = _interopRequireDefault(require(\"./models/Product\"));\n\nvar _User = _interopRequireDefault(require(\"./models/User\"));\n\nvar _Led = _interopRequireDefault(require(\"./models/Led\"));\n\nvar _Fan = _interopRequireDefault(require(\"./models/Fan\"));\n\nvar _Buz = _interopRequireDefault(require(\"./models/Buz\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  port: 1883,\n  username: 'inguk',\n  password: 'ccit2'\n};\n\n_dotenv[\"default\"].config();\n\nvar PORT = process.env.PORT || 3001; // 포트번호 지정\n\nvar handleListing = function handleListing() {\n  return console.log(\"\\uD83D\\uDE08Listening on: http://localhost:\".concat(PORT));\n}; // 서버 실행 콜백\n// web server\n\n\nvar server = _app[\"default\"].listen(PORT, handleListing); // 포트지정 및 콜백함수 실행\n//mqtt server\n\n\nvar client = _mqtt[\"default\"].connect(\"mqtt://127.0.0.1\", {\n  clientId: 'hello'\n}); // const client = mqtt.connect(\"mqtt://127.0.0.1\", options);\n\n\nclient.on(\"connect\", function () {\n  // mqtt 연결하기\n  console.log(\"😇Mqtt Connect\");\n  client.subscribe('jb/shilmu/scle/smenco/apsr/+/input/+'); // 읽을 토픽\n\n  client.subscribe('jb/shilmu/scle/smenco/apsr/+/output/+/res');\n});\nclient.on(\"message\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(topic, message) {\n    var topicContainer, obj, date, year, month, today, hours, mintues, seconds, keyName, product, userId, pms, _product, _userId, dht;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 구독한 토픽으로부터 데이터 받아오기\n            topicContainer = topic.split('/'); // 토픽 슬라이\n\n            obj = JSON.parse(message); // 페이로드 파싱\n\n            date = new Date(); // 서버에서 전송받은 시간 \n\n            year = date.getFullYear();\n            month = date.getMonth();\n            today = date.getDate();\n            hours = date.getHours();\n            mintues = date.getMinutes();\n            seconds = date.getSeconds();\n            keyName = String(topicContainer[5]);\n            obj.measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n\n            if (!(obj.key && typeof obj.key === \"string\" && topicContainer[7] === \"pms\" && obj.dust)) {\n              _context.next = 37;\n              break;\n            }\n\n            _context.prev = 12;\n            _context.next = 15;\n            return _Product[\"default\"].findOne({\n              keyName: keyName\n            });\n\n          case 15:\n            product = _context.sent;\n\n            if (!(product && product.keyName === obj.key)) {\n              _context.next = 30;\n              break;\n            }\n\n            if (!product.user) {\n              _context.next = 30;\n              break;\n            }\n\n            userId = product.user;\n            _context.next = 21;\n            return _Pms[\"default\"].create({\n              // 데이터 디비에 새로운 객체 생성 및 저장\n              dust: obj.dust,\n              measuredAt: obj.measuredAt,\n              key: obj.key,\n              controller: userId,\n              product: product._id\n            });\n\n          case 21:\n            pms = _context.sent;\n            _context.next = 24;\n            return pms.save();\n\n          case 24:\n            _context.next = 26;\n            return _Product[\"default\"].findOneAndUpdate({\n              keyName: keyName\n            }, {\n              $addToSet: {\n                data: pms._id\n              }\n            });\n\n          case 26:\n            _context.next = 28;\n            return _User[\"default\"].findByIdAndUpdate({\n              _id: userId\n            }, {\n              $addToSet: {\n                datas: pms._id\n              }\n            });\n\n          case 28:\n            // 유저 디비 업데이트\n            console.log(pms);\n            console.log('Success MQTT');\n\n          case 30:\n            _context.next = 35;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](12);\n            console.log(_context.t0);\n\n          case 35:\n            _context.next = 61;\n            break;\n\n          case 37:\n            if (!(obj.key && typeof obj.key === \"string\" && topicContainer[7] === \"dht\" && obj.tmp && obj.hum)) {\n              _context.next = 61;\n              break;\n            }\n\n            _context.prev = 38;\n            _context.next = 41;\n            return _Product[\"default\"].findOne({\n              keyName: keyName\n            });\n\n          case 41:\n            _product = _context.sent;\n\n            if (!(_product && _product.keyName === obj.key)) {\n              _context.next = 56;\n              break;\n            }\n\n            if (!_product.user) {\n              _context.next = 56;\n              break;\n            }\n\n            _userId = _product.user;\n            _context.next = 47;\n            return _Dht[\"default\"].create({\n              tmp: obj.tmp / 100,\n              hum: obj.hum / 100,\n              measuredAt: obj.measuredAt,\n              key: obj.key,\n              controller: _userId,\n              product: _product._id\n            });\n\n          case 47:\n            dht = _context.sent;\n            _context.next = 50;\n            return dht.save();\n\n          case 50:\n            _context.next = 52;\n            return _Product[\"default\"].findOneAndUpdate({\n              keyName: keyName\n            }, {\n              $addToSet: {\n                data: dht._id\n              }\n            });\n\n          case 52:\n            _context.next = 54;\n            return _User[\"default\"].findByIdAndUpdate({\n              _id: _userId\n            }, {\n              $addToSet: {\n                datas: dht._id\n              }\n            });\n\n          case 54:\n            console.log(dht);\n            console.log('Success MQTT');\n\n          case 56:\n            _context.next = 61;\n            break;\n\n          case 58:\n            _context.prev = 58;\n            _context.t1 = _context[\"catch\"](38);\n            console.log(_context.t1);\n\n          case 61:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[12, 32], [38, 58]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}()); //웹소켓서버\n\nvar io = (0, _socket[\"default\"])(server, {\n  cors: {\n    origin: \"http://localhost:3000\",\n    methods: [\"GET\", \"POST\"]\n  }\n}); // 소켓 cors 설정\n// const io = socketIO(server, {\n//     cors: {\n//         origin: \"*\",\n//         methods: [\"GET\", \"POST\"]\n//     }\n// }); // 소켓 cors 설정\n// Mqtt 데이터\n\nio.on(\"connection\", function (socket) {\n  // 소켓 연결\n  console.log(\"😘Socket Connect\");\n  socket.on('disconnect', function () {\n    console.log(\"🥺Socket Disconnect\");\n  }); // 소켓 끊어짐 이벤트 대기\n\n  socket.on(\"sendId\", /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(id) {\n      var user, dataForm, keys, _iterator, _step, _step$value, index, key, dht, pms, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // 프론트로 부터 유저 id 받기\n              user = id.userId;\n              dataForm = [];\n\n              if (!user) {\n                _context2.next = 35;\n                break;\n              }\n\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _Dht[\"default\"].find({\n                controller: user\n              }).distinct('key');\n\n            case 6:\n              keys = _context2.sent;\n              // 데이터 디비에서 해당 유저의 정보 가져오기\n              _iterator = _createForOfIteratorHelper(keys.entries());\n              _context2.prev = 8;\n\n              _iterator.s();\n\n            case 10:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 21;\n                break;\n              }\n\n              _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], key = _step$value[1];\n              _context2.next = 14;\n              return _Dht[\"default\"].find({\n                key: key\n              }).sort({\n                _id: -1\n              }).limit(1);\n\n            case 14:\n              dht = _context2.sent;\n              _context2.next = 17;\n              return _Pms[\"default\"].find({\n                key: key\n              }).sort({\n                _id: -1\n              }).limit(1);\n\n            case 17:\n              pms = _context2.sent;\n\n              if (dht && pms) {\n                // 데이터가 모두 있다면\n                data = {\n                  // 새로운 객체 생성 \n                  tmp: dht[0].tmp,\n                  hum: dht[0].hum,\n                  dust: pms[0].dust,\n                  measuredAt: dht[0].measuredAt,\n                  product: dht[0].product,\n                  keyName: dht[0].key\n                };\n                dataForm[index] = data;\n              }\n\n            case 19:\n              _context2.next = 10;\n              break;\n\n            case 21:\n              _context2.next = 26;\n              break;\n\n            case 23:\n              _context2.prev = 23;\n              _context2.t0 = _context2[\"catch\"](8);\n\n              _iterator.e(_context2.t0);\n\n            case 26:\n              _context2.prev = 26;\n\n              _iterator.f();\n\n              return _context2.finish(26);\n\n            case 29:\n              socket.emit(\"mqttSubmit\", JSON.stringify(dataForm)); // 소켓을 이용해 데이터 프론트로 전송\n\n              _context2.next = 35;\n              break;\n\n            case 32:\n              _context2.prev = 32;\n              _context2.t1 = _context2[\"catch\"](3);\n              console.log(_context2.t1);\n\n            case 35:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 32], [8, 23, 26, 29]]);\n    }));\n\n    return function (_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  socket.on(\"productId\", /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(id) {\n      var productId, data, dht, pms;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              productId = id.id;\n              data = {};\n\n              if (!productId) {\n                _context3.next = 17;\n                break;\n              }\n\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _Dht[\"default\"].find({\n                product: productId\n              }).sort({\n                _id: -1\n              }).limit(1);\n\n            case 6:\n              dht = _context3.sent;\n              _context3.next = 9;\n              return _Pms[\"default\"].find({\n                product: productId\n              }).sort({\n                _id: -1\n              }).limit(1);\n\n            case 9:\n              pms = _context3.sent;\n\n              if (dht && pms) {\n                data = {\n                  // 새로운 객체 생성 \n                  tmp: dht[0].tmp,\n                  hum: dht[0].hum,\n                  dust: pms[0].dust,\n                  measuredAt: dht[0].measuredAt,\n                  product: dht[0].product,\n                  keyName: dht[0].key\n                };\n              }\n\n              socket.emit(\"mqttData\", JSON.stringify(data)); // 소켓을 이용해 데이터 프론트로 전송\n\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](3);\n              // throw Error();\n              console.log(_context3.t0);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 14]]);\n    }));\n\n    return function (_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  socket.on(\"publishLED\", /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(data) {\n      var Red, Yellow, Green, auto, key, product, controller, LedTopic, user, products, keyCheck, verifyData, LedJson;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              Red = data.Red, Yellow = data.Yellow, Green = data.Green, auto = data.auto, key = data.key, product = data.product, controller = data.controller;\n              LedTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/led\"); // 퍼블리쉬 토픽\n\n              _context5.prev = 2;\n              _context5.next = 5;\n              return _User[\"default\"].findById(controller);\n\n            case 5:\n              user = _context5.sent;\n              _context5.next = 8;\n              return _User[\"default\"].findOne({\n                keyList: {\n                  $in: [product]\n                }\n              });\n\n            case 8:\n              products = _context5.sent;\n              _context5.next = 11;\n              return _Product[\"default\"].findById(product);\n\n            case 11:\n              keyCheck = _context5.sent;\n\n              if (String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                verifyData = {\n                  Red: Red,\n                  Yellow: Yellow,\n                  Green: Green,\n                  auto: auto,\n                  key: key\n                };\n                LedJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n\n                client.publish(LedTopic, LedJson, function (err) {\n                  // 퍼블리쉬\n                  if (err) {\n                    return console.log(err); // 에러발생시\n                  }\n\n                  client.on('message', /*#__PURE__*/function () {\n                    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(LedTopicRes, response) {\n                      var result, date, year, month, today, hours, mintues, seconds, measuredAt, led;\n                      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                        while (1) {\n                          switch (_context4.prev = _context4.next) {\n                            case 0:\n                              if (!(LedTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/led/res\"))) {\n                                _context4.next = 17;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context4.next = 17;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              result = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(result.success && result.key === key)) {\n                                _context4.next = 17;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              date = new Date(); // 서버에서 전송받은 시간 \n\n                              year = date.getFullYear();\n                              month = date.getMonth();\n                              today = date.getDate();\n                              hours = date.getHours();\n                              mintues = date.getMinutes();\n                              seconds = date.getSeconds();\n                              measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                              _context4.next = 14;\n                              return _Led[\"default\"].create({\n                                auto: result.auto,\n                                Red: result.Red,\n                                Green: result.Green,\n                                Yellow: result.Yellow,\n                                measuredAt: measuredAt,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 14:\n                              led = _context4.sent;\n                              led.save();\n                              socket.emit('LEDResult', result); // 웹으로 실시간 결과 전달\n\n                            case 17:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }\n                      }, _callee4);\n                    }));\n\n                    return function (_x6, _x7) {\n                      return _ref5.apply(this, arguments);\n                    };\n                  }());\n                });\n              }\n\n              _context5.next = 18;\n              break;\n\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.log(_context5.t0);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 15]]);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  socket.on(\"publishFan\", /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(data) {\n      var on, auto, key, product, controller, fanTopic, user, products, keyCheck, verifyData, fanJson;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              on = data.on, auto = data.auto, key = data.key, product = data.product, controller = data.controller;\n              fanTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/fan\"); // 퍼블리쉬 토픽\n\n              _context7.prev = 2;\n              _context7.next = 5;\n              return _User[\"default\"].findById(controller);\n\n            case 5:\n              user = _context7.sent;\n              _context7.next = 8;\n              return _User[\"default\"].findOne({\n                keyList: {\n                  $in: [product]\n                }\n              });\n\n            case 8:\n              products = _context7.sent;\n              _context7.next = 11;\n              return _Product[\"default\"].findById(product);\n\n            case 11:\n              keyCheck = _context7.sent;\n\n              if (String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                verifyData = {\n                  on: on,\n                  auto: auto,\n                  key: key\n                };\n                fanJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n\n                client.publish(fanTopic, fanJson, function (err) {\n                  // 퍼블리쉬\n                  if (err) {\n                    return console.log(err); // 에러발생시\n                  }\n\n                  client.on('message', /*#__PURE__*/function () {\n                    var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(fanTopicRes, response) {\n                      var result, date, year, month, today, hours, mintues, seconds, measuredAt, fan;\n                      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                        while (1) {\n                          switch (_context6.prev = _context6.next) {\n                            case 0:\n                              if (!(fanTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/fan/res\"))) {\n                                _context6.next = 17;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context6.next = 17;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              result = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(result.success && result.key === key)) {\n                                _context6.next = 17;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              date = new Date(); // 서버에서 전송받은 시간 \n\n                              year = date.getFullYear();\n                              month = date.getMonth();\n                              today = date.getDate();\n                              hours = date.getHours();\n                              mintues = date.getMinutes();\n                              seconds = date.getSeconds();\n                              measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                              _context6.next = 14;\n                              return _Fan[\"default\"].create({\n                                auto: result.auto,\n                                turnOn: result.on,\n                                measuredAt: measuredAt,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 14:\n                              fan = _context6.sent;\n                              fan.save();\n                              socket.emit('fanResult', result); // 웹으로 실시간 결과 전달\n\n                            case 17:\n                            case \"end\":\n                              return _context6.stop();\n                          }\n                        }\n                      }, _callee6);\n                    }));\n\n                    return function (_x9, _x10) {\n                      return _ref7.apply(this, arguments);\n                    };\n                  }());\n                });\n              }\n\n              _context7.next = 18;\n              break;\n\n            case 15:\n              _context7.prev = 15;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.log(_context7.t0);\n\n            case 18:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[2, 15]]);\n    }));\n\n    return function (_x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n  socket.on(\"publishBuz\", /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(data) {\n      var on, auto, key, product, controller, buzTopic, user, products, keyCheck, verifyData, buzJson;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              on = data.on, auto = data.auto, key = data.key, product = data.product, controller = data.controller;\n              buzTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/buz\"); // 퍼블리쉬 토픽\n\n              _context9.prev = 2;\n              _context9.next = 5;\n              return _User[\"default\"].findById(controller);\n\n            case 5:\n              user = _context9.sent;\n              _context9.next = 8;\n              return _User[\"default\"].findOne({\n                keyList: {\n                  $in: [product]\n                }\n              });\n\n            case 8:\n              products = _context9.sent;\n              _context9.next = 11;\n              return _Product[\"default\"].findById(product);\n\n            case 11:\n              keyCheck = _context9.sent;\n\n              if (String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                verifyData = {\n                  on: on,\n                  auto: auto,\n                  key: key\n                };\n                buzJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n\n                client.publish(buzTopic, buzJson, function (err) {\n                  // 퍼블리쉬\n                  if (err) {\n                    return console.log(err); // 에러발생시\n                  }\n\n                  client.on('message', /*#__PURE__*/function () {\n                    var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(buzTopicRes, response) {\n                      var result, date, year, month, today, hours, mintues, seconds, measuredAt, buz;\n                      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              if (!(buzTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/buz\"))) {\n                                _context8.next = 17;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context8.next = 17;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              result = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(result.success && result.key === key)) {\n                                _context8.next = 17;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              date = new Date(); // 서버에서 전송받은 시간 \n\n                              year = date.getFullYear();\n                              month = date.getMonth();\n                              today = date.getDate();\n                              hours = date.getHours();\n                              mintues = date.getMinutes();\n                              seconds = date.getSeconds();\n                              measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                              _context8.next = 14;\n                              return _Buz[\"default\"].create({\n                                auto: result.auto,\n                                turnOn: result.on,\n                                measuredAt: measuredAt,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 14:\n                              buz = _context8.sent;\n                              buz.save();\n                              socket.emit('buzResult', result); // 웹으로 실시간 결과 전달\n\n                            case 17:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, _callee8);\n                    }));\n\n                    return function (_x12, _x13) {\n                      return _ref9.apply(this, arguments);\n                    };\n                  }());\n                });\n              }\n\n              _context9.next = 18;\n              break;\n\n            case 15:\n              _context9.prev = 15;\n              _context9.t0 = _context9[\"catch\"](2);\n              console.log(_context9.t0);\n\n            case 18:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[2, 15]]);\n    }));\n\n    return function (_x11) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n  socket.on('publishAuto', /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(data) {\n      var auto, key, product, controller, ledTopic, fanTopic, buzTopic, user, products, keyCheck, verifyData, autoJson;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              auto = data.auto, key = data.key, product = data.product, controller = data.controller;\n              ledTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/led\"); // 퍼블리쉬 토픽\n\n              fanTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/fan\"); // 퍼블리쉬 토픽\n\n              buzTopic = \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/buz\"); // 퍼블리쉬 토픽\n\n              _context11.prev = 4;\n              _context11.next = 7;\n              return _User[\"default\"].findById(controller);\n\n            case 7:\n              user = _context11.sent;\n              _context11.next = 10;\n              return _User[\"default\"].findOne({\n                keyList: {\n                  $in: [product]\n                }\n              });\n\n            case 10:\n              products = _context11.sent;\n              _context11.next = 13;\n              return _Product[\"default\"].findById(product);\n\n            case 13:\n              keyCheck = _context11.sent;\n\n              if (String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                verifyData = {\n                  auto: auto,\n                  key: key\n                };\n                autoJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n\n                client.publish([ledTopic, fanTopic, buzTopic], autoJson, function (err) {\n                  // 퍼블리쉬\n                  if (err) {\n                    return console.log(err); // 에러발생시\n                  }\n\n                  client.on('message', /*#__PURE__*/function () {\n                    var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(buzTopicRes, response) {\n                      var result, date, year, month, today, hours, mintues, seconds, measuredAt, buz, _result, _date, _year, _month, _today, _hours, _mintues, _seconds, _measuredAt, led, _result2, _date2, _year2, _month2, _today2, _hours2, _mintues2, _seconds2, _measuredAt2, fan;\n\n                      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                        while (1) {\n                          switch (_context10.prev = _context10.next) {\n                            case 0:\n                              if (!(buzTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/buz\"))) {\n                                _context10.next = 17;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context10.next = 17;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              result = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(result.success && result.key === key)) {\n                                _context10.next = 17;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              date = new Date(); // 서버에서 전송받은 시간 \n\n                              year = date.getFullYear();\n                              month = date.getMonth();\n                              today = date.getDate();\n                              hours = date.getHours();\n                              mintues = date.getMinutes();\n                              seconds = date.getSeconds();\n                              measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                              _context10.next = 14;\n                              return _Buz[\"default\"].create({\n                                auto: result.auto,\n                                turnOn: result.on,\n                                measuredAt: measuredAt,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 14:\n                              buz = _context10.sent;\n                              buz.save();\n                              socket.emit('buzResult', result); // 웹으로 실시간 결과 전달\n\n                            case 17:\n                              if (!(ledTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/led\"))) {\n                                _context10.next = 34;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context10.next = 34;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              _result = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(_result.success && _result.key === key)) {\n                                _context10.next = 34;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              _date = new Date(); // 서버에서 전송받은 시간 \n\n                              _year = _date.getFullYear();\n                              _month = _date.getMonth();\n                              _today = _date.getDate();\n                              _hours = _date.getHours();\n                              _mintues = _date.getMinutes();\n                              _seconds = _date.getSeconds();\n                              _measuredAt = new Date(Date.UTC(_year, _month, _today, _hours, _mintues, _seconds));\n                              _context10.next = 31;\n                              return _Led[\"default\"].create({\n                                auto: _result.auto,\n                                Red: _result.Red,\n                                Green: _result.Green,\n                                Yellow: _result.Yellow,\n                                measuredAt: _measuredAt,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 31:\n                              led = _context10.sent;\n                              led.save();\n                              socket.emit('ledResult', _result); // 웹으로 실시간 결과 전달\n\n                            case 34:\n                              if (!(fanTopicRes === \"jb/shilmu/scle/smenco/apsr/\".concat(key, \"/output/fan\"))) {\n                                _context10.next = 51;\n                                break;\n                              }\n\n                              if (!response) {\n                                _context10.next = 51;\n                                break;\n                              }\n\n                              // 데이터가 있다면\n                              _result2 = JSON.parse(response.toString()); // 데이터 파싱\n\n                              if (!(_result2.success && _result2.key === key)) {\n                                _context10.next = 51;\n                                break;\n                              }\n\n                              // 데이터 속 결과가 성공이라면\n                              _date2 = new Date(); // 서버에서 전송받은 시간 \n\n                              _year2 = _date2.getFullYear();\n                              _month2 = _date2.getMonth();\n                              _today2 = _date2.getDate();\n                              _hours2 = _date2.getHours();\n                              _mintues2 = _date2.getMinutes();\n                              _seconds2 = _date2.getSeconds();\n                              _measuredAt2 = new Date(Date.UTC(_year2, _month2, _today2, _hours2, _mintues2, _seconds2));\n                              _context10.next = 48;\n                              return _Fan[\"default\"].create({\n                                auto: _result2.auto,\n                                turnOn: _result2.on,\n                                measuredAt: _measuredAt2,\n                                controller: controller,\n                                product: product,\n                                key: key\n                              });\n\n                            case 48:\n                              fan = _context10.sent;\n                              fan.save();\n                              socket.emit('fanResult', _result2); // 웹으로 실시간 결과 전달\n\n                            case 51:\n                            case \"end\":\n                              return _context10.stop();\n                          }\n                        }\n                      }, _callee10);\n                    }));\n\n                    return function (_x15, _x16) {\n                      return _ref11.apply(this, arguments);\n                    };\n                  }());\n                });\n              }\n\n              _context11.next = 20;\n              break;\n\n            case 17:\n              _context11.prev = 17;\n              _context11.t0 = _context11[\"catch\"](4);\n              console.log(_context11.t0);\n\n            case 20:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[4, 17]]);\n    }));\n\n    return function (_x14) {\n      return _ref10.apply(this, arguments);\n    };\n  }());\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsib3B0aW9ucyIsInBvcnQiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZG90ZW52IiwiY29uZmlnIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJoYW5kbGVMaXN0aW5nIiwiY29uc29sZSIsImxvZyIsInNlcnZlciIsImFwcCIsImxpc3RlbiIsImNsaWVudCIsIm1xdHQiLCJjb25uZWN0IiwiY2xpZW50SWQiLCJvbiIsInN1YnNjcmliZSIsInRvcGljIiwibWVzc2FnZSIsInRvcGljQ29udGFpbmVyIiwic3BsaXQiLCJvYmoiLCJKU09OIiwicGFyc2UiLCJkYXRlIiwiRGF0ZSIsInllYXIiLCJnZXRGdWxsWWVhciIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ0b2RheSIsImdldERhdGUiLCJob3VycyIsImdldEhvdXJzIiwibWludHVlcyIsImdldE1pbnV0ZXMiLCJzZWNvbmRzIiwiZ2V0U2Vjb25kcyIsImtleU5hbWUiLCJTdHJpbmciLCJtZWFzdXJlZEF0IiwiVVRDIiwia2V5IiwiZHVzdCIsIlByb2R1Y3QiLCJmaW5kT25lIiwicHJvZHVjdCIsInVzZXIiLCJ1c2VySWQiLCJQbXMiLCJjcmVhdGUiLCJjb250cm9sbGVyIiwiX2lkIiwicG1zIiwic2F2ZSIsImZpbmRPbmVBbmRVcGRhdGUiLCIkYWRkVG9TZXQiLCJkYXRhIiwiVXNlciIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZGF0YXMiLCJ0bXAiLCJodW0iLCJEaHQiLCJkaHQiLCJpbyIsImNvcnMiLCJvcmlnaW4iLCJtZXRob2RzIiwic29ja2V0IiwiaWQiLCJkYXRhRm9ybSIsImZpbmQiLCJkaXN0aW5jdCIsImtleXMiLCJlbnRyaWVzIiwiaW5kZXgiLCJzb3J0IiwibGltaXQiLCJlbWl0Iiwic3RyaW5naWZ5IiwicHJvZHVjdElkIiwiUmVkIiwiWWVsbG93IiwiR3JlZW4iLCJhdXRvIiwiTGVkVG9waWMiLCJmaW5kQnlJZCIsImtleUxpc3QiLCIkaW4iLCJwcm9kdWN0cyIsImtleUNoZWNrIiwidmVyaWZ5RGF0YSIsIkxlZEpzb24iLCJwdWJsaXNoIiwiZXJyIiwiTGVkVG9waWNSZXMiLCJyZXNwb25zZSIsInJlc3VsdCIsInRvU3RyaW5nIiwic3VjY2VzcyIsIkxlZCIsImxlZCIsImZhblRvcGljIiwiZmFuSnNvbiIsImZhblRvcGljUmVzIiwiRmFuIiwidHVybk9uIiwiZmFuIiwiYnV6VG9waWMiLCJidXpKc29uIiwiYnV6VG9waWNSZXMiLCJCdXoiLCJidXoiLCJsZWRUb3BpYyIsImF1dG9Kc29uIiwibGVkVG9waWNSZXMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUc7QUFDWkMsRUFBQUEsSUFBSSxFQUFFLElBRE07QUFFWkMsRUFBQUEsUUFBUSxFQUFFLE9BRkU7QUFHWkMsRUFBQUEsUUFBUSxFQUFFO0FBSEUsQ0FBaEI7O0FBTUFDLG1CQUFPQyxNQUFQOztBQUVBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakMsQyxDQUF1Qzs7QUFFdkMsSUFBTUcsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQjtBQUFBLFNBQ2xCQyxPQUFPLENBQUNDLEdBQVIsc0RBQWdETCxJQUFoRCxFQURrQjtBQUFBLENBQXRCLEMsQ0FDNkQ7QUFFN0Q7OztBQUNBLElBQU1NLE1BQU0sR0FBR0MsZ0JBQUlDLE1BQUosQ0FBV1IsSUFBWCxFQUFpQkcsYUFBakIsQ0FBZixDLENBQWdEO0FBR2hEOzs7QUFDQSxJQUFNTSxNQUFNLEdBQUdDLGlCQUFLQyxPQUFMLENBQWEsa0JBQWIsRUFBaUM7QUFBQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQVgsQ0FBakMsQ0FBZixDLENBQ0E7OztBQUVBSCxNQUFNLENBQUNJLEVBQVAsQ0FBVSxTQUFWLEVBQXFCLFlBQU07QUFBRTtBQUN6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QUFwQyxFQUE2Q0UsU0FBN0MsQ0FBVCxDQWhFZDtBQUFBO0FBQUEscUNBaUVhc0UsZ0JBQUl4RCxNQUFKLENBQVc7QUFDekJtQyxnQ0FBQUEsSUFBSSxFQUFFYSxRQUFNLENBQUNiLElBRFk7QUFFekJzQixnQ0FBQUEsTUFBTSxFQUFFVCxRQUFNLENBQUNuRixFQUZVO0FBR3pCeUIsZ0NBQUFBLFVBQVUsRUFBVkEsWUFIeUI7QUFJekJXLGdDQUFBQSxVQUFVLEVBQVZBLFVBSnlCO0FBS3pCTCxnQ0FBQUEsT0FBTyxFQUFQQSxPQUx5QjtBQU16QkosZ0NBQUFBLEdBQUcsRUFBSEE7QUFOeUIsK0JBQVgsQ0FqRWI7O0FBQUE7QUFpRUNrRSw4QkFBQUEsR0FqRUQ7QUF5RUxBLDhCQUFBQSxHQUFHLENBQUN0RCxJQUFKO0FBQ0FlLDhCQUFBQSxNQUFNLENBQUNVLElBQVAsQ0FBWSxXQUFaLEVBQXlCbUIsUUFBekIsRUExRUssQ0EwRTZCOztBQTFFN0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBQXJCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBK0VILGlCQW5GRDtBQW9GSDs7QUFuR2dCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBcUdqQjVGLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUjs7QUFyR2lCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQXpCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBd0dQLENBalVEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IHNvY2tldElPIGZyb20gJ3NvY2tldC5pbyc7XG5pbXBvcnQgbXF0dCBmcm9tIFwibXF0dFwiO1xuaW1wb3J0IFwiLi9kYlwiO1xuaW1wb3J0IGFwcCBmcm9tICcuL2FwcCc7XG5pbXBvcnQgRGh0IGZyb20gXCIuL21vZGVscy9EaHRcIjtcbmltcG9ydCBQbXMgZnJvbSBcIi4vbW9kZWxzL1Btc1wiO1xuaW1wb3J0IFByb2R1Y3QgZnJvbSAnLi9tb2RlbHMvUHJvZHVjdCc7XG5pbXBvcnQgVXNlciBmcm9tIFwiLi9tb2RlbHMvVXNlclwiO1xuaW1wb3J0IExlZCBmcm9tIFwiLi9tb2RlbHMvTGVkXCI7XG5pbXBvcnQgRmFuIGZyb20gXCIuL21vZGVscy9GYW5cIjtcbmltcG9ydCBCdXogZnJvbSBcIi4vbW9kZWxzL0J1elwiO1xuXG5jb25zdCBvcHRpb25zID0ge1xuICAgIHBvcnQ6IDE4ODMsXG4gICAgdXNlcm5hbWU6ICdpbmd1aycsXG4gICAgcGFzc3dvcmQ6ICdjY2l0MicsXG59XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMTsgLy8g7Y+s7Yq467KI7Zi4IOyngOyglVxuXG5jb25zdCBoYW5kbGVMaXN0aW5nID0gKCkgPT5cbiAgICBjb25zb2xlLmxvZyhg8J+YiExpc3RlbmluZyBvbjogaHR0cDovL2xvY2FsaG9zdDoke1BPUlR9YCk7IC8vIOyEnOuyhCDsi6Ttlokg7L2c67CxXG5cbi8vIHdlYiBzZXJ2ZXJcbmNvbnN0IHNlcnZlciA9IGFwcC5saXN0ZW4oUE9SVCwgaGFuZGxlTGlzdGluZyk7IC8vIO2PrO2KuOyngOyglSDrsI8g7L2c67Cx7ZWo7IiYIOyLpO2WiVxuXG5cbi8vbXF0dCBzZXJ2ZXJcbmNvbnN0IGNsaWVudCA9IG1xdHQuY29ubmVjdChcIm1xdHQ6Ly8xMjcuMC4wLjFcIiwge2NsaWVudElkOiAnaGVsbG8nfSk7XG4vLyBjb25zdCBjbGllbnQgPSBtcXR0LmNvbm5lY3QoXCJtcXR0Oi8vMTI3LjAuMC4xXCIsIG9wdGlvbnMpO1xuXG5jbGllbnQub24oXCJjb25uZWN0XCIsICgpID0+IHsgLy8gbXF0dCDsl7DqsrDtlZjquLBcbiAgICBjb25zb2xlLmxvZyhcIvCfmIdNcXR0IENvbm5lY3RcIik7XG4gICAgY2xpZW50LnN1YnNjcmliZSgnamIvc2hpbG11L3NjbGUvc21lbmNvL2Fwc3IvKy9pbnB1dC8rJyk7IC8vIOydveydhCDthqDtlL1cbiAgICBjbGllbnQuc3Vic2NyaWJlKCdqYi9zaGlsbXUvc2NsZS9zbWVuY28vYXBzci8rL291dHB1dC8rL3JlcycpO1xufSk7XG5cbmNsaWVudC5vbihcIm1lc3NhZ2VcIiwgYXN5bmMgKHRvcGljLCBtZXNzYWdlKSA9PiB7IC8vIOq1rOuPhe2VnCDthqDtlL3snLzroZzrtoDthLAg642w7J207YSwIOuwm+yVhOyYpOq4sFxuICAgIGNvbnN0IHRvcGljQ29udGFpbmVyID0gdG9waWMuc3BsaXQoJy8nKTsgLy8g7Yag7ZS9IOyKrOudvOydtFxuICAgIGNvbnN0IG9iaiA9IEpTT04ucGFyc2UobWVzc2FnZSk7IC8vIO2OmOydtOuhnOuTnCDtjIzsi7FcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTsgLy8g7ISc67KE7JeQ7IScIOyghOyGoeuwm+ydgCDsi5zqsIQgXG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICBjb25zdCBtb250aCA9IGRhdGUuZ2V0TW9udGgoKTtcbiAgICBjb25zdCB0b2RheSA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgIGNvbnN0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xuICAgIGNvbnN0IG1pbnR1ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgICBjb25zdCBzZWNvbmRzID0gZGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgY29uc3Qga2V5TmFtZSA9IFN0cmluZyh0b3BpY0NvbnRhaW5lcls1XSlcbiAgICBvYmoubWVhc3VyZWRBdCA9IG5ldyBEYXRlKERhdGUuVVRDKHllYXIsIG1vbnRoLCB0b2RheSwgaG91cnMsIG1pbnR1ZXMsIHNlY29uZHMpKTtcbiAgICBpZihvYmoua2V5ICYmIHR5cGVvZihvYmoua2V5KSA9PT0gXCJzdHJpbmdcIiAmJiB0b3BpY0NvbnRhaW5lcls3XSA9PT0gXCJwbXNcIiAmJiBvYmouZHVzdCkgeyAvLyDtlbTri7kg7Yag7ZS9IOuwjyDtjpjsnbTroZzrk5wg7Jyg7Zqo7ISxIOqygOyCrFxuICAgICAgICB0cnl7XG4gICAgICAgICAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kT25lKHsga2V5TmFtZToga2V5TmFtZSB9KTsgLy8g65SU67mE7JeQIO2VtOuLuSDsoJztkojsnbQg7J6I64uk66m0XG4gICAgICAgICAgICBpZihwcm9kdWN0ICYmIHByb2R1Y3Qua2V5TmFtZSA9PT0gb2JqLmtleSl7XG4gICAgICAgICAgICAgICAgaWYocHJvZHVjdC51c2VyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHByb2R1Y3QudXNlcjsgXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBtcyA9IGF3YWl0IFBtcy5jcmVhdGUoeyAvLyDrjbDsnbTthLAg65SU67mE7JeQIOyDiOuhnOyatCDqsJ3ssrQg7IOd7ISxIOuwjyDsoIDsnqVcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1c3Q6IG9iai5kdXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVhc3VyZWRBdDogb2JqLm1lYXN1cmVkQXQsXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IG9iai5rZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiB1c2VySWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0OiBwcm9kdWN0Ll9pZFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgcG1zLnNhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgUHJvZHVjdC5maW5kT25lQW5kVXBkYXRlKHsga2V5TmFtZSB9LCB7JGFkZFRvU2V0OiB7ZGF0YTogcG1zLl9pZH19KTsgLy8g7KCc7ZKIIOuUlOu5hCDsl4XrjbDsnbTtirhcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXNlci5maW5kQnlJZEFuZFVwZGF0ZSh7IF9pZDogdXNlcklkIH0sIHskYWRkVG9TZXQ6IHsgZGF0YXM6IHBtcy5faWR9fSk7IC8vIOycoOyggCDrlJTruYQg7JeF642w7J207Yq4XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBtcyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzIE1RVFQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZihvYmoua2V5ICYmIHR5cGVvZihvYmoua2V5KSA9PT0gXCJzdHJpbmdcIiAmJiB0b3BpY0NvbnRhaW5lcls3XSA9PT0gXCJkaHRcIiAmJiBvYmoudG1wICYmIG9iai5odW0pIHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kT25lKHsga2V5TmFtZToga2V5TmFtZSB9KTtcbiAgICAgICAgICAgICAgICBpZihwcm9kdWN0ICYmIHByb2R1Y3Qua2V5TmFtZSA9PT0gb2JqLmtleSl7XG4gICAgICAgICAgICAgICAgICAgIGlmKHByb2R1Y3QudXNlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gcHJvZHVjdC51c2VyO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGh0ID0gYXdhaXQgRGh0LmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wOiBvYmoudG1wIC8gMTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGh1bTogb2JqLmh1bSAvIDEwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZWFzdXJlZEF0OiBvYmoubWVhc3VyZWRBdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IG9iai5rZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogdXNlcklkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3Q6IHByb2R1Y3QuX2lkXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IGRodC5zYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBQcm9kdWN0LmZpbmRPbmVBbmRVcGRhdGUoeyBrZXlOYW1lIH0sIHskYWRkVG9TZXQ6IHsgZGF0YTogZGh0Ll9pZCB9fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVc2VyLmZpbmRCeUlkQW5kVXBkYXRlKHsgX2lkOiB1c2VySWQgfSwgeyRhZGRUb1NldDogeyBkYXRhczogZGh0Ll9pZCB9fSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkaHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3MgTVFUVCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxufSk7XG5cblxuLy/sm7nshozsvJPshJzrsoRcbmNvbnN0IGlvID0gc29ja2V0SU8oc2VydmVyLCB7XG4gICAgY29yczoge1xuICAgICAgICBvcmlnaW46IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCIsXG4gICAgICAgIG1ldGhvZHM6IFtcIkdFVFwiLCBcIlBPU1RcIl1cbiAgICB9XG59KTsgLy8g7IaM7LyTIGNvcnMg7ISk7KCVXG5cbi8vIGNvbnN0IGlvID0gc29ja2V0SU8oc2VydmVyLCB7XG4vLyAgICAgY29yczoge1xuLy8gICAgICAgICBvcmlnaW46IFwiKlwiLFxuLy8gICAgICAgICBtZXRob2RzOiBbXCJHRVRcIiwgXCJQT1NUXCJdXG4vLyAgICAgfVxuLy8gfSk7IC8vIOyGjOy8kyBjb3JzIOyEpOyglVxuXG4vLyBNcXR0IOuNsOydtO2EsFxuaW8ub24oXCJjb25uZWN0aW9uXCIsIHNvY2tldCA9PiB7IC8vIOyGjOy8kyDsl7DqsrBcbiAgICBjb25zb2xlLmxvZyhcIvCfmJhTb2NrZXQgQ29ubmVjdFwiKVxuXG4gICAgICAgIHNvY2tldC5vbignZGlzY29ubmVjdCcsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+lulNvY2tldCBEaXNjb25uZWN0XCIpXG4gICAgICAgIH0pOyAvLyDshozsvJMg64GK7Ja07KeQIOydtOuypO2KuCDrjIDquLBcblxuICAgICAgICBzb2NrZXQub24oXCJzZW5kSWRcIiwgYXN5bmMoaWQpID0+IHsgLy8g7ZSE66Gg7Yq466GcIOu2gO2EsCDsnKDsoIAgaWQg67Cb6riwXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gaWQudXNlcklkO1xuICAgICAgICAgICAgbGV0IGRhdGFGb3JtID0gW107XG4gICAgICAgICAgICBpZih1c2VyKSB7XG4gICAgICAgICAgICAgICAgdHJ5e1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXlzID0gYXdhaXQgRGh0LmZpbmQoeyBjb250cm9sbGVyOiB1c2VyIH0pLmRpc3RpbmN0KCdrZXknKSAvLyDrjbDsnbTthLAg65SU67mE7JeQ7IScIO2VtOuLuSDsnKDsoIDsnZgg7KCV67O0IOqwgOyguOyYpOq4sFxuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtpbmRleCwga2V5XSBvZiBrZXlzLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGh0ID0gYXdhaXQgRGh0LmZpbmQoeyBrZXkgfSkuc29ydCh7IF9pZDogLTEgfSkubGltaXQoMSkgLy8g7ZW064u5IOuUlOu5hOyXkOyEnCDstZzsi6Ag642w7J207YSwIOqwgOyguOyYpOq4sFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcG1zID0gYXdhaXQgUG1zLmZpbmQoeyBrZXkgfSkuc29ydCh7IF9pZDogLTEgfSkubGltaXQoMSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGRodCAmJiBwbXMpIHsgLy8g642w7J207YSw6rCAIOuqqOuRkCDsnojri6TrqbRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0geyAvLyDsg4jroZzsmrQg6rCd7LK0IOyDneyEsSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG1wOiBkaHRbMF0udG1wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBodW06IGRodFswXS5odW0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1c3Q6IHBtc1swXS5kdXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZWFzdXJlZEF0OiBkaHRbMF0ubWVhc3VyZWRBdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdDogZGh0WzBdLnByb2R1Y3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleU5hbWU6IGRodFswXS5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUZvcm1baW5kZXhdID0gZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzb2NrZXQuZW1pdChcIm1xdHRTdWJtaXRcIiwgSlNPTi5zdHJpbmdpZnkoZGF0YUZvcm0pKSAvLyDshozsvJPsnYQg7J207Jqp7ZW0IOuNsOydtO2EsCDtlITroaDtirjroZwg7KCE7IahXG4gICAgICAgICAgICAgICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICAgICAgc29ja2V0Lm9uKFwicHJvZHVjdElkXCIsIGFzeW5jKGlkKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9kdWN0SWQgPSBpZC5pZDtcbiAgICAgICAgICAgIGxldCBkYXRhID0ge307XG4gICAgICAgICAgICBpZihwcm9kdWN0SWQpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkaHQgPSBhd2FpdCBEaHQuZmluZCh7IHByb2R1Y3Q6IHByb2R1Y3RJZCB9KS5zb3J0KHsgX2lkOiAtMSB9KS5saW1pdCgxKVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwbXMgPSBhd2FpdCBQbXMuZmluZCh7IHByb2R1Y3Q6IHByb2R1Y3RJZCB9KS5zb3J0KHsgX2lkOiAtMSB9KS5saW1pdCgxKVxuICAgICAgICAgICAgICAgICAgICBpZihkaHQgJiYgcG1zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0geyAvLyDsg4jroZzsmrQg6rCd7LK0IOyDneyEsSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXA6IGRodFswXS50bXAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaHVtOiBkaHRbMF0uaHVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1c3Q6IHBtc1swXS5kdXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lYXN1cmVkQXQ6IGRodFswXS5tZWFzdXJlZEF0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3Q6IGRodFswXS5wcm9kdWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleU5hbWU6IGRodFswXS5rZXlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzb2NrZXQuZW1pdChcIm1xdHREYXRhXCIsIEpTT04uc3RyaW5naWZ5KGRhdGEpKSAvLyDshozsvJPsnYQg7J207Jqp7ZW0IOuNsOydtO2EsCDtlITroaDtirjroZwg7KCE7IahXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRocm93IEVycm9yKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIHNvY2tldC5vbihcInB1Ymxpc2hMRURcIiwgYXN5bmMoZGF0YSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBSZWQsIFllbGxvdywgR3JlZW4sIGF1dG8sIGtleSwgcHJvZHVjdCwgY29udHJvbGxlciB9ID0gZGF0YVxuICAgICAgICAgICAgY29uc3QgTGVkVG9waWMgPSBgamIvc2hpbG11L3NjbGUvc21lbmNvL2Fwc3IvJHtrZXl9L291dHB1dC9sZWRgOyAvLyDtjbzruJTrpqzsiawg7Yag7ZS9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRCeUlkKGNvbnRyb2xsZXIpXG4gICAgICAgICAgICAgICAgY29uc3QgcHJvZHVjdHMgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyBrZXlMaXN0OiB7JGluIDogWyBwcm9kdWN0IF19IH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleUNoZWNrID0gYXdhaXQgUHJvZHVjdC5maW5kQnlJZChwcm9kdWN0KVxuICAgICAgICAgICAgICAgIGlmKFN0cmluZyh1c2VyLmlkKSA9PT0gU3RyaW5nKHByb2R1Y3RzLmlkKSAmJiBrZXlDaGVjay5rZXlOYW1lID09PSBTdHJpbmcoa2V5KSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2ZXJpZnlEYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgUmVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgWWVsbG93LFxuICAgICAgICAgICAgICAgICAgICAgICAgR3JlZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvLFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgTGVkSnNvbiA9IEpTT04uc3RyaW5naWZ5KHZlcmlmeURhdGEpOyAvLyDsm7nsl5DshJwg67Cb7J2AIOuNsOydtO2EsCDsoJzsnbTsiqjtmZRcbiAgICAgICAgICAgICAgICAgICAgY2xpZW50LnB1Ymxpc2goTGVkVG9waWMsIExlZEpzb24sIChlcnIpID0+IHsgLy8g7Y2867iU66as7ImsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKSAvLyDsl5Drn6zrsJzsg53si5xcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudC5vbignbWVzc2FnZScsIGFzeW5jKExlZFRvcGljUmVzLCByZXNwb25zZSkgPT4geyAvLyDsl5Drn6zsl4bri6TrqbQg7L2c67Cx7Yag7ZS9IOyEnOu4jFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKExlZFRvcGljUmVzID09PSBgamIvc2hpbG11L3NjbGUvc21lbmNvL2Fwc3IvJHtrZXl9L291dHB1dC9sZWQvcmVzYCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZSkgeyAvLyDrjbDsnbTthLDqsIAg7J6I64uk66m0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnRvU3RyaW5nKCkpOyAvLyDrjbDsnbTthLAg7YyM7IuxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXN1bHQuc3VjY2VzcyAmJiByZXN1bHQua2V5ID09PSBrZXkpIHsgLy8g642w7J207YSwIOyGjSDqsrDqs7zqsIAg7ISx6rO17J20652866m0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7IC8vIOyEnOuyhOyXkOyEnCDsoITshqHrsJvsnYAg7Iuc6rCEIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9kYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtaW50dWVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IGRhdGUuZ2V0U2Vjb25kcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lYXN1cmVkQXQgPSBuZXcgRGF0ZShEYXRlLlVUQyh5ZWFyLCBtb250aCwgdG9kYXksIGhvdXJzLCBtaW50dWVzLCBzZWNvbmRzKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVkID0gYXdhaXQgTGVkLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG86IHJlc3VsdC5hdXRvLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWQ6IHJlc3VsdC5SZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdyZWVuOiByZXN1bHQuR3JlZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFllbGxvdzogcmVzdWx0LlllbGxvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVhc3VyZWRBdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZC5zYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29ja2V0LmVtaXQoJ0xFRFJlc3VsdCcsIHJlc3VsdCk7IC8vIOybueycvOuhnCDsi6Tsi5zqsIQg6rKw6rO8IOyghOuLrFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgc29ja2V0Lm9uKFwicHVibGlzaEZhblwiLCBhc3luYyhkYXRhKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG9uLCBhdXRvLCBrZXksIHByb2R1Y3QsIGNvbnRyb2xsZXIgfSA9IGRhdGFcbiAgICAgICAgICAgIGNvbnN0IGZhblRvcGljID0gYGpiL3NoaWxtdS9zY2xlL3NtZW5jby9hcHNyLyR7a2V5fS9vdXRwdXQvZmFuYDsgLy8g7Y2867iU66as7ImsIO2GoO2UvVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChjb250cm9sbGVyKVxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgVXNlci5maW5kT25lKHsga2V5TGlzdDogeyRpbiA6IFsgcHJvZHVjdCBdfSB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXlDaGVjayA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQocHJvZHVjdClcbiAgICAgICAgICAgICAgICBpZihTdHJpbmcodXNlci5pZCkgPT09IFN0cmluZyhwcm9kdWN0cy5pZCkgJiYga2V5Q2hlY2sua2V5TmFtZSA9PT0gU3RyaW5nKGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmVyaWZ5RGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0byxcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZhbkpzb24gPSBKU09OLnN0cmluZ2lmeSh2ZXJpZnlEYXRhKTsgLy8g7Ju57JeQ7IScIOuwm+ydgCDrjbDsnbTthLAg7KCc7J207Iqo7ZmUXG4gICAgICAgICAgICAgICAgICAgIGNsaWVudC5wdWJsaXNoKGZhblRvcGljLCBmYW5Kc29uLCAoZXJyKSA9PiB7IC8vIO2NvOu4lOumrOyJrFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycikgLy8g7JeQ65+s67Cc7IOd7IucXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGllbnQub24oJ21lc3NhZ2UnLCBhc3luYyhmYW5Ub3BpY1JlcywgcmVzcG9uc2UpID0+IHsgLy8g7JeQ65+s7JeG64uk66m0IOy9nOuwse2GoO2UvSDshJzruIxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihmYW5Ub3BpY1JlcyA9PT0gYGpiL3NoaWxtdS9zY2xlL3NtZW5jby9hcHNyLyR7a2V5fS9vdXRwdXQvZmFuL3Jlc2ApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UpIHsgLy8g642w7J207YSw6rCAIOyeiOuLpOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZShyZXNwb25zZS50b1N0cmluZygpKTsgLy8g642w7J207YSwIO2MjOyLsVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LnN1Y2Nlc3MgJiYgcmVzdWx0LmtleSA9PT0ga2V5KSB7IC8vIOuNsOydtO2EsCDsho0g6rKw6rO86rCAIOyEseqzteydtOudvOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpOyAvLyDshJzrsoTsl5DshJwg7KCE7Iah67Cb7J2AIOyLnOqwhCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWludHVlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZWFzdXJlZEF0ID0gbmV3IERhdGUoRGF0ZS5VVEMoeWVhciwgbW9udGgsIHRvZGF5LCBob3VycywgbWludHVlcywgc2Vjb25kcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZhbiA9IGF3YWl0IEZhbi5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvOiByZXN1bHQuYXV0byxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHVybk9uOiByZXN1bHQub24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lYXN1cmVkQXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYW4uc2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvY2tldC5lbWl0KCdmYW5SZXN1bHQnLCByZXN1bHQpOyAvLyDsm7nsnLzroZwg7Iuk7Iuc6rCEIOqysOqzvCDsoITri6xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHNvY2tldC5vbihcInB1Ymxpc2hCdXpcIiwgYXN5bmMoZGF0YSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBvbiwgYXV0bywga2V5LCBwcm9kdWN0LCBjb250cm9sbGVyIH0gPSBkYXRhXG4gICAgICAgICAgICBjb25zdCBidXpUb3BpYyA9IGBqYi9zaGlsbXUvc2NsZS9zbWVuY28vYXBzci8ke2tleX0vb3V0cHV0L2J1emA7IC8vIO2NvOu4lOumrOyJrCDthqDtlL1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoY29udHJvbGxlcilcbiAgICAgICAgICAgICAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IFVzZXIuZmluZE9uZSh7IGtleUxpc3Q6IHskaW4gOiBbIHByb2R1Y3QgXX0gfSk7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5Q2hlY2sgPSBhd2FpdCBQcm9kdWN0LmZpbmRCeUlkKHByb2R1Y3QpXG4gICAgICAgICAgICAgICAgaWYoU3RyaW5nKHVzZXIuaWQpID09PSBTdHJpbmcocHJvZHVjdHMuaWQpICYmIGtleUNoZWNrLmtleU5hbWUgPT09IFN0cmluZyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZlcmlmeURhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG8sXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBidXpKc29uID0gSlNPTi5zdHJpbmdpZnkodmVyaWZ5RGF0YSk7IC8vIOybueyXkOyEnCDrsJvsnYAg642w7J207YSwIOygnOydtOyKqO2ZlFxuICAgICAgICAgICAgICAgICAgICBjbGllbnQucHVibGlzaChidXpUb3BpYywgYnV6SnNvbiwgKGVycikgPT4geyAvLyDtjbzruJTrpqzsiaxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpIC8vIOyXkOufrOuwnOyDneyLnFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50Lm9uKCdtZXNzYWdlJywgYXN5bmMoYnV6VG9waWNSZXMsIHJlc3BvbnNlKSA9PiB7IC8vIOyXkOufrOyXhuuLpOuptCDsvZzrsLHthqDtlL0g7ISc67iMXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoYnV6VG9waWNSZXMgPT09IGBqYi9zaGlsbXUvc2NsZS9zbWVuY28vYXBzci8ke2tleX0vb3V0cHV0L2J1emApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UpIHsgLy8g642w7J207YSw6rCAIOyeiOuLpOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZShyZXNwb25zZS50b1N0cmluZygpKTsgLy8g642w7J207YSwIO2MjOyLsVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LnN1Y2Nlc3MgJiYgcmVzdWx0LmtleSA9PT0ga2V5KSB7IC8vIOuNsOydtO2EsCDsho0g6rKw6rO86rCAIOyEseqzteydtOudvOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpOyAvLyDshJzrsoTsl5DshJwg7KCE7Iah67Cb7J2AIOyLnOqwhCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWludHVlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZWFzdXJlZEF0ID0gbmV3IERhdGUoRGF0ZS5VVEMoeWVhciwgbW9udGgsIHRvZGF5LCBob3VycywgbWludHVlcywgc2Vjb25kcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJ1eiA9IGF3YWl0IEJ1ei5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvOiByZXN1bHQuYXV0byxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHVybk9uOiByZXN1bHQub24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lYXN1cmVkQXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXouc2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvY2tldC5lbWl0KCdidXpSZXN1bHQnLCByZXN1bHQpOyAvLyDsm7nsnLzroZwg7Iuk7Iuc6rCEIOqysOqzvCDsoITri6xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHNvY2tldC5vbigncHVibGlzaEF1dG8nLCBhc3luYyhkYXRhKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IGF1dG8sIGtleSwgcHJvZHVjdCwgY29udHJvbGxlciB9ID0gZGF0YVxuICAgICAgICAgICAgY29uc3QgbGVkVG9waWMgPSBgamIvc2hpbG11L3NjbGUvc21lbmNvL2Fwc3IvJHtrZXl9L291dHB1dC9sZWRgOyAvLyDtjbzruJTrpqzsiawg7Yag7ZS9XG4gICAgICAgICAgICBjb25zdCBmYW5Ub3BpYyA9IGBqYi9zaGlsbXUvc2NsZS9zbWVuY28vYXBzci8ke2tleX0vb3V0cHV0L2ZhbmA7IC8vIO2NvOu4lOumrOyJrCDthqDtlL1cbiAgICAgICAgICAgIGNvbnN0IGJ1elRvcGljID0gYGpiL3NoaWxtdS9zY2xlL3NtZW5jby9hcHNyLyR7a2V5fS9vdXRwdXQvYnV6YDsgLy8g7Y2867iU66as7ImsIO2GoO2UvVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChjb250cm9sbGVyKVxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgVXNlci5maW5kT25lKHsga2V5TGlzdDogeyRpbiA6IFsgcHJvZHVjdCBdfSB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXlDaGVjayA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQocHJvZHVjdClcbiAgICAgICAgICAgICAgICBpZihTdHJpbmcodXNlci5pZCkgPT09IFN0cmluZyhwcm9kdWN0cy5pZCkgJiYga2V5Q2hlY2sua2V5TmFtZSA9PT0gU3RyaW5nKGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmVyaWZ5RGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG8sXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhdXRvSnNvbiA9IEpTT04uc3RyaW5naWZ5KHZlcmlmeURhdGEpOyAvLyDsm7nsl5DshJwg67Cb7J2AIOuNsOydtO2EsCDsoJzsnbTsiqjtmZRcbiAgICAgICAgICAgICAgICAgICAgY2xpZW50LnB1Ymxpc2goW2xlZFRvcGljLCBmYW5Ub3BpYywgYnV6VG9waWNdLCBhdXRvSnNvbiwgKGVycikgPT4geyAvLyDtjbzruJTrpqzsiaxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpIC8vIOyXkOufrOuwnOyDneyLnFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50Lm9uKCdtZXNzYWdlJywgYXN5bmMoYnV6VG9waWNSZXMsIHJlc3BvbnNlKSA9PiB7IC8vIOyXkOufrOyXhuuLpOuptCDsvZzrsLHthqDtlL0g7ISc67iMXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoYnV6VG9waWNSZXMgPT09IGBqYi9zaGlsbXUvc2NsZS9zbWVuY28vYXBzci8ke2tleX0vb3V0cHV0L2J1emApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UpIHsgLy8g642w7J207YSw6rCAIOyeiOuLpOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZShyZXNwb25zZS50b1N0cmluZygpKTsgLy8g642w7J207YSwIO2MjOyLsVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0LnN1Y2Nlc3MgJiYgcmVzdWx0LmtleSA9PT0ga2V5KSB7IC8vIOuNsOydtO2EsCDsho0g6rKw6rO86rCAIOyEseqzteydtOudvOuptFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpOyAvLyDshJzrsoTsl5DshJwg7KCE7Iah67Cb7J2AIOyLnOqwhCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaG91cnMgPSBkYXRlLmdldEhvdXJzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWludHVlcyA9IGRhdGUuZ2V0TWludXRlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSBkYXRlLmdldFNlY29uZHMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZWFzdXJlZEF0ID0gbmV3IERhdGUoRGF0ZS5VVEMoeWVhciwgbW9udGgsIHRvZGF5LCBob3VycywgbWludHVlcywgc2Vjb25kcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJ1eiA9IGF3YWl0IEJ1ei5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvOiByZXN1bHQuYXV0byxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHVybk9uOiByZXN1bHQub24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lYXN1cmVkQXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXouc2F2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvY2tldC5lbWl0KCdidXpSZXN1bHQnLCByZXN1bHQpOyAvLyDsm7nsnLzroZwg7Iuk7Iuc6rCEIOqysOqzvCDsoITri6xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihsZWRUb3BpY1JlcyA9PT0gYGpiL3NoaWxtdS9zY2xlL3NtZW5jby9hcHNyLyR7a2V5fS9vdXRwdXQvbGVkYCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZSkgeyAvLyDrjbDsnbTthLDqsIAg7J6I64uk66m0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnRvU3RyaW5nKCkpOyAvLyDrjbDsnbTthLAg7YyM7IuxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihyZXN1bHQuc3VjY2VzcyAmJiByZXN1bHQua2V5ID09PSBrZXkpIHsgLy8g642w7J207YSwIOyGjSDqsrDqs7zqsIAg7ISx6rO17J20652866m0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7IC8vIOyEnOuyhOyXkOyEnCDsoITshqHrsJvsnYAg7Iuc6rCEIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9kYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtaW50dWVzID0gZGF0ZS5nZXRNaW51dGVzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IGRhdGUuZ2V0U2Vjb25kcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lYXN1cmVkQXQgPSBuZXcgRGF0ZShEYXRlLlVUQyh5ZWFyLCBtb250aCwgdG9kYXksIGhvdXJzLCBtaW50dWVzLCBzZWNvbmRzKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVkID0gYXdhaXQgTGVkLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG86IHJlc3VsdC5hdXRvLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWQ6IHJlc3VsdC5SZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdyZWVuOiByZXN1bHQuR3JlZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFllbGxvdzogcmVzdWx0LlllbGxvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVhc3VyZWRBdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZC5zYXZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc29ja2V0LmVtaXQoJ2xlZFJlc3VsdCcsIHJlc3VsdCk7IC8vIOybueycvOuhnCDsi6Tsi5zqsIQg6rKw6rO8IOyghOuLrFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGZhblRvcGljUmVzID09PSBgamIvc2hpbG11L3NjbGUvc21lbmNvL2Fwc3IvJHtrZXl9L291dHB1dC9mYW5gKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlKSB7IC8vIOuNsOydtO2EsOqwgCDsnojri6TrqbRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IEpTT04ucGFyc2UocmVzcG9uc2UudG9TdHJpbmcoKSk7IC8vIOuNsOydtO2EsCDtjIzsi7FcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdC5zdWNjZXNzICYmIHJlc3VsdC5rZXkgPT09IGtleSkgeyAvLyDrjbDsnbTthLAg7IaNIOqysOqzvOqwgCDshLHqs7XsnbTrnbzrqbRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKTsgLy8g7ISc67KE7JeQ7IScIOyghOyGoeuwm+ydgCDsi5zqsIQgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb250aCA9IGRhdGUuZ2V0TW9udGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2RheSA9IGRhdGUuZ2V0RGF0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1pbnR1ZXMgPSBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWNvbmRzID0gZGF0ZS5nZXRTZWNvbmRzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVhc3VyZWRBdCA9IG5ldyBEYXRlKERhdGUuVVRDKHllYXIsIG1vbnRoLCB0b2RheSwgaG91cnMsIG1pbnR1ZXMsIHNlY29uZHMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmYW4gPSBhd2FpdCBGYW4uY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0bzogcmVzdWx0LmF1dG8sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR1cm5PbjogcmVzdWx0Lm9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZWFzdXJlZEF0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFuLnNhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb2NrZXQuZW1pdCgnZmFuUmVzdWx0JywgcmVzdWx0KTsgLy8g7Ju57Jy866GcIOyLpOyLnOqwhCDqsrDqs7wg7KCE64usXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "options",
        "port",
        "username",
        "password",
        "dotenv",
        "config",
        "PORT",
        "process",
        "env",
        "handleListing",
        "console",
        "log",
        "server",
        "app",
        "listen",
        "client",
        "mqtt",
        "connect",
        "clientId",
        "on",
        "subscribe",
        "topic",
        "message",
        "topicContainer",
        "split",
        "obj",
        "JSON",
        "parse",
        "date",
        "Date",
        "year",
        "getFullYear",
        "month",
        "getMonth",
        "today",
        "getDate",
        "hours",
        "getHours",
        "mintues",
        "getMinutes",
        "seconds",
        "getSeconds",
        "keyName",
        "String",
        "measuredAt",
        "UTC",
        "key",
        "dust",
        "Product",
        "findOne",
        "product",
        "user",
        "userId",
        "Pms",
        "create",
        "controller",
        "_id",
        "pms",
        "save",
        "findOneAndUpdate",
        "$addToSet",
        "data",
        "User",
        "findByIdAndUpdate",
        "datas",
        "tmp",
        "hum",
        "Dht",
        "dht",
        "io",
        "cors",
        "origin",
        "methods",
        "socket",
        "id",
        "dataForm",
        "find",
        "distinct",
        "keys",
        "entries",
        "index",
        "sort",
        "limit",
        "emit",
        "stringify",
        "productId",
        "Red",
        "Yellow",
        "Green",
        "auto",
        "LedTopic",
        "findById",
        "keyList",
        "$in",
        "products",
        "keyCheck",
        "verifyData",
        "LedJson",
        "publish",
        "err",
        "LedTopicRes",
        "response",
        "result",
        "toString",
        "success",
        "Led",
        "led",
        "fanTopic",
        "fanJson",
        "fanTopicRes",
        "Fan",
        "turnOn",
        "fan",
        "buzTopic",
        "buzJson",
        "buzTopicRes",
        "Buz",
        "buz",
        "ledTopic",
        "autoJson",
        "ledTopicRes"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "import dotenv from 'dotenv';\nimport socketIO from 'socket.io';\nimport mqtt from \"mqtt\";\nimport \"./db\";\nimport app from './app';\nimport Dht from \"./models/Dht\";\nimport Pms from \"./models/Pms\";\nimport Product from './models/Product';\nimport User from \"./models/User\";\nimport Led from \"./models/Led\";\nimport Fan from \"./models/Fan\";\nimport Buz from \"./models/Buz\";\n\nconst options = {\n    port: 1883,\n    username: 'inguk',\n    password: 'ccit2',\n}\n\ndotenv.config();\n\nconst PORT = process.env.PORT || 3001; // 포트번호 지정\n\nconst handleListing = () =>\n    console.log(`😈Listening on: http://localhost:${PORT}`); // 서버 실행 콜백\n\n// web server\nconst server = app.listen(PORT, handleListing); // 포트지정 및 콜백함수 실행\n\n\n//mqtt server\nconst client = mqtt.connect(\"mqtt://127.0.0.1\", {clientId: 'hello'});\n// const client = mqtt.connect(\"mqtt://127.0.0.1\", options);\n\nclient.on(\"connect\", () => { // mqtt 연결하기\n    console.log(\"😇Mqtt Connect\");\n    client.subscribe('jb/shilmu/scle/smenco/apsr/+/input/+'); // 읽을 토픽\n    client.subscribe('jb/shilmu/scle/smenco/apsr/+/output/+/res');\n});\n\nclient.on(\"message\", async (topic, message) => { // 구독한 토픽으로부터 데이터 받아오기\n    const topicContainer = topic.split('/'); // 토픽 슬라이\n    const obj = JSON.parse(message); // 페이로드 파싱\n    const date = new Date(); // 서버에서 전송받은 시간 \n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const today = date.getDate();\n    const hours = date.getHours();\n    const mintues = date.getMinutes();\n    const seconds = date.getSeconds();\n    const keyName = String(topicContainer[5])\n    obj.measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n    if(obj.key && typeof(obj.key) === \"string\" && topicContainer[7] === \"pms\" && obj.dust) { // 해당 토픽 및 페이로드 유효성 검사\n        try{\n            const product = await Product.findOne({ keyName: keyName }); // 디비에 해당 제품이 있다면\n            if(product && product.keyName === obj.key){\n                if(product.user) {\n                    const userId = product.user; \n                    const pms = await Pms.create({ // 데이터 디비에 새로운 객체 생성 및 저장\n                        dust: obj.dust,\n                        measuredAt: obj.measuredAt,\n                        key: obj.key,\n                        controller: userId,\n                        product: product._id\n                    });\n                    await pms.save();\n                    await Product.findOneAndUpdate({ keyName }, {$addToSet: {data: pms._id}}); // 제품 디비 업데이트\n                    await User.findByIdAndUpdate({ _id: userId }, {$addToSet: { datas: pms._id}}); // 유저 디비 업데이트\n                    console.log(pms);\n                    console.log('Success MQTT');\n                }\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    } else if(obj.key && typeof(obj.key) === \"string\" && topicContainer[7] === \"dht\" && obj.tmp && obj.hum) {\n            try{\n                const product = await Product.findOne({ keyName: keyName });\n                if(product && product.keyName === obj.key){\n                    if(product.user) {\n                        const userId = product.user;\n                        const dht = await Dht.create({\n                            tmp: obj.tmp / 100,\n                            hum: obj.hum / 100,\n                            measuredAt: obj.measuredAt,\n                            key: obj.key,\n                            controller: userId,\n                            product: product._id\n                        });\n                        await dht.save();\n                        await Product.findOneAndUpdate({ keyName }, {$addToSet: { data: dht._id }});\n                        await User.findByIdAndUpdate({ _id: userId }, {$addToSet: { datas: dht._id }});\n                        console.log(dht);\n                        console.log('Success MQTT');\n                    }\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n});\n\n\n//웹소켓서버\nconst io = socketIO(server, {\n    cors: {\n        origin: \"http://localhost:3000\",\n        methods: [\"GET\", \"POST\"]\n    }\n}); // 소켓 cors 설정\n\n// const io = socketIO(server, {\n//     cors: {\n//         origin: \"*\",\n//         methods: [\"GET\", \"POST\"]\n//     }\n// }); // 소켓 cors 설정\n\n// Mqtt 데이터\nio.on(\"connection\", socket => { // 소켓 연결\n    console.log(\"😘Socket Connect\")\n\n        socket.on('disconnect', () => {\n            console.log(\"🥺Socket Disconnect\")\n        }); // 소켓 끊어짐 이벤트 대기\n\n        socket.on(\"sendId\", async(id) => { // 프론트로 부터 유저 id 받기\n            const user = id.userId;\n            let dataForm = [];\n            if(user) {\n                try{\n                    const keys = await Dht.find({ controller: user }).distinct('key') // 데이터 디비에서 해당 유저의 정보 가져오기\n                    for (const [index, key] of keys.entries()) {\n                        const dht = await Dht.find({ key }).sort({ _id: -1 }).limit(1) // 해당 디비에서 최신 데이터 가져오기\n                        const pms = await Pms.find({ key }).sort({ _id: -1 }).limit(1)\n                        if(dht && pms) { // 데이터가 모두 있다면\n                            const data = { // 새로운 객체 생성 \n                                tmp: dht[0].tmp,\n                                hum: dht[0].hum,\n                                dust: pms[0].dust,\n                                measuredAt: dht[0].measuredAt,\n                                product: dht[0].product,\n                                keyName: dht[0].key\n                            }\n                            dataForm[index] = data\n                        }\n                    }\n                        socket.emit(\"mqttSubmit\", JSON.stringify(dataForm)) // 소켓을 이용해 데이터 프론트로 전송\n                } catch(err) {\n                    console.log(err);\n                }\n            }\n        })\n\n        socket.on(\"productId\", async(id) => {\n            const productId = id.id;\n            let data = {};\n            if(productId) {\n                try {\n                    const dht = await Dht.find({ product: productId }).sort({ _id: -1 }).limit(1)\n                    const pms = await Pms.find({ product: productId }).sort({ _id: -1 }).limit(1)\n                    if(dht && pms) {\n                        data = { // 새로운 객체 생성 \n                            tmp: dht[0].tmp,\n                            hum: dht[0].hum,\n                            dust: pms[0].dust,\n                            measuredAt: dht[0].measuredAt,\n                            product: dht[0].product,\n                            keyName: dht[0].key\n                        }\n                    }\n                    socket.emit(\"mqttData\", JSON.stringify(data)) // 소켓을 이용해 데이터 프론트로 전송\n                } catch (err) {\n                    // throw Error();\n                    console.log(err);\n                }\n            }\n        })\n\n        socket.on(\"publishLED\", async(data) => {\n            const { Red, Yellow, Green, auto, key, product, controller } = data\n            const LedTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/led`; // 퍼블리쉬 토픽\n            try {\n                const user = await User.findById(controller)\n                const products = await User.findOne({ keyList: {$in : [ product ]} });\n                const keyCheck = await Product.findById(product)\n                if(String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                    const verifyData = {\n                        Red,\n                        Yellow,\n                        Green,\n                        auto,\n                        key\n                    }\n                    const LedJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n                    client.publish(LedTopic, LedJson, (err) => { // 퍼블리쉬\n                        if(err) {\n                            return console.log(err) // 에러발생시\n                        }\n                        client.on('message', async(LedTopicRes, response) => { // 에러없다면 콜백토픽 서브\n                            if(LedTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/led/res`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const led = await Led.create({\n                                            auto: result.auto,\n                                            Red: result.Red,\n                                            Green: result.Green,\n                                            Yellow: result.Yellow,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        led.save();\n                                        socket.emit('LEDResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                        });\n                    });\n                }\n            } catch(err) {\n                console.log(err);\n            }\n        })\n        socket.on(\"publishFan\", async(data) => {\n            const { on, auto, key, product, controller } = data\n            const fanTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/fan`; // 퍼블리쉬 토픽\n            try {\n                const user = await User.findById(controller)\n                const products = await User.findOne({ keyList: {$in : [ product ]} });\n                const keyCheck = await Product.findById(product)\n                if(String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                    const verifyData = {\n                        on,\n                        auto,\n                        key\n                    }\n                    const fanJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n                    client.publish(fanTopic, fanJson, (err) => { // 퍼블리쉬\n                        if(err) {\n                            return console.log(err) // 에러발생시\n                        }\n                        client.on('message', async(fanTopicRes, response) => { // 에러없다면 콜백토픽 서브\n                            if(fanTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/fan/res`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const fan = await Fan.create({\n                                            auto: result.auto,\n                                            turnOn: result.on,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        fan.save();\n                                        socket.emit('fanResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                        });\n                    });\n                }\n            } catch(err) {\n                console.log(err);\n            }\n        })\n        socket.on(\"publishBuz\", async(data) => {\n            const { on, auto, key, product, controller } = data\n            const buzTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/buz`; // 퍼블리쉬 토픽\n            try {\n                const user = await User.findById(controller)\n                const products = await User.findOne({ keyList: {$in : [ product ]} });\n                const keyCheck = await Product.findById(product)\n                if(String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                    const verifyData = {\n                        on,\n                        auto,\n                        key\n                    }\n                    const buzJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n                    client.publish(buzTopic, buzJson, (err) => { // 퍼블리쉬\n                        if(err) {\n                            return console.log(err) // 에러발생시\n                        }\n                        client.on('message', async(buzTopicRes, response) => { // 에러없다면 콜백토픽 서브\n                            if(buzTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/buz`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const buz = await Buz.create({\n                                            auto: result.auto,\n                                            turnOn: result.on,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        buz.save();\n                                        socket.emit('buzResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                        });\n                    });\n                }\n            } catch(err) {\n                console.log(err);\n            }\n        })\n        socket.on('publishAuto', async(data) => {\n            const { auto, key, product, controller } = data\n            const ledTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/led`; // 퍼블리쉬 토픽\n            const fanTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/fan`; // 퍼블리쉬 토픽\n            const buzTopic = `jb/shilmu/scle/smenco/apsr/${key}/output/buz`; // 퍼블리쉬 토픽\n            try {\n                const user = await User.findById(controller)\n                const products = await User.findOne({ keyList: {$in : [ product ]} });\n                const keyCheck = await Product.findById(product)\n                if(String(user.id) === String(products.id) && keyCheck.keyName === String(key)) {\n                    const verifyData = {\n                        auto,\n                        key\n                    }\n                    const autoJson = JSON.stringify(verifyData); // 웹에서 받은 데이터 제이슨화\n                    client.publish([ledTopic, fanTopic, buzTopic], autoJson, (err) => { // 퍼블리쉬\n                        if(err) {\n                            return console.log(err) // 에러발생시\n                        }\n                        client.on('message', async(buzTopicRes, response) => { // 에러없다면 콜백토픽 서브\n                            if(buzTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/buz`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const buz = await Buz.create({\n                                            auto: result.auto,\n                                            turnOn: result.on,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        buz.save();\n                                        socket.emit('buzResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                            if(ledTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/led`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const led = await Led.create({\n                                            auto: result.auto,\n                                            Red: result.Red,\n                                            Green: result.Green,\n                                            Yellow: result.Yellow,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        led.save();\n                                        socket.emit('ledResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                            if(fanTopicRes === `jb/shilmu/scle/smenco/apsr/${key}/output/fan`) {\n                                if(response) { // 데이터가 있다면\n                                    const result = JSON.parse(response.toString()); // 데이터 파싱\n                                    if(result.success && result.key === key) { // 데이터 속 결과가 성공이라면\n                                        const date = new Date(); // 서버에서 전송받은 시간 \n                                        const year = date.getFullYear();\n                                        const month = date.getMonth();\n                                        const today = date.getDate();\n                                        const hours = date.getHours();\n                                        const mintues = date.getMinutes();\n                                        const seconds = date.getSeconds();\n                                        const measuredAt = new Date(Date.UTC(year, month, today, hours, mintues, seconds));\n                                        const fan = await Fan.create({\n                                            auto: result.auto,\n                                            turnOn: result.on,\n                                            measuredAt,\n                                            controller,\n                                            product,\n                                            key\n                                        })                    \n                                        fan.save();\n                                        socket.emit('fanResult', result); // 웹으로 실시간 결과 전달\n                                    }\n                                }\n                            }\n                        });\n                    })\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        })\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623720484632
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/db.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/db.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\n_mongoose[\"default\"].connect(process.env.MONGO_URL, {\n  // 몽고DB 연결 설정\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useUnifiedTopology: true\n});\n\nvar db = _mongoose[\"default\"].connection;\n\nvar handleOpen = function handleOpen() {\n  return console.log(\"😎Connected to DB\");\n}; // 몽고디비 연결시 콜백\n\n\nvar handleError = function handleError(error) {\n  return console.log(\"\\uD83E\\uDD75Error on DB Connection: \".concat(error));\n}; // 몽고디비 연결 실패시 에러 콜백\n\n\ndb.once(\"open\", handleOpen);\ndb.on('error', handleError);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJjb25uZWN0aW9uIiwiaGFuZGxlT3BlbiIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVFcnJvciIsImVycm9yIiwib25jZSIsIm9uIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUFBLG1CQUFPQyxNQUFQOztBQUVBQyxxQkFBU0MsT0FBVCxDQUFpQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQTdCLEVBQXdDO0FBQUU7QUFDdENDLEVBQUFBLGVBQWUsRUFBRSxJQURtQjtBQUVwQ0MsRUFBQUEsZ0JBQWdCLEVBQUUsS0FGa0I7QUFHcENDLEVBQUFBLGtCQUFrQixFQUFFO0FBSGdCLENBQXhDOztBQU9BLElBQU1DLEVBQUUsR0FBR1IscUJBQVNTLFVBQXBCOztBQUNBLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosQ0FBTjtBQUFBLENBQW5CLEMsQ0FBMEQ7OztBQUMxRCxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFEO0FBQUEsU0FBV0gsT0FBTyxDQUFDQyxHQUFSLCtDQUF5Q0UsS0FBekMsRUFBWDtBQUFBLENBQXBCLEMsQ0FBaUY7OztBQUVqRk4sRUFBRSxDQUFDTyxJQUFILENBQVEsTUFBUixFQUFnQkwsVUFBaEI7QUFDQUYsRUFBRSxDQUFDUSxFQUFILENBQU0sT0FBTixFQUFlSCxXQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5cbmRvdGVudi5jb25maWcoKTtcblxubW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5NT05HT19VUkwsIHsgLy8g66q96rOgREIg7Jew6rKwIOyEpOyglVxuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZSxcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcbiAgICB9XG4pO1xuXG5jb25zdCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5jb25zdCBoYW5kbGVPcGVuID0gKCkgPT4gY29uc29sZS5sb2coXCLwn5iOQ29ubmVjdGVkIHRvIERCXCIpIC8vIOuqveqzoOuUlOu5hCDsl7DqsrDsi5wg7L2c67CxXG5jb25zdCBoYW5kbGVFcnJvciA9IChlcnJvcikgPT4gY29uc29sZS5sb2coYPCfpbVFcnJvciBvbiBEQiBDb25uZWN0aW9uOiAke2Vycm9yfWApIC8vIOuqveqzoOuUlOu5hCDsl7DqsrAg7Iuk7Yyo7IucIOyXkOufrCDsvZzrsLFcblxuZGIub25jZShcIm9wZW5cIiwgaGFuZGxlT3Blbik7XG5kYi5vbignZXJyb3InLCBoYW5kbGVFcnJvcik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "dotenv",
        "config",
        "mongoose",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "useFindAndModify",
        "useUnifiedTopology",
        "db",
        "connection",
        "handleOpen",
        "console",
        "log",
        "handleError",
        "error",
        "once",
        "on"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,mBAAOC,MAAP;;AAEAC,qBAASC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AAAE;AACtCC,EAAAA,eAAe,EAAE,IADmB;AAEpCC,EAAAA,gBAAgB,EAAE,KAFkB;AAGpCC,EAAAA,kBAAkB,EAAE;AAHgB,CAAxC;;AAOA,IAAMC,EAAE,GAAGR,qBAASS,UAApB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,CAAnB,C,CAA0D;;;AAC1D,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAWH,OAAO,CAACC,GAAR,+CAAyCE,KAAzC,EAAX;AAAA,CAApB,C,CAAiF;;;AAEjFN,EAAE,CAACO,IAAH,CAAQ,MAAR,EAAgBL,UAAhB;AACAF,EAAE,CAACQ,EAAH,CAAM,OAAN,EAAeH,WAAf",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nmongoose.connect(process.env.MONGO_URL, { // 몽고DB 연결 설정\n    useNewUrlParser: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true\n    }\n);\n\nconst db = mongoose.connection;\nconst handleOpen = () => console.log(\"😎Connected to DB\") // 몽고디비 연결시 콜백\nconst handleError = (error) => console.log(`🥵Error on DB Connection: ${error}`) // 몽고디비 연결 실패시 에러 콜백\n\ndb.once(\"open\", handleOpen);\ndb.on('error', handleError);"
      ]
    },
    "sourceType": "script",
    "mtime": 1622031133846
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/app.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/app.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _globalRouter = _interopRequireDefault(require(\"./routers/globalRouter\"));\n\nvar _userRouter = _interopRequireDefault(require(\"./routers/userRouter\"));\n\nvar _dataRouter = _interopRequireDefault(require(\"./routers/dataRouter\"));\n\nvar _apiRouter = _interopRequireDefault(require(\"./routers/apiRouter\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nvar cors_origin = [\"http://localhost:3000\"]; // const cors_origin = [`http://114.71.241.151:3000`];\n//middlewares\n\napp.use((0, _helmet[\"default\"])({\n  contentSecurityPolicy: false\n})); // 보안\n\napp.use((0, _cookieParser[\"default\"])()); // 쿠키 저장\n\napp.use((0, _cors[\"default\"])({\n  origin: cors_origin,\n  credentials: true\n})); // cors설정\n\napp.use(_bodyParser[\"default\"].json()); //JSON 가져옴\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // FORM형식 가져옴\n\napp.use((0, _morgan[\"default\"])(\"dev\")); // 접속 추적\n//Router\n\napp.use(_routes[\"default\"].api, _apiRouter[\"default\"]);\napp.use(_routes[\"default\"].home, _globalRouter[\"default\"]);\napp.use(_routes[\"default\"].users, _userRouter[\"default\"]);\napp.use(_routes[\"default\"].data, _dataRouter[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJjb3JzX29yaWdpbiIsInVzZSIsImNvbnRlbnRTZWN1cml0eVBvbGljeSIsIm9yaWdpbiIsImNyZWRlbnRpYWxzIiwiYm9keVBhcmVzZXIiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicm91dGVzIiwiYXBpIiwiYXBpUm91dGVyIiwiaG9tZSIsImdsb2JhbFJvdXRlciIsInVzZXJzIiwidXNlclJvdXRlciIsImRhdGEiLCJkYXRhUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFDQSxJQUFNQyxXQUFXLEdBQUcseUJBQXBCLEMsQ0FDQTtBQUVBOztBQUNBRCxHQUFHLENBQUNFLEdBQUosQ0FBUSx3QkFBTztBQUNYQyxFQUFBQSxxQkFBcUIsRUFBRTtBQURaLENBQVAsQ0FBUixFLENBRUs7O0FBQ0xILEdBQUcsQ0FBQ0UsR0FBSixDQUFRLCtCQUFSLEUsQ0FBeUI7O0FBQ3pCRixHQUFHLENBQUNFLEdBQUosQ0FBUSxzQkFBSztBQUNURSxFQUFBQSxNQUFNLEVBQUVILFdBREM7QUFFVEksRUFBQUEsV0FBVyxFQUFFO0FBRkosQ0FBTCxDQUFSLEUsQ0FHSTs7QUFDSkwsR0FBRyxDQUFDRSxHQUFKLENBQVFJLHVCQUFZQyxJQUFaLEVBQVIsRSxDQUE2Qjs7QUFDN0JQLEdBQUcsQ0FBQ0UsR0FBSixDQUFRSSx1QkFBWUUsVUFBWixDQUF1QjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF2QixDQUFSLEUsQ0FBcUQ7O0FBQ3JEVCxHQUFHLENBQUNFLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVIsRSxDQUF3QjtBQUV4Qjs7QUFDQUYsR0FBRyxDQUFDRSxHQUFKLENBQVFRLG1CQUFPQyxHQUFmLEVBQW9CQyxxQkFBcEI7QUFDQVosR0FBRyxDQUFDRSxHQUFKLENBQVFRLG1CQUFPRyxJQUFmLEVBQXFCQyx3QkFBckI7QUFDQWQsR0FBRyxDQUFDRSxHQUFKLENBQVFRLG1CQUFPSyxLQUFmLEVBQXNCQyxzQkFBdEI7QUFDQWhCLEdBQUcsQ0FBQ0UsR0FBSixDQUFRUSxtQkFBT08sSUFBZixFQUFxQkMsc0JBQXJCO2VBRWVsQixHIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBtb3JnYW4gZnJvbSBcIm1vcmdhblwiO1xuaW1wb3J0IGhlbG1ldCBmcm9tIFwiaGVsbWV0XCI7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gXCJjb29raWUtcGFyc2VyXCI7XG5pbXBvcnQgYm9keVBhcmVzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IGdsb2JhbFJvdXRlciBmcm9tIFwiLi9yb3V0ZXJzL2dsb2JhbFJvdXRlclwiO1xuaW1wb3J0IHVzZXJSb3V0ZXIgZnJvbSBcIi4vcm91dGVycy91c2VyUm91dGVyXCI7XG5pbXBvcnQgZGF0YVJvdXRlciBmcm9tIFwiLi9yb3V0ZXJzL2RhdGFSb3V0ZXJcIjtcbmltcG9ydCBhcGlSb3V0ZXIgZnJvbSBcIi4vcm91dGVycy9hcGlSb3V0ZXJcIjtcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4vcm91dGVzXCI7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGNvcnNfb3JpZ2luID0gW2BodHRwOi8vbG9jYWxob3N0OjMwMDBgXTtcbi8vIGNvbnN0IGNvcnNfb3JpZ2luID0gW2BodHRwOi8vMTE0LjcxLjI0MS4xNTE6MzAwMGBdO1xuXG4vL21pZGRsZXdhcmVzXG5hcHAudXNlKGhlbG1ldCh7IFxuICAgIGNvbnRlbnRTZWN1cml0eVBvbGljeTogZmFsc2UgXG59KSk7IC8vIOuztOyViFxuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7IC8vIOy/oO2CpCDsoIDsnqVcbmFwcC51c2UoY29ycyh7XG4gICAgb3JpZ2luOiBjb3JzX29yaWdpbixcbiAgICBjcmVkZW50aWFsczogdHJ1ZVxufSkpIC8vIGNvcnPshKTsoJVcbmFwcC51c2UoYm9keVBhcmVzZXIuanNvbigpKTsgLy9KU09OIOqwgOyguOyYtFxuYXBwLnVzZShib2R5UGFyZXNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpOyAvLyBGT1JN7ZiV7IudIOqwgOyguOyYtFxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpOyAvLyDsoJHsho0g7LaU7KCBXG5cbi8vUm91dGVyXG5hcHAudXNlKHJvdXRlcy5hcGksIGFwaVJvdXRlcik7IFxuYXBwLnVzZShyb3V0ZXMuaG9tZSwgZ2xvYmFsUm91dGVyKTtcbmFwcC51c2Uocm91dGVzLnVzZXJzLCB1c2VyUm91dGVyKTtcbmFwcC51c2Uocm91dGVzLmRhdGEsIGRhdGFSb3V0ZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "cors_origin",
        "use",
        "contentSecurityPolicy",
        "origin",
        "credentials",
        "bodyPareser",
        "json",
        "urlencoded",
        "extended",
        "routes",
        "api",
        "apiRouter",
        "home",
        "globalRouter",
        "users",
        "userRouter",
        "data",
        "dataRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,WAAW,GAAG,yBAApB,C,CACA;AAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQ,wBAAO;AACXC,EAAAA,qBAAqB,EAAE;AADZ,CAAP,CAAR,E,CAEK;;AACLH,GAAG,CAACE,GAAJ,CAAQ,+BAAR,E,CAAyB;;AACzBF,GAAG,CAACE,GAAJ,CAAQ,sBAAK;AACTE,EAAAA,MAAM,EAAEH,WADC;AAETI,EAAAA,WAAW,EAAE;AAFJ,CAAL,CAAR,E,CAGI;;AACJL,GAAG,CAACE,GAAJ,CAAQI,uBAAYC,IAAZ,EAAR,E,CAA6B;;AAC7BP,GAAG,CAACE,GAAJ,CAAQI,uBAAYE,UAAZ,CAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB,CAAR,E,CAAqD;;AACrDT,GAAG,CAACE,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CAAwB;AAExB;;AACAF,GAAG,CAACE,GAAJ,CAAQQ,mBAAOC,GAAf,EAAoBC,qBAApB;AACAZ,GAAG,CAACE,GAAJ,CAAQQ,mBAAOG,IAAf,EAAqBC,wBAArB;AACAd,GAAG,CAACE,GAAJ,CAAQQ,mBAAOK,KAAf,EAAsBC,sBAAtB;AACAhB,GAAG,CAACE,GAAJ,CAAQQ,mBAAOO,IAAf,EAAqBC,sBAArB;eAEelB,G",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "import express from \"express\";\nimport morgan from \"morgan\";\nimport helmet from \"helmet\";\nimport cookieParser from \"cookie-parser\";\nimport bodyPareser from \"body-parser\";\nimport cors from \"cors\";\nimport globalRouter from \"./routers/globalRouter\";\nimport userRouter from \"./routers/userRouter\";\nimport dataRouter from \"./routers/dataRouter\";\nimport apiRouter from \"./routers/apiRouter\";\nimport routes from \"./routes\";\n\nconst app = express();\nconst cors_origin = [`http://localhost:3000`];\n// const cors_origin = [`http://114.71.241.151:3000`];\n\n//middlewares\napp.use(helmet({ \n    contentSecurityPolicy: false \n})); // 보안\napp.use(cookieParser()); // 쿠키 저장\napp.use(cors({\n    origin: cors_origin,\n    credentials: true\n})) // cors설정\napp.use(bodyPareser.json()); //JSON 가져옴\napp.use(bodyPareser.urlencoded({ extended: true })); // FORM형식 가져옴\napp.use(morgan(\"dev\")); // 접속 추적\n\n//Router\napp.use(routes.api, apiRouter); \napp.use(routes.home, globalRouter);\napp.use(routes.users, userRouter);\napp.use(routes.data, dataRouter);\n\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622694412797
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/routers/globalRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/globalRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/routers/globalRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/globalRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
        "sourceFileName": "globalRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _globalController = require(\"../controllers/globalController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middleware = _interopRequireDefault(require(\"../middleware\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar globalRouter = _express[\"default\"].Router(); // globalRouter.get(routes.python, python);\n\n\nglobalRouter.post(_routes[\"default\"].join, _globalController.postJoin);\nglobalRouter.post(_routes[\"default\"].login, _globalController.postLogin);\nglobalRouter.get(_routes[\"default\"].auth, _middleware[\"default\"], _globalController.auth);\nglobalRouter.get(_routes[\"default\"].logout, _middleware[\"default\"], _globalController.logout);\nglobalRouter.get(_routes[\"default\"].me, _middleware[\"default\"], _userController.getMe);\nvar _default = globalRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbFJvdXRlci5qcyJdLCJuYW1lcyI6WyJnbG9iYWxSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInJvdXRlcyIsImpvaW4iLCJwb3N0Sm9pbiIsImxvZ2luIiwicG9zdExvZ2luIiwiZ2V0IiwiYXV0aCIsImp3dE1pZGRsZXdhcmUiLCJsb2dvdXQiLCJtZSIsImdldE1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQSxJQUFNQSxZQUFZLEdBQUdDLG9CQUFRQyxNQUFSLEVBQXJCLEMsQ0FHQTs7O0FBRUFGLFlBQVksQ0FBQ0csSUFBYixDQUFrQkMsbUJBQU9DLElBQXpCLEVBQStCQywwQkFBL0I7QUFFQU4sWUFBWSxDQUFDRyxJQUFiLENBQWtCQyxtQkFBT0csS0FBekIsRUFBZ0NDLDJCQUFoQztBQUVBUixZQUFZLENBQUNTLEdBQWIsQ0FBaUJMLG1CQUFPTSxJQUF4QixFQUE4QkMsc0JBQTlCLEVBQTZDRCxzQkFBN0M7QUFFQVYsWUFBWSxDQUFDUyxHQUFiLENBQWlCTCxtQkFBT1EsTUFBeEIsRUFBZ0NELHNCQUFoQyxFQUErQ0Msd0JBQS9DO0FBRUFaLFlBQVksQ0FBQ1MsR0FBYixDQUFpQkwsbUJBQU9TLEVBQXhCLEVBQTRCRixzQkFBNUIsRUFBMkNHLHFCQUEzQztlQUVlZCxZIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvcm91dGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHsgcG9zdEpvaW4sIHBvc3RMb2dpbiwgbG9nb3V0LCBhdXRoLCBweXRob24sIGhvbWUgfSBmcm9tICcuLi9jb250cm9sbGVycy9nbG9iYWxDb250cm9sbGVyJztcbmltcG9ydCB7IGdldE1lIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlckNvbnRyb2xsZXInO1xuaW1wb3J0IGp3dE1pZGRsZXdhcmUgZnJvbSAnLi4vbWlkZGxld2FyZSc7XG5pbXBvcnQgcm91dGVzIGZyb20gXCIuLi9yb3V0ZXNcIjtcblxuXG5jb25zdCBnbG9iYWxSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5cbi8vIGdsb2JhbFJvdXRlci5nZXQocm91dGVzLnB5dGhvbiwgcHl0aG9uKTtcblxuZ2xvYmFsUm91dGVyLnBvc3Qocm91dGVzLmpvaW4sIHBvc3RKb2luKTtcblxuZ2xvYmFsUm91dGVyLnBvc3Qocm91dGVzLmxvZ2luLCBwb3N0TG9naW4pO1xuXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5hdXRoLCBqd3RNaWRkbGV3YXJlLCBhdXRoKTtcbiAgICAgICAgXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5sb2dvdXQsIGp3dE1pZGRsZXdhcmUsIGxvZ291dCk7XG5cbmdsb2JhbFJvdXRlci5nZXQocm91dGVzLm1lLCBqd3RNaWRkbGV3YXJlLCBnZXRNZSk7XG5cbmV4cG9ydCBkZWZhdWx0IGdsb2JhbFJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "globalRouter.js"
      ],
      "names": [
        "globalRouter",
        "express",
        "Router",
        "post",
        "routes",
        "join",
        "postJoin",
        "login",
        "postLogin",
        "get",
        "auth",
        "jwtMiddleware",
        "logout",
        "me",
        "getMe"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB,C,CAGA;;;AAEAF,YAAY,CAACG,IAAb,CAAkBC,mBAAOC,IAAzB,EAA+BC,0BAA/B;AAEAN,YAAY,CAACG,IAAb,CAAkBC,mBAAOG,KAAzB,EAAgCC,2BAAhC;AAEAR,YAAY,CAACS,GAAb,CAAiBL,mBAAOM,IAAxB,EAA8BC,sBAA9B,EAA6CD,sBAA7C;AAEAV,YAAY,CAACS,GAAb,CAAiBL,mBAAOQ,MAAxB,EAAgCD,sBAAhC,EAA+CC,wBAA/C;AAEAZ,YAAY,CAACS,GAAb,CAAiBL,mBAAOS,EAAxB,EAA4BF,sBAA5B,EAA2CG,qBAA3C;eAEed,Y",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "sourcesContent": [
        "import express from \"express\";\nimport { postJoin, postLogin, logout, auth, python, home } from '../controllers/globalController';\nimport { getMe } from '../controllers/userController';\nimport jwtMiddleware from '../middleware';\nimport routes from \"../routes\";\n\n\nconst globalRouter = express.Router();\n\n\n// globalRouter.get(routes.python, python);\n\nglobalRouter.post(routes.join, postJoin);\n\nglobalRouter.post(routes.login, postLogin);\n\nglobalRouter.get(routes.auth, jwtMiddleware, auth);\n        \nglobalRouter.get(routes.logout, jwtMiddleware, logout);\n\nglobalRouter.get(routes.me, jwtMiddleware, getMe);\n\nexport default globalRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621161401896
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/dataController.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/dataController.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/controllers/dataController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/dataController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
        "sourceFileName": "dataController.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postDateData = exports.deviceDetail = exports.dataUser = void 0;\n\nvar _Dht = _interopRequireDefault(require(\"../models/Dht\"));\n\nvar _Pms = _interopRequireDefault(require(\"../models/Pms\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _pythonShell = require(\"python-shell\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar scriptPath = '/Users/gim-ingug/Documents/iotserver/pythonCgi';\nvar ObjectId = _mongoose[\"default\"].Types.ObjectId;\n\nvar dataUser = function dataUser(req, res) {\n  var id = req.params.id;\n\n  _pythonShell.PythonShell.run('DevicePage.py', {\n    // 파이썬 파일에게 매개변수 전달\n    mode: 'json',\n    pythonOptions: ['-u'],\n    scriptPath: scriptPath,\n    args: id\n  }, function (err, data) {\n    if (err) {\n      console.log(err);\n      return res.json({\n        success: false,\n        error: err\n      });\n    }\n\n    console.log(data);\n    return res.json({\n      // 파이썬 파일로부터 처리된 데이터를 클라이언트로 전송\n      success: true,\n      data: data\n    });\n  });\n};\n\nexports.dataUser = dataUser;\n\nvar deviceDetail = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var id, avgTmpForm, avgHumForm, avgDustForm, korea, year, month, date, endDate, today, tomorrow, dhtCalculator, pmsCalculator, dhtToday, pmsToday, dhtHourCalculator, pmsHourCalculator, i, todayContainer, _iterator, _step, dht, _iterator2, _step2, pms, _id, tmp, hum, measuredAt, dust, data, _iterator3, _step3, _dht, _iterator4, _step4, _pms;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = req.params.id;\n            avgTmpForm = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            avgHumForm = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            avgDustForm = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            korea = new Date();\n            year = korea.getFullYear();\n            month = korea.getMonth();\n            date = korea.getDate();\n            endDate = korea.getDate() + 1;\n            today = new Date(Date.UTC(year, month, date));\n            tomorrow = new Date(Date.UTC(year, month, endDate));\n            _context.prev = 11;\n            _context.next = 14;\n            return _Dht[\"default\"].aggregate([{\n              $match: {\n                product: new ObjectId(id)\n              }\n            }, {\n              $group: {\n                \"_id\": {\n                  \"$month\": {\n                    \"$toDate\": \"$measuredAt\"\n                  }\n                },\n                AverageTmpValue: {\n                  $avg: \"$tmp\"\n                },\n                AverageHumValue: {\n                  $avg: \"$hum\"\n                }\n              }\n            }]);\n\n          case 14:\n            dhtCalculator = _context.sent;\n            _context.next = 17;\n            return _Pms[\"default\"].aggregate([{\n              $match: {\n                product: new ObjectId(id)\n              }\n            }, {\n              $group: {\n                \"_id\": {\n                  \"$month\": {\n                    \"$toDate\": \"$measuredAt\"\n                  }\n                },\n                AverageDustValue: {\n                  $avg: \"$dust\"\n                }\n              }\n            }]);\n\n          case 17:\n            pmsCalculator = _context.sent;\n            _context.next = 20;\n            return _Dht[\"default\"].find({\n              product: id,\n              measuredAt: {\n                $gte: today,\n                $lt: tomorrow\n              }\n            });\n\n          case 20:\n            dhtToday = _context.sent;\n            _context.next = 23;\n            return _Pms[\"default\"].find({\n              product: id,\n              measuredAt: {\n                $gte: today,\n                $lt: tomorrow\n              }\n            });\n\n          case 23:\n            pmsToday = _context.sent;\n            _context.next = 26;\n            return _Dht[\"default\"].aggregate([{\n              $match: {\n                $and: [{\n                  product: new ObjectId(id)\n                }, {\n                  measuredAt: {\n                    $gte: today,\n                    $lt: tomorrow\n                  }\n                }]\n              }\n            }, {\n              $group: {\n                \"_id\": {\n                  \"$hour\": {\n                    \"$toDate\": \"$measuredAt\"\n                  }\n                },\n                AverageTmpValue: {\n                  $avg: \"$tmp\"\n                },\n                AverageHumValue: {\n                  $avg: \"$hum\"\n                },\n                MaxTmpValue: {\n                  $max: \"$tmp\"\n                },\n                MaxHumValue: {\n                  $max: \"$hum\"\n                },\n                MinTmpValue: {\n                  $min: \"$tmp\"\n                },\n                MinHumValue: {\n                  $min: \"$hum\"\n                }\n              }\n            }, {\n              $sort: {\n                _id: 1\n              }\n            }]);\n\n          case 26:\n            dhtHourCalculator = _context.sent;\n            _context.next = 29;\n            return _Pms[\"default\"].aggregate([{\n              $match: {\n                $and: [{\n                  product: new ObjectId(id)\n                }, {\n                  measuredAt: {\n                    $gte: today,\n                    $lt: tomorrow\n                  }\n                }]\n              }\n            }, {\n              $group: {\n                \"_id\": {\n                  \"$hour\": {\n                    \"$toDate\": \"$measuredAt\"\n                  }\n                },\n                AverageDustValue: {\n                  $avg: \"$dust\"\n                },\n                MaxDustValue: {\n                  $max: \"$dust\"\n                },\n                MinDustValue: {\n                  $min: \"$dust\"\n                }\n              }\n            }, {\n              $sort: {\n                _id: 1\n              }\n            }]);\n\n          case 29:\n            pmsHourCalculator = _context.sent;\n\n            if (dhtHourCalculator.length === pmsHourCalculator.length) {\n              for (i = 0; i < dhtHourCalculator.length; i++) {\n                dhtHourCalculator[i] = _objectSpread(_objectSpread({}, dhtHourCalculator[i]), pmsHourCalculator[i]);\n              }\n            }\n\n            todayContainer = [];\n\n            if (dhtToday && pmsToday) {\n              _iterator = _createForOfIteratorHelper(dhtToday);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  dht = _step.value;\n                  _iterator2 = _createForOfIteratorHelper(pmsToday);\n\n                  try {\n                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                      pms = _step2.value;\n                      _id = dht._id, tmp = dht.tmp, hum = dht.hum, measuredAt = dht.measuredAt;\n                      dust = pms.dust;\n\n                      if (String(measuredAt) === String(pms.measuredAt)) {\n                        data = {\n                          _id: _id,\n                          tmp: tmp,\n                          hum: hum,\n                          dust: dust,\n                          measuredAt: measuredAt\n                        };\n                        todayContainer.push(data);\n                      }\n                    }\n                  } catch (err) {\n                    _iterator2.e(err);\n                  } finally {\n                    _iterator2.f();\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            }\n\n            _iterator3 = _createForOfIteratorHelper(dhtCalculator);\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                _dht = _step3.value;\n                avgTmpForm.splice(_dht._id - 1, 1, _dht.AverageTmpValue);\n                avgHumForm.splice(_dht._id - 1, 1, _dht.AverageHumValue);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            _iterator4 = _createForOfIteratorHelper(pmsCalculator);\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                _pms = _step4.value;\n                avgDustForm.splice(_pms._id - 1, 1, _pms.AverageDustValue);\n              } // for (const dht of dhtArray) {\n              //     // const pms = await Pms.findOne({ product: id, measuredAt: dht.measuredAt }).select('-_id dust') // 실재\n              //     const pms = await Pms.findOne({ product: id }).select('-_id dust')\n              //     if(pms){\n              //         const data = {\n              //             _id: dht._id,\n              //             tmp: dht.tmp,\n              //             hum: dht.hum,\n              //             dust: pms.dust,\n              //             measuredAt: dht.measuredAt\n              //         }\n              //         dataArray.push(data)\n              //     }\n              // }\n\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            return _context.abrupt(\"return\", res.status(200).json({\n              success: true,\n              avgTmpForm: avgTmpForm,\n              avgHumForm: avgHumForm,\n              avgDustForm: avgDustForm,\n              todayContainer: todayContainer.reverse(),\n              dhtHourCalculator: dhtHourCalculator\n            }));\n\n          case 40:\n            _context.prev = 40;\n            _context.t0 = _context[\"catch\"](11);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", res.status(204).json({\n              success: false,\n              data: []\n            }));\n\n          case 44:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 40]]);\n  }));\n\n  return function deviceDetail(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.deviceDetail = deviceDetail;\n\nvar postDateData = function postDateData(req, res) {\n  var _req$body = req.body,\n      date = _req$body.date,\n      endDate = _req$body.endDate,\n      btnResult = _req$body.btnResult,\n      avgCheck = _req$body.avgCheck,\n      minCheck = _req$body.minCheck,\n      maxCheck = _req$body.maxCheck,\n      id = req.params.id;\n  var convertDate = new Date();\n  var convertEndDate = new Date();\n  var intResult = parseInt(btnResult);\n\n  if (btnResult === 0 && (endDate && date) !== null) {\n    // 기간선택\n    convertDate = date.split('T')[0];\n    convertEndDate = endDate.split('T')[0];\n  } else {\n    //버튼\n    var buttonDate = new Date();\n    var year = buttonDate.getFullYear();\n    var month = buttonDate.getMonth() + 1; // ????\n\n    var today = buttonDate.getDate();\n    var koreaDate = new Date(Date.UTC(year, month, today));\n    var koreaEndDate = new Date(Date.UTC(year, month, today));\n\n    switch (intResult) {\n      case 3:\n        koreaDate.setDate(koreaDate.getDate() - 2);\n        break;\n\n      case 7:\n        koreaDate.setDate(koreaDate.getDate() - 6);\n        break;\n\n      case 30:\n        koreaDate.setMonth(koreaDate.getMonth() - 1);\n        break;\n\n      case 100:\n        koreaDate.setFullYear(koreaDate.getFullYear() - 1);\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n    var convertYear = koreaDate.getFullYear();\n    var convertMonth = koreaDate.getMonth();\n    var convertDay = koreaDate.getDate();\n    var convertEndYear = koreaEndDate.getFullYear();\n    var convertEndMonth = koreaEndDate.getMonth();\n    var convertEndDay = koreaEndDate.getDate();\n    convertDate = \"\".concat(convertYear, \"-\").concat(convertMonth < 10 ? \"0\".concat(convertMonth) : \"\".concat(convertMonth), \"-\").concat(convertDay < 10 ? \"0\".concat(convertDay) : \"\".concat(convertDay));\n    convertEndDate = \"\".concat(convertEndYear, \"-\").concat(convertEndMonth < 10 ? \"0\".concat(convertEndMonth) : \"\".concat(convertEndMonth), \"-\").concat(convertEndDay < 10 ? \"0\".concat(convertEndDay) : \"\".concat(convertEndDay));\n  }\n\n  console.log(convertDate, convertEndDate);\n\n  _pythonShell.PythonShell.run('ProductInputPage.py', {\n    mode: 'json',\n    pythonOptions: ['-u'],\n    scriptPath: scriptPath,\n    args: [id, convertDate, convertEndDate, avgCheck, minCheck, maxCheck, intResult]\n  }, function (err, data) {\n    if (err) {\n      console.log(err); // return res.json({ \n      //     success: false,\n      //     error: err\n      // })\n    }\n\n    var dateBox = data.length !== 0 ? data[0] : [];\n    var dataDate = data.length !== 0 ? data[1] : {};\n    var dataList = data.length !== 0 ? data[2] : [];\n\n    if (dataList !== [] && dataDate !== {} && dateBox !== []) {\n      var _iterator5 = _createForOfIteratorHelper(dataList),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _data = _step5.value;\n          _data.measuredAt = new Date(_data.measuredAt['$date']);\n          _data._id = _data._id['$oid'];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return res.json({\n        success: true,\n        dataList: dataList,\n        dataDate: dataDate,\n        dateBox: dateBox\n      });\n    } else {\n      return res.json({\n        success: false\n      });\n    }\n  });\n};\n\nexports.postDateData = postDateData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "dataController.js"
      ],
      "names": [
        "scriptPath",
        "ObjectId",
        "Mongoose",
        "Types",
        "dataUser",
        "req",
        "res",
        "id",
        "params",
        "PythonShell",
        "run",
        "mode",
        "pythonOptions",
        "args",
        "err",
        "data",
        "console",
        "log",
        "json",
        "success",
        "error",
        "deviceDetail",
        "avgTmpForm",
        "avgHumForm",
        "avgDustForm",
        "korea",
        "Date",
        "year",
        "getFullYear",
        "month",
        "getMonth",
        "date",
        "getDate",
        "endDate",
        "today",
        "UTC",
        "tomorrow",
        "Dht",
        "aggregate",
        "$match",
        "product",
        "$group",
        "AverageTmpValue",
        "$avg",
        "AverageHumValue",
        "dhtCalculator",
        "Pms",
        "AverageDustValue",
        "pmsCalculator",
        "find",
        "measuredAt",
        "$gte",
        "$lt",
        "dhtToday",
        "pmsToday",
        "$and",
        "MaxTmpValue",
        "$max",
        "MaxHumValue",
        "MinTmpValue",
        "$min",
        "MinHumValue",
        "$sort",
        "_id",
        "dhtHourCalculator",
        "MaxDustValue",
        "MinDustValue",
        "pmsHourCalculator",
        "length",
        "i",
        "todayContainer",
        "dht",
        "pms",
        "tmp",
        "hum",
        "dust",
        "String",
        "push",
        "splice",
        "status",
        "reverse",
        "postDateData",
        "body",
        "btnResult",
        "avgCheck",
        "minCheck",
        "maxCheck",
        "convertDate",
        "convertEndDate",
        "intResult",
        "parseInt",
        "split",
        "buttonDate",
        "koreaDate",
        "koreaEndDate",
        "setDate",
        "setMonth",
        "setFullYear",
        "convertYear",
        "convertMonth",
        "convertDay",
        "convertEndYear",
        "convertEndMonth",
        "convertEndDay",
        "dateBox",
        "dataDate",
        "dataList"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "sourcesContent": [
        "import Dht from \"../models/Dht\";\nimport Pms from \"../models/Pms\";\nimport User from \"../models/User\"\nimport Mongoose from \"mongoose\";\nimport { PythonShell } from \"python-shell\";\n\nconst scriptPath = '/Users/gim-ingug/Documents/iotserver/pythonCgi'\nconst ObjectId = Mongoose.Types.ObjectId;\n\n\nexport const dataUser = (req, res) => {\n    const {\n        params: { id }\n    } = req;\n    PythonShell.run('DevicePage.py', { // 파이썬 파일에게 매개변수 전달\n        mode: 'json',\n        pythonOptions: ['-u'],\n        scriptPath,\n        args: id\n    }, (err, data) => {\n        if(err) {\n            console.log(err)\n            return res.json({ \n                success: false,\n                error: err\n            })\n        }\n        console.log(data);\n        return res.json({ // 파이썬 파일로부터 처리된 데이터를 클라이언트로 전송\n            success: true,\n            data\n        })\n    })\n};\n\nexport const deviceDetail = async (req, res) => {\n    const {\n        params: { id }\n    } = req;\n    let avgTmpForm = [0,0,0,0,0,0,0,0,0,0,0,0];\n    let avgHumForm = [0,0,0,0,0,0,0,0,0,0,0,0];\n    let avgDustForm = [0,0,0,0,0,0,0,0,0,0,0,0];\n    const korea = new Date(); \n    const year = korea.getFullYear();\n    const month = korea.getMonth();\n    const date = korea.getDate();\n    const endDate = korea.getDate() + 1;\n    const today = new Date(Date.UTC(year, month, date));\n    const tomorrow = new Date(Date.UTC(year, month, endDate));\n    try {\n        const dhtCalculator = await Dht.aggregate([\n            { $match: { product: new ObjectId(id) }},\n            {\n                $group: {\n                    \"_id\": {\"$month\": {\"$toDate\":\"$measuredAt\"}},\n                    AverageTmpValue: { $avg: \"$tmp\" },\n                    AverageHumValue: { $avg: \"$hum\" },\n                }\n            }\n        ])\n        const pmsCalculator = await Pms.aggregate([\n            { $match: { product: new ObjectId(id) }},\n            {\n                $group: {\n                    \"_id\": {\"$month\": {\"$toDate\":\"$measuredAt\"}},\n                    AverageDustValue: { $avg: \"$dust\" }\n                }\n            }\n        ])\n        const dhtToday = await Dht.find({ product: id, measuredAt: { $gte: today, $lt: tomorrow }});\n        const pmsToday = await Pms.find({ product: id, measuredAt: { $gte: today, $lt: tomorrow }});\n        const dhtHourCalculator = await Dht.aggregate([\n            { $match: { $and: [{ product: new ObjectId(id) }, { measuredAt: { $gte: today, $lt: tomorrow }}] }},\n            {\n                $group: {\n                    \"_id\": {\"$hour\": {\"$toDate\":\"$measuredAt\"}},\n                    AverageTmpValue: { $avg: \"$tmp\" },\n                    AverageHumValue: { $avg: \"$hum\" },\n                    MaxTmpValue: { $max: \"$tmp\"},\n                    MaxHumValue: { $max: \"$hum\"},\n                    MinTmpValue: { $min: \"$tmp\"},\n                    MinHumValue: { $min: \"$hum\"},\n                }\n            },\n            { $sort: { _id: 1 }}\n        ])    \n        const pmsHourCalculator = await Pms.aggregate([\n            { $match: { $and: [{ product: new ObjectId(id) }, { measuredAt: { $gte: today, $lt: tomorrow }}] }},\n            {\n                $group: {\n                    \"_id\": {\"$hour\": {\"$toDate\":\"$measuredAt\"}},\n                    AverageDustValue: { $avg: \"$dust\" },\n                    MaxDustValue: { $max: \"$dust\"},\n                    MinDustValue: { $min: \"$dust\"},\n                }\n            },\n            { $sort: { _id: 1 }}\n        ])\n        if(dhtHourCalculator.length === pmsHourCalculator.length) {\n            for(let i = 0; i < dhtHourCalculator.length; i++) {\n                dhtHourCalculator[i] = {...dhtHourCalculator[i], ...pmsHourCalculator[i]}\n            }\n        }\n        let todayContainer = [];\n        if(dhtToday && pmsToday) {\n            for (const dht of dhtToday) {\n                for(const pms of pmsToday) {\n                    const { _id, tmp, hum, measuredAt } = dht;\n                    const { dust } = pms;\n                    if(String(measuredAt) === String(pms.measuredAt)) {\n                        const data = {\n                            _id,\n                            tmp,\n                            hum,\n                            dust,\n                            measuredAt\n                        }\n                            todayContainer.push(data);\n                    }\n                }\n            }\n        }\n\n        for (const dht of dhtCalculator) {\n            avgTmpForm.splice((dht._id - 1), 1, dht.AverageTmpValue);\n            avgHumForm.splice((dht._id - 1), 1, dht.AverageHumValue);\n        }\n        for (const pms of pmsCalculator) {\n            avgDustForm.splice((pms._id - 1), 1, pms.AverageDustValue);\n        }\n        // for (const dht of dhtArray) {\n        //     // const pms = await Pms.findOne({ product: id, measuredAt: dht.measuredAt }).select('-_id dust') // 실재\n        //     const pms = await Pms.findOne({ product: id }).select('-_id dust')\n        //     if(pms){\n        //         const data = {\n        //             _id: dht._id,\n        //             tmp: dht.tmp,\n        //             hum: dht.hum,\n        //             dust: pms.dust,\n        //             measuredAt: dht.measuredAt\n        //         }\n        //         dataArray.push(data)\n        //     }\n        // }\n        return res.status(200).\n            json({\n                success: true,\n                avgTmpForm,\n                avgHumForm,\n                avgDustForm,\n                todayContainer: todayContainer.reverse(),\n                dhtHourCalculator\n            })\n    } catch(err) {\n        console.log(err)\n        return res.status(204)\n            .json({\n                success: false,\n                data: []\n            })\n    }\n};\n\nexport const postDateData = (req, res) => {\n    const { \n        body: { date, endDate, btnResult, avgCheck, minCheck, maxCheck },\n        params: { id }\n    } = req;\n    let convertDate = new Date();\n    let convertEndDate = new Date();\n    const intResult = parseInt(btnResult)\n    if( btnResult === 0 && (endDate && date) !== null ) {\n        // 기간선택\n        convertDate = date.split('T')[0];\n        convertEndDate = endDate.split('T')[0];\n    } else {\n        //버튼\n        const buttonDate = new Date()\n        const year = buttonDate.getFullYear();\n        const month = buttonDate.getMonth() + 1;  // ????\n        const today = buttonDate.getDate();\n        const koreaDate = new Date(Date.UTC(year, month, today));\n        const koreaEndDate = new Date(Date.UTC(year, month, today));\n        switch (intResult) {\n            case 3:\n                koreaDate.setDate(koreaDate.getDate() - 2)\n                break;\n            case 7:\n                koreaDate.setDate(koreaDate.getDate() - 6)\n                break;\n            case 30:\n                koreaDate.setMonth(koreaDate.getMonth() - 1)\n                break;\n            case 100:\n                koreaDate.setFullYear(koreaDate.getFullYear() - 1)\n                break;\n            default:\n                break;\n        };\n        const convertYear = koreaDate.getFullYear()\n        const convertMonth = koreaDate.getMonth()\n        const convertDay = koreaDate.getDate()\n        const convertEndYear = koreaEndDate.getFullYear()\n        const convertEndMonth = koreaEndDate.getMonth()\n        const convertEndDay = koreaEndDate.getDate()\n        convertDate = `${convertYear}-${convertMonth < 10 ? `0${convertMonth}` : `${convertMonth}`}-${convertDay < 10 ? `0${convertDay}` : `${convertDay}`}`\n        convertEndDate = `${convertEndYear}-${convertEndMonth < 10 ? `0${convertEndMonth}` : `${convertEndMonth}`}-${convertEndDay < 10 ? `0${convertEndDay}` : `${convertEndDay}`}`\n    }\n    console.log(convertDate, convertEndDate)\n    PythonShell.run('ProductInputPage.py', {\n    mode: 'json',\n    pythonOptions: ['-u'],\n        scriptPath,\n        args: [id, convertDate, convertEndDate, avgCheck, minCheck, maxCheck, intResult]\n    }, (err, data) => {\n        if(err) {\n            console.log(err)\n            // return res.json({ \n            //     success: false,\n            //     error: err\n            // })\n        }\n        const dateBox = data.length !== 0 ? data[0] : [];\n        const dataDate = data.length !== 0 ? data[1] : {};\n        const dataList = data.length !== 0 ? data[2] : []; \n        if(dataList !== [] && dataDate !== {} && dateBox !== []) {\n            for(const data of dataList) {\n                data.measuredAt = new Date(data.measuredAt['$date']);\n                data._id = data._id['$oid'];\n            }\n            return res.json({\n                success: true,\n                dataList,\n                dataDate,\n                dateBox\n            })\n        } else {\n            return res.json({\n                success: false\n            })\n        }\n    })\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1623567676503
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/routes.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/routes.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/routes.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "routes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// Global\nvar HOME = \"/\";\nvar JOIN = \"/join\";\nvar LOGIN = \"/login\";\nvar AUTH = \"/authuser\";\nvar LOGOUT = \"/logout\";\nvar SEARCH = \"/search\";\nvar PYTHON = \"/python\"; // Users\n\nvar USERS = \"/users\";\nvar CHANGE_PASSWORD = \"/change-password/:id\";\nvar ME = \"/me\";\nvar ADD_KEY = \"/addKey\";\nvar DELETE_KEY = \"/deleteKey\"; // data\n\nvar DATAS = \"/data\";\nvar DATA_USER = \"/:id\";\nvar DETAIL_DATA = \"/product/:id\"; // API\n\nvar API = \"/api\";\nvar WEATHER = \"/weather\";\nvar routes = {\n  //Global\n  home: HOME,\n  join: JOIN,\n  login: LOGIN,\n  auth: AUTH,\n  logout: LOGOUT,\n  search: SEARCH,\n  python: PYTHON,\n  //Users\n  users: USERS,\n  changePassword: function changePassword(id) {\n    if (id) {\n      return \"/users/change-password/\".concat(id);\n    } else {\n      return CHANGE_PASSWORD;\n    }\n  },\n  me: ME,\n  addKey: ADD_KEY,\n  deleteKey: DELETE_KEY,\n  //Datas\n  data: DATAS,\n  dataUser: function dataUser(id) {\n    if (id) {\n      return \"/data/\".concat(id);\n    } else {\n      return DATA_USER;\n    }\n  },\n  detailData: function detailData(id) {\n    if (id) {\n      return \"/data/product/\".concat(id);\n    } else {\n      return DETAIL_DATA;\n    }\n  },\n  // API\n  api: API,\n  weather: WEATHER\n};\nvar _default = routes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJIT01FIiwiSk9JTiIsIkxPR0lOIiwiQVVUSCIsIkxPR09VVCIsIlNFQVJDSCIsIlBZVEhPTiIsIlVTRVJTIiwiQ0hBTkdFX1BBU1NXT1JEIiwiTUUiLCJBRERfS0VZIiwiREVMRVRFX0tFWSIsIkRBVEFTIiwiREFUQV9VU0VSIiwiREVUQUlMX0RBVEEiLCJBUEkiLCJXRUFUSEVSIiwicm91dGVzIiwiaG9tZSIsImpvaW4iLCJsb2dpbiIsImF1dGgiLCJsb2dvdXQiLCJzZWFyY2giLCJweXRob24iLCJ1c2VycyIsImNoYW5nZVBhc3N3b3JkIiwiaWQiLCJtZSIsImFkZEtleSIsImRlbGV0ZUtleSIsImRhdGEiLCJkYXRhVXNlciIsImRldGFpbERhdGEiLCJhcGkiLCJ3ZWF0aGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLElBQU1BLElBQUksR0FBRyxHQUFiO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLE9BQWI7QUFDQSxJQUFNQyxLQUFLLEdBQUcsUUFBZDtBQUNBLElBQU1DLElBQUksR0FBRyxXQUFiO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQWY7QUFDQSxJQUFNQyxNQUFNLEdBQUcsU0FBZjtBQUNBLElBQU1DLE1BQU0sR0FBRyxTQUFmLEMsQ0FFQTs7QUFDQSxJQUFNQyxLQUFLLEdBQUcsUUFBZDtBQUNBLElBQU1DLGVBQWUsR0FBRyxzQkFBeEI7QUFDQSxJQUFNQyxFQUFFLEdBQUcsS0FBWDtBQUNBLElBQU1DLE9BQU8sR0FBRyxTQUFoQjtBQUNBLElBQU1DLFVBQVUsR0FBRyxZQUFuQixDLENBRUE7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLE9BQWQ7QUFDQSxJQUFNQyxTQUFTLEdBQUcsTUFBbEI7QUFDQSxJQUFNQyxXQUFXLEdBQUcsY0FBcEIsQyxDQUVBOztBQUNBLElBQU1DLEdBQUcsR0FBRyxNQUFaO0FBQ0EsSUFBTUMsT0FBTyxHQUFHLFVBQWhCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ1g7QUFDQUMsRUFBQUEsSUFBSSxFQUFFbEIsSUFGSztBQUdYbUIsRUFBQUEsSUFBSSxFQUFFbEIsSUFISztBQUlYbUIsRUFBQUEsS0FBSyxFQUFFbEIsS0FKSTtBQUtYbUIsRUFBQUEsSUFBSSxFQUFFbEIsSUFMSztBQU1YbUIsRUFBQUEsTUFBTSxFQUFFbEIsTUFORztBQU9YbUIsRUFBQUEsTUFBTSxFQUFFbEIsTUFQRztBQVFYbUIsRUFBQUEsTUFBTSxFQUFFbEIsTUFSRztBQVVYO0FBQ0FtQixFQUFBQSxLQUFLLEVBQUVsQixLQVhJO0FBWVhtQixFQUFBQSxjQUFjLEVBQUUsd0JBQUFDLEVBQUUsRUFBSTtBQUNwQixRQUFHQSxFQUFILEVBQU87QUFDTCw4Q0FBaUNBLEVBQWpDO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsYUFBT25CLGVBQVA7QUFDRDtBQUNGLEdBbEJVO0FBbUJYb0IsRUFBQUEsRUFBRSxFQUFFbkIsRUFuQk87QUFvQlhvQixFQUFBQSxNQUFNLEVBQUVuQixPQXBCRztBQXFCWG9CLEVBQUFBLFNBQVMsRUFBRW5CLFVBckJBO0FBdUJYO0FBQ0FvQixFQUFBQSxJQUFJLEVBQUVuQixLQXhCSztBQXlCWG9CLEVBQUFBLFFBQVEsRUFBRSxrQkFBQUwsRUFBRSxFQUFJO0FBQ1osUUFBSUEsRUFBSixFQUFRO0FBQ04sNkJBQWdCQSxFQUFoQjtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU9kLFNBQVA7QUFDRDtBQUNKLEdBL0JVO0FBZ0NYb0IsRUFBQUEsVUFBVSxFQUFFLG9CQUFBTixFQUFFLEVBQUk7QUFDaEIsUUFBSUEsRUFBSixFQUFRO0FBQ04scUNBQXdCQSxFQUF4QjtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU9iLFdBQVA7QUFDRDtBQUNGLEdBdENVO0FBdUNYO0FBQ0FvQixFQUFBQSxHQUFHLEVBQUVuQixHQXhDTTtBQXlDWG9CLEVBQUFBLE9BQU8sRUFBRW5CO0FBekNFLENBQWY7ZUE0Q2VDLE0iLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHbG9iYWxcbmNvbnN0IEhPTUUgPSBcIi9cIjtcbmNvbnN0IEpPSU4gPSBcIi9qb2luXCI7XG5jb25zdCBMT0dJTiA9IFwiL2xvZ2luXCI7XG5jb25zdCBBVVRIID0gXCIvYXV0aHVzZXJcIjtcbmNvbnN0IExPR09VVCA9IFwiL2xvZ291dFwiO1xuY29uc3QgU0VBUkNIID0gXCIvc2VhcmNoXCI7XG5jb25zdCBQWVRIT04gPSBcIi9weXRob25cIjtcblxuLy8gVXNlcnNcbmNvbnN0IFVTRVJTID0gXCIvdXNlcnNcIjtcbmNvbnN0IENIQU5HRV9QQVNTV09SRCA9IFwiL2NoYW5nZS1wYXNzd29yZC86aWRcIjtcbmNvbnN0IE1FID0gXCIvbWVcIjtcbmNvbnN0IEFERF9LRVkgPSBcIi9hZGRLZXlcIjtcbmNvbnN0IERFTEVURV9LRVkgPSBcIi9kZWxldGVLZXlcIjtcblxuLy8gZGF0YVxuY29uc3QgREFUQVMgPSBcIi9kYXRhXCI7XG5jb25zdCBEQVRBX1VTRVIgPSBcIi86aWRcIjtcbmNvbnN0IERFVEFJTF9EQVRBID0gXCIvcHJvZHVjdC86aWRcIlxuXG4vLyBBUElcbmNvbnN0IEFQSSA9IFwiL2FwaVwiO1xuY29uc3QgV0VBVEhFUiA9IFwiL3dlYXRoZXJcIjtcblxuY29uc3Qgcm91dGVzID0ge1xuICAgIC8vR2xvYmFsXG4gICAgaG9tZTogSE9NRSxcbiAgICBqb2luOiBKT0lOLFxuICAgIGxvZ2luOiBMT0dJTixcbiAgICBhdXRoOiBBVVRILFxuICAgIGxvZ291dDogTE9HT1VULFxuICAgIHNlYXJjaDogU0VBUkNILFxuICAgIHB5dGhvbjogUFlUSE9OLFxuXG4gICAgLy9Vc2Vyc1xuICAgIHVzZXJzOiBVU0VSUyxcbiAgICBjaGFuZ2VQYXNzd29yZDogaWQgPT4ge1xuICAgICAgaWYoaWQpIHtcbiAgICAgICAgcmV0dXJuIGAvdXNlcnMvY2hhbmdlLXBhc3N3b3JkLyR7aWR9YDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBDSEFOR0VfUEFTU1dPUkQ7XG4gICAgICB9XG4gICAgfSxcbiAgICBtZTogTUUsXG4gICAgYWRkS2V5OiBBRERfS0VZLFxuICAgIGRlbGV0ZUtleTogREVMRVRFX0tFWSxcbiAgICBcbiAgICAvL0RhdGFzXG4gICAgZGF0YTogREFUQVMsXG4gICAgZGF0YVVzZXI6IGlkID0+IHtcbiAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgcmV0dXJuIGAvZGF0YS8ke2lkfWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIERBVEFfVVNFUjtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZGV0YWlsRGF0YTogaWQgPT4ge1xuICAgICAgaWYgKGlkKSB7XG4gICAgICAgIHJldHVybiBgL2RhdGEvcHJvZHVjdC8ke2lkfWA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gREVUQUlMX0RBVEE7XG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBBUElcbiAgICBhcGk6IEFQSSxcbiAgICB3ZWF0aGVyOiBXRUFUSEVSXG59O1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXM7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "HOME",
        "JOIN",
        "LOGIN",
        "AUTH",
        "LOGOUT",
        "SEARCH",
        "PYTHON",
        "USERS",
        "CHANGE_PASSWORD",
        "ME",
        "ADD_KEY",
        "DELETE_KEY",
        "DATAS",
        "DATA_USER",
        "DETAIL_DATA",
        "API",
        "WEATHER",
        "routes",
        "home",
        "join",
        "login",
        "auth",
        "logout",
        "search",
        "python",
        "users",
        "changePassword",
        "id",
        "me",
        "addKey",
        "deleteKey",
        "data",
        "dataUser",
        "detailData",
        "api",
        "weather"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,IAAI,GAAG,GAAb;AACA,IAAMC,IAAI,GAAG,OAAb;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,IAAI,GAAG,WAAb;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,MAAM,GAAG,SAAf,C,CAEA;;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,eAAe,GAAG,sBAAxB;AACA,IAAMC,EAAE,GAAG,KAAX;AACA,IAAMC,OAAO,GAAG,SAAhB;AACA,IAAMC,UAAU,GAAG,YAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,SAAS,GAAG,MAAlB;AACA,IAAMC,WAAW,GAAG,cAApB,C,CAEA;;AACA,IAAMC,GAAG,GAAG,MAAZ;AACA,IAAMC,OAAO,GAAG,UAAhB;AAEA,IAAMC,MAAM,GAAG;AACX;AACAC,EAAAA,IAAI,EAAElB,IAFK;AAGXmB,EAAAA,IAAI,EAAElB,IAHK;AAIXmB,EAAAA,KAAK,EAAElB,KAJI;AAKXmB,EAAAA,IAAI,EAAElB,IALK;AAMXmB,EAAAA,MAAM,EAAElB,MANG;AAOXmB,EAAAA,MAAM,EAAElB,MAPG;AAQXmB,EAAAA,MAAM,EAAElB,MARG;AAUX;AACAmB,EAAAA,KAAK,EAAElB,KAXI;AAYXmB,EAAAA,cAAc,EAAE,wBAAAC,EAAE,EAAI;AACpB,QAAGA,EAAH,EAAO;AACL,8CAAiCA,EAAjC;AACD,KAFD,MAEO;AACL,aAAOnB,eAAP;AACD;AACF,GAlBU;AAmBXoB,EAAAA,EAAE,EAAEnB,EAnBO;AAoBXoB,EAAAA,MAAM,EAAEnB,OApBG;AAqBXoB,EAAAA,SAAS,EAAEnB,UArBA;AAuBX;AACAoB,EAAAA,IAAI,EAAEnB,KAxBK;AAyBXoB,EAAAA,QAAQ,EAAE,kBAAAL,EAAE,EAAI;AACZ,QAAIA,EAAJ,EAAQ;AACN,6BAAgBA,EAAhB;AACD,KAFD,MAEO;AACL,aAAOd,SAAP;AACD;AACJ,GA/BU;AAgCXoB,EAAAA,UAAU,EAAE,oBAAAN,EAAE,EAAI;AAChB,QAAIA,EAAJ,EAAQ;AACN,qCAAwBA,EAAxB;AACD,KAFD,MAEO;AACL,aAAOb,WAAP;AACD;AACF,GAtCU;AAuCX;AACAoB,EAAAA,GAAG,EAAEnB,GAxCM;AAyCXoB,EAAAA,OAAO,EAAEnB;AAzCE,CAAf;eA4CeC,M",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "// Global\nconst HOME = \"/\";\nconst JOIN = \"/join\";\nconst LOGIN = \"/login\";\nconst AUTH = \"/authuser\";\nconst LOGOUT = \"/logout\";\nconst SEARCH = \"/search\";\nconst PYTHON = \"/python\";\n\n// Users\nconst USERS = \"/users\";\nconst CHANGE_PASSWORD = \"/change-password/:id\";\nconst ME = \"/me\";\nconst ADD_KEY = \"/addKey\";\nconst DELETE_KEY = \"/deleteKey\";\n\n// data\nconst DATAS = \"/data\";\nconst DATA_USER = \"/:id\";\nconst DETAIL_DATA = \"/product/:id\"\n\n// API\nconst API = \"/api\";\nconst WEATHER = \"/weather\";\n\nconst routes = {\n    //Global\n    home: HOME,\n    join: JOIN,\n    login: LOGIN,\n    auth: AUTH,\n    logout: LOGOUT,\n    search: SEARCH,\n    python: PYTHON,\n\n    //Users\n    users: USERS,\n    changePassword: id => {\n      if(id) {\n        return `/users/change-password/${id}`;\n      } else {\n        return CHANGE_PASSWORD;\n      }\n    },\n    me: ME,\n    addKey: ADD_KEY,\n    deleteKey: DELETE_KEY,\n    \n    //Datas\n    data: DATAS,\n    dataUser: id => {\n        if (id) {\n          return `/data/${id}`;\n        } else {\n          return DATA_USER;\n        }\n    },\n    detailData: id => {\n      if (id) {\n        return `/data/product/${id}`;\n      } else {\n        return DETAIL_DATA;\n      }\n    },\n    // API\n    api: API,\n    weather: WEATHER\n};\n\nexport default routes;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623269007284
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/data.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/data.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/data.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "data.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DataSchema = new _mongoose[\"default\"].Schema({\n  humidity: Number,\n  degree: Number,\n  measuredAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  provided: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  }\n});\n\nvar model = _mongoose[\"default\"].model('Data', DataSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEuanMiXSwibmFtZXMiOlsiRGF0YVNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiaHVtaWRpdHkiLCJOdW1iZXIiLCJkZWdyZWUiLCJtZWFzdXJlZEF0IiwidHlwZSIsIkRhdGUiLCJub3ciLCJwcm92aWRlZCIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ25DQyxFQUFBQSxRQUFRLEVBQUVDLE1BRHlCO0FBRW5DQyxFQUFBQSxNQUFNLEVBQUVELE1BRjJCO0FBR25DRSxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxJQURFO0FBRVIsZUFBU0EsSUFBSSxDQUFDQztBQUZOLEdBSHVCO0FBT25DQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkgsSUFBQUEsSUFBSSxFQUFFTixxQkFBU0MsTUFBVCxDQUFnQlMsS0FBaEIsQ0FBc0JDLFFBRHRCO0FBRU5DLElBQUFBLEdBQUcsRUFBRTtBQUZDO0FBUHlCLENBQXBCLENBQW5COztBQWFBLElBQU1DLEtBQUssR0FBR2IscUJBQVNhLEtBQVQsQ0FBZSxNQUFmLEVBQXVCZCxVQUF2QixDQUFkOztlQUVlYyxLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IERhdGFTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBodW1pZGl0eTogTnVtYmVyLFxuICAgIGRlZ3JlZTogTnVtYmVyLFxuICAgIG1lYXN1cmVkQXQ6IHtcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICB9LFxuICAgIHByb3ZpZGVkOiB7XG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiBcIlVzZXJcIlxuICAgIH1cbn0pO1xuXG5jb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdEYXRhJywgRGF0YVNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "data.js"
      ],
      "names": [
        "DataSchema",
        "mongoose",
        "Schema",
        "humidity",
        "Number",
        "degree",
        "measuredAt",
        "type",
        "Date",
        "now",
        "provided",
        "Types",
        "ObjectId",
        "ref",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,QAAQ,EAAEC,MADyB;AAEnCC,EAAAA,MAAM,EAAED,MAF2B;AAGnCE,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAHuB;AAOnCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEN,qBAASC,MAAT,CAAgBS,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,GAAG,EAAE;AAFC;AAPyB,CAApB,CAAnB;;AAaA,IAAMC,KAAK,GAAGb,qBAASa,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAd;;eAEec,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst DataSchema = new mongoose.Schema({\n    humidity: Number,\n    degree: Number,\n    measuredAt: {\n        type: Date,\n        default: Date.now\n    },\n    provided: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n    }\n});\n\nconst model = mongoose.model('Data', DataSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1619972429329
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/User.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/User.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/User.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "User.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar UserSchema = new _mongoose[\"default\"].Schema({\n  name: {\n    required: true,\n    type: String\n  },\n  // 이름\n  email: {\n    required: true,\n    type: String\n  },\n  // 이메일\n  hashedPassword: {\n    required: true,\n    type: String\n  },\n  // 암호화된 패스워드\n  token: {\n    // 유저 토큰\n    type: String,\n    \"default\": \"\"\n  },\n  keyList: [// 유저 제품 리스트\n  {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Product'\n  }],\n  datas: [// 유저 제품 데이터\n  {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: 'Data'\n  }]\n}, {\n  versionKey: false\n});\n\nUserSchema.methods.setPassword = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(password) {\n    var hash;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _bcrypt[\"default\"].hash(password, 10);\n\n          case 2:\n            hash = _context.sent;\n            this.hashedPassword = hash;\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nUserSchema.methods.checkPassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(password) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _bcrypt[\"default\"].compare(password, this.hashedPassword);\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nUserSchema.methods.serialize = function () {\n  var data = this.toJSON();\n  delete data.hashedPassword;\n  return data;\n};\n\nUserSchema.methods.generateToken = function (user) {\n  var token = _jsonwebtoken[\"default\"].sign({\n    _id: this.id\n  }, process.env.JWT_SECRET, {\n    expiresIn: '7d'\n  });\n\n  user.token = token;\n  return token;\n}; // 유저저장\n\n\nUserSchema.statics.findByToken = function (token) {\n  if (token) {\n    var decoded = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n\n    return decoded;\n  }\n};\n\nUserSchema.statics.findByEmail = function (email) {\n  return this.findOne({\n    email: email\n  });\n};\n\nvar model = _mongoose[\"default\"].model(\"User\", UserSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwibmFtZSIsInJlcXVpcmVkIiwidHlwZSIsIlN0cmluZyIsImVtYWlsIiwiaGFzaGVkUGFzc3dvcmQiLCJ0b2tlbiIsImtleUxpc3QiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwiZGF0YXMiLCJ2ZXJzaW9uS2V5IiwibWV0aG9kcyIsInNldFBhc3N3b3JkIiwicGFzc3dvcmQiLCJiY3J5cHQiLCJoYXNoIiwiY2hlY2tQYXNzd29yZCIsImNvbXBhcmUiLCJyZXN1bHQiLCJzZXJpYWxpemUiLCJkYXRhIiwidG9KU09OIiwiZ2VuZXJhdGVUb2tlbiIsInVzZXIiLCJqd3QiLCJzaWduIiwiX2lkIiwiaWQiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsInN0YXRpY3MiLCJmaW5kQnlUb2tlbiIsImRlY29kZWQiLCJ2ZXJpZnkiLCJmaW5kQnlFbWFpbCIsImZpbmRPbmUiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLFVBQVUsR0FBRyxJQUFJQyxxQkFBU0MsTUFBYixDQUFvQjtBQUNuQ0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLElBQUFBLFFBQVEsRUFBRSxJQURSO0FBRUZDLElBQUFBLElBQUksRUFBRUM7QUFGSixHQUQ2QjtBQUloQztBQUNIQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEgsSUFBQUEsUUFBUSxFQUFFLElBRFA7QUFFSEMsSUFBQUEsSUFBSSxFQUFFQztBQUZILEdBTDRCO0FBUWhDO0FBQ0hFLEVBQUFBLGNBQWMsRUFBRTtBQUNaSixJQUFBQSxRQUFRLEVBQUUsSUFERTtBQUVaQyxJQUFBQSxJQUFJLEVBQUVDO0FBRk0sR0FUbUI7QUFZaEM7QUFDSEcsRUFBQUEsS0FBSyxFQUFFO0FBQUU7QUFDTEosSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUgsZUFBUztBQUZOLEdBYjRCO0FBaUJuQ0ksRUFBQUEsT0FBTyxFQUFFLENBQUU7QUFDUDtBQUNJTCxJQUFBQSxJQUFJLEVBQUVKLHFCQUFTQyxNQUFULENBQWdCUyxLQUFoQixDQUFzQkMsUUFEaEM7QUFFSUMsSUFBQUEsR0FBRyxFQUFFO0FBRlQsR0FESyxDQWpCMEI7QUF1Qm5DQyxFQUFBQSxLQUFLLEVBQUUsQ0FBRTtBQUNMO0FBQ0lULElBQUFBLElBQUksRUFBRUoscUJBQVNDLE1BQVQsQ0FBZ0JTLEtBQWhCLENBQXNCQyxRQURoQztBQUVJQyxJQUFBQSxHQUFHLEVBQUU7QUFGVCxHQURHO0FBdkI0QixDQUFwQixFQTZCaEI7QUFDQ0UsRUFBQUEsVUFBVSxFQUFFO0FBRGIsQ0E3QmdCLENBQW5COztBQWlDQWYsVUFBVSxDQUFDZ0IsT0FBWCxDQUFtQkMsV0FBbkI7QUFBQSxxRUFBaUMsaUJBQWVDLFFBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDVkMsbUJBQU9DLElBQVAsQ0FBWUYsUUFBWixFQUFzQixFQUF0QixDQURVOztBQUFBO0FBQ3ZCRSxZQUFBQSxJQUR1QjtBQUU3QixpQkFBS1osY0FBTCxHQUFzQlksSUFBdEI7O0FBRjZCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWpDOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUtBcEIsVUFBVSxDQUFDZ0IsT0FBWCxDQUFtQkssYUFBbkI7QUFBQSxzRUFBbUMsa0JBQWVILFFBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDVkMsbUJBQU9HLE9BQVAsQ0FBZUosUUFBZixFQUF5QixLQUFLVixjQUE5QixDQURVOztBQUFBO0FBQ3pCZSxZQUFBQSxNQUR5QjtBQUFBLDhDQUV4QkEsTUFGd0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBbkM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBS0F2QixVQUFVLENBQUNnQixPQUFYLENBQW1CUSxTQUFuQixHQUErQixZQUFXO0FBQ3RDLE1BQU1DLElBQUksR0FBRyxLQUFLQyxNQUFMLEVBQWI7QUFDQSxTQUFPRCxJQUFJLENBQUNqQixjQUFaO0FBQ0EsU0FBT2lCLElBQVA7QUFDSCxDQUpEOztBQU1BekIsVUFBVSxDQUFDZ0IsT0FBWCxDQUFtQlcsYUFBbkIsR0FBbUMsVUFBU0MsSUFBVCxFQUFlO0FBQzlDLE1BQU1uQixLQUFLLEdBQUdvQix5QkFBSUMsSUFBSixDQUNWO0FBQUVDLElBQUFBLEdBQUcsRUFBRSxLQUFLQztBQUFaLEdBRFUsRUFFVkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBRkYsRUFHVjtBQUFFQyxJQUFBQSxTQUFTLEVBQUU7QUFBYixHQUhVLENBQWQ7O0FBS0FSLEVBQUFBLElBQUksQ0FBQ25CLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQU9BLEtBQVA7QUFDSCxDQVJELEMsQ0FRRzs7O0FBRUhULFVBQVUsQ0FBQ3FDLE9BQVgsQ0FBbUJDLFdBQW5CLEdBQWlDLFVBQUM3QixLQUFELEVBQVc7QUFDeEMsTUFBR0EsS0FBSCxFQUFVO0FBQ04sUUFBTThCLE9BQU8sR0FBR1YseUJBQUlXLE1BQUosQ0FBVy9CLEtBQVgsRUFBa0J3QixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBOUIsQ0FBaEI7O0FBQ0EsV0FBT0ksT0FBUDtBQUNIO0FBQ0osQ0FMRDs7QUFPQXZDLFVBQVUsQ0FBQ3FDLE9BQVgsQ0FBbUJJLFdBQW5CLEdBQWlDLFVBQVNsQyxLQUFULEVBQWdCO0FBQzdDLFNBQU8sS0FBS21DLE9BQUwsQ0FBYTtBQUFFbkMsSUFBQUEsS0FBSyxFQUFMQTtBQUFGLEdBQWIsQ0FBUDtBQUNILENBRkQ7O0FBSUEsSUFBTW9DLEtBQUssR0FBRzFDLHFCQUFTMEMsS0FBVCxDQUFlLE1BQWYsRUFBdUIzQyxVQUF2QixDQUFkOztlQUVlMkMsSyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvc2VydmVyL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IGJjcnlwdCBmcm9tIFwiYmNyeXB0XCI7XG5pbXBvcnQgand0IGZyb20gXCJqc29ud2VidG9rZW5cIjtcblxuY29uc3QgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIG5hbWU6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0sIC8vIOydtOumhFxuICAgIGVtYWlsOiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LCAvLyDsnbTrqZTsnbxcbiAgICBoYXNoZWRQYXNzd29yZDoge1xuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSwgLy8g7JWU7Zi47ZmU65CcIO2MqOyKpOybjOuTnFxuICAgIHRva2VuOiB7IC8vIOycoOyggCDthqDtgbBcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICBkZWZhdWx0OiBcIlwiXG4gICAgfSwgXG4gICAga2V5TGlzdDogWyAvLyDsnKDsoIAg7KCc7ZKIIOumrOyKpO2KuFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdQcm9kdWN0J1xuICAgICAgICB9XG4gICAgXSxcbiAgICBkYXRhczogWyAvLyDsnKDsoIAg7KCc7ZKIIOuNsOydtO2EsFxuICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgICAgICByZWY6ICdEYXRhJ1xuICAgICAgICB9XG4gICAgXVxufSwgeyBcbiAgICB2ZXJzaW9uS2V5OiBmYWxzZVxufSk7XG5cblVzZXJTY2hlbWEubWV0aG9kcy5zZXRQYXNzd29yZCA9IGFzeW5jIGZ1bmN0aW9uKHBhc3N3b3JkKSB7XG4gICAgY29uc3QgaGFzaCA9IGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMCk7XG4gICAgdGhpcy5oYXNoZWRQYXNzd29yZCA9IGhhc2g7XG59O1xuXG5Vc2VyU2NoZW1hLm1ldGhvZHMuY2hlY2tQYXNzd29yZCA9IGFzeW5jIGZ1bmN0aW9uKHBhc3N3b3JkKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHRoaXMuaGFzaGVkUGFzc3dvcmQpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG5Vc2VyU2NoZW1hLm1ldGhvZHMuc2VyaWFsaXplID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMudG9KU09OKCk7XG4gICAgZGVsZXRlIGRhdGEuaGFzaGVkUGFzc3dvcmQ7XG4gICAgcmV0dXJuIGRhdGE7XG59O1xuXG5Vc2VyU2NoZW1hLm1ldGhvZHMuZ2VuZXJhdGVUb2tlbiA9IGZ1bmN0aW9uKHVzZXIpIHtcbiAgICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKFxuICAgICAgICB7IF9pZDogdGhpcy5pZCB9LFxuICAgICAgICBwcm9jZXNzLmVudi5KV1RfU0VDUkVULFxuICAgICAgICB7IGV4cGlyZXNJbjogJzdkJyB9XG4gICAgKTtcbiAgICB1c2VyLnRva2VuID0gdG9rZW47XG4gICAgcmV0dXJuIHRva2VuO1xufTsgLy8g7Jyg7KCA7KCA7J6lXG5cblVzZXJTY2hlbWEuc3RhdGljcy5maW5kQnlUb2tlbiA9ICh0b2tlbikgPT4ge1xuICAgIGlmKHRva2VuKSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcbiAgICAgICAgcmV0dXJuIGRlY29kZWQ7XG4gICAgfVxufTtcblxuVXNlclNjaGVtYS5zdGF0aWNzLmZpbmRCeUVtYWlsID0gZnVuY3Rpb24oZW1haWwpIHtcbiAgICByZXR1cm4gdGhpcy5maW5kT25lKHsgZW1haWwgfSlcbn07XG5cbmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoXCJVc2VyXCIsIFVzZXJTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBtb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "UserSchema",
        "mongoose",
        "Schema",
        "name",
        "required",
        "type",
        "String",
        "email",
        "hashedPassword",
        "token",
        "keyList",
        "Types",
        "ObjectId",
        "ref",
        "datas",
        "versionKey",
        "methods",
        "setPassword",
        "password",
        "bcrypt",
        "hash",
        "checkPassword",
        "compare",
        "result",
        "serialize",
        "data",
        "toJSON",
        "generateToken",
        "user",
        "jwt",
        "sign",
        "_id",
        "id",
        "process",
        "env",
        "JWT_SECRET",
        "expiresIn",
        "statics",
        "findByToken",
        "decoded",
        "verify",
        "findByEmail",
        "findOne",
        "model"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\n\nconst UserSchema = new mongoose.Schema({\n    name: {\n        required: true,\n        type: String\n    }, // 이름\n    email: {\n        required: true,\n        type: String\n    }, // 이메일\n    hashedPassword: {\n        required: true,\n        type: String\n    }, // 암호화된 패스워드\n    token: { // 유저 토큰\n        type: String,\n        default: \"\"\n    }, \n    keyList: [ // 유저 제품 리스트\n        {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'Product'\n        }\n    ],\n    datas: [ // 유저 제품 데이터\n        {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'Data'\n        }\n    ]\n}, { \n    versionKey: false\n});\n\nUserSchema.methods.setPassword = async function(password) {\n    const hash = await bcrypt.hash(password, 10);\n    this.hashedPassword = hash;\n};\n\nUserSchema.methods.checkPassword = async function(password) {\n    const result = await bcrypt.compare(password, this.hashedPassword);\n    return result;\n};\n\nUserSchema.methods.serialize = function() {\n    const data = this.toJSON();\n    delete data.hashedPassword;\n    return data;\n};\n\nUserSchema.methods.generateToken = function(user) {\n    const token = jwt.sign(\n        { _id: this.id },\n        process.env.JWT_SECRET,\n        { expiresIn: '7d' }\n    );\n    user.token = token;\n    return token;\n}; // 유저저장\n\nUserSchema.statics.findByToken = (token) => {\n    if(token) {\n        const decoded = jwt.verify(token, process.env.JWT_SECRET);\n        return decoded;\n    }\n};\n\nUserSchema.statics.findByEmail = function(email) {\n    return this.findOne({ email })\n};\n\nconst model = mongoose.model(\"User\", UserSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622506446678
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/userController.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/userController.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/controllers/userController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
        "sourceFileName": "userController.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postDeleteKey = exports.postAddKey = exports.postChangePassword = exports.getMe = void 0;\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _Product = _interopRequireDefault(require(\"../models/Product\"));\n\nvar _Dht = _interopRequireDefault(require(\"../models/Dht\"));\n\nvar _Pms = _interopRequireDefault(require(\"../models/Pms\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Users\nvar getMe = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = req.user.id;\n            _context.prev = 1;\n            _context.next = 4;\n            return _User[\"default\"].findById(id);\n\n          case 4:\n            user = _context.sent;\n            res.json({\n              user: user\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            res.json({\n              error: \"해당 페이지를 찾을 수 없습니다.\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function getMe(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getMe = getMe;\n\nvar postChangePassword = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, oldPassword, Password, Password2, userId, id, user, checkPassword, newPassword;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, oldPassword = _req$body.oldPassword, Password = _req$body.Password, Password2 = _req$body.Password2, userId = _req$body.userId, id = req.params.id; // 비밀번호 변경 관련 클라이언트 데이터\n\n            _context2.prev = 1;\n\n            if (!(!userId || !Password || !Password2 || !oldPassword)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              success: false,\n              message: \"모든 정보를 입력해주세요😅\"\n            }));\n\n          case 4:\n            if (!(Password !== Password2)) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              success: false,\n              message: \"비밀번호 확인이 일치하지 않습니다😅\"\n            }));\n\n          case 6:\n            _context2.next = 8;\n            return _User[\"default\"].findById(id);\n\n          case 8:\n            user = _context2.sent;\n            _context2.next = 11;\n            return user.checkPassword(oldPassword);\n\n          case 11:\n            checkPassword = _context2.sent;\n\n            if (checkPassword) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              success: false,\n              message: \"기존 비밀번호를 확인해주세요😅\"\n            }));\n\n          case 14:\n            _context2.next = 16;\n            return user.setPassword(Password);\n\n          case 16:\n            newPassword = _context2.sent;\n            _context2.next = 19;\n            return _User[\"default\"].findByIdAndUpdate(id, {\n              hashedPassword: newPassword\n            });\n\n          case 19:\n            user.save();\n            res.json({\n              success: true,\n              message: \"비밀번호 변경 성공\"\n            });\n            _context2.next = 26;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.json({\n              success: false,\n              error: '에러 발생😅'\n            });\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 23]]);\n  }));\n\n  return function postChangePassword(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.postChangePassword = postChangePassword;\n\nvar postAddKey = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, userId, newKey, user, existedKey, key;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, userId = _req$body2.userId, newKey = _req$body2.newKey;\n            _context3.prev = 1;\n\n            if (!(!userId || !newKey)) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.json({\n              success: false,\n              message: \"모든 정보를 입력해주세요😅\"\n            }));\n\n          case 4:\n            _context3.next = 6;\n            return _User[\"default\"].findById(userId);\n\n          case 6:\n            user = _context3.sent;\n            _context3.next = 9;\n            return _Product[\"default\"].findOne({\n              keyName: newKey\n            });\n\n          case 9:\n            existedKey = _context3.sent;\n\n            if (!existedKey) {\n              _context3.next = 12;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.json({\n              success: false,\n              message: \"이미 등록된 제품번호입니다😅\"\n            }));\n\n          case 12:\n            _context3.next = 14;\n            return _Product[\"default\"].create({\n              keyName: newKey,\n              user: userId\n            });\n\n          case 14:\n            key = _context3.sent;\n            _context3.next = 17;\n            return user.keyList.push(key.id);\n\n          case 17:\n            _context3.next = 19;\n            return user.save();\n\n          case 19:\n            // await User.findByIdAndUpdate(userId, {$addToSet: { keyList: key.id }});\n            res.json({\n              data: key,\n              success: true,\n              message: \"제품 등록 완료!\"\n            });\n            _context3.next = 25;\n            break;\n\n          case 22:\n            _context3.prev = 22;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.json({\n              success: false,\n              error: \"알수없는 오류가 발생했습니다😅\"\n            });\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 22]]);\n  }));\n\n  return function postAddKey(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.postAddKey = postAddKey;\n\nvar postDeleteKey = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var body, userId, id, product, dhts, pmss, _iterator, _step, dht, _iterator2, _step2, pms;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // 키삭제 콜백\n            body = req.body, userId = req.user._id;\n            id = Object.keys(body)[0]; // 클라이언트로부터 정보 받아오기\n\n            _context4.prev = 2;\n            _context4.next = 5;\n            return _Product[\"default\"].findById(id);\n\n          case 5:\n            product = _context4.sent;\n\n            if (!(String(product.user) === String(userId))) {\n              _context4.next = 54;\n              break;\n            }\n\n            _context4.next = 9;\n            return _Product[\"default\"].findByIdAndDelete(id);\n\n          case 9:\n            _context4.next = 11;\n            return _User[\"default\"].findByIdAndUpdate(userId, {\n              $pull: {\n                keyList: id\n              }\n            });\n\n          case 11:\n            _context4.next = 13;\n            return _Dht[\"default\"].find({\n              product: id\n            });\n\n          case 13:\n            dhts = _context4.sent;\n            _context4.next = 16;\n            return _Pms[\"default\"].find({\n              product: id\n            });\n\n          case 16:\n            pmss = _context4.sent;\n            _iterator = _createForOfIteratorHelper(dhts);\n            _context4.prev = 18;\n\n            _iterator.s();\n\n          case 20:\n            if ((_step = _iterator.n()).done) {\n              _context4.next = 26;\n              break;\n            }\n\n            dht = _step.value;\n            _context4.next = 24;\n            return _Dht[\"default\"].findByIdAndDelete(dht._id);\n\n          case 24:\n            _context4.next = 20;\n            break;\n\n          case 26:\n            _context4.next = 31;\n            break;\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](18);\n\n            _iterator.e(_context4.t0);\n\n          case 31:\n            _context4.prev = 31;\n\n            _iterator.f();\n\n            return _context4.finish(31);\n\n          case 34:\n            ;\n            _iterator2 = _createForOfIteratorHelper(pmss);\n            _context4.prev = 36;\n\n            _iterator2.s();\n\n          case 38:\n            if ((_step2 = _iterator2.n()).done) {\n              _context4.next = 44;\n              break;\n            }\n\n            pms = _step2.value;\n            _context4.next = 42;\n            return _Pms[\"default\"].findByIdAndDelete(pms._id);\n\n          case 42:\n            _context4.next = 38;\n            break;\n\n          case 44:\n            _context4.next = 49;\n            break;\n\n          case 46:\n            _context4.prev = 46;\n            _context4.t1 = _context4[\"catch\"](36);\n\n            _iterator2.e(_context4.t1);\n\n          case 49:\n            _context4.prev = 49;\n\n            _iterator2.f();\n\n            return _context4.finish(49);\n\n          case 52:\n            ;\n            res.json({\n              success: true,\n              message: \"삭제 성공\"\n            });\n\n          case 54:\n            _context4.next = 59;\n            break;\n\n          case 56:\n            _context4.prev = 56;\n            _context4.t2 = _context4[\"catch\"](2);\n            res.json({\n              success: false,\n              message: \"삭제 실패\"\n            });\n\n          case 59:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 56], [18, 28, 31, 34], [36, 46, 49, 52]]);\n  }));\n\n  return function postDeleteKey(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.postDeleteKey = postDeleteKey;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "getMe",
        "req",
        "res",
        "id",
        "user",
        "User",
        "findById",
        "json",
        "error",
        "postChangePassword",
        "body",
        "oldPassword",
        "Password",
        "Password2",
        "userId",
        "params",
        "success",
        "message",
        "checkPassword",
        "setPassword",
        "newPassword",
        "findByIdAndUpdate",
        "hashedPassword",
        "save",
        "postAddKey",
        "newKey",
        "Product",
        "findOne",
        "keyName",
        "existedKey",
        "create",
        "key",
        "keyList",
        "push",
        "data",
        "postDeleteKey",
        "_id",
        "Object",
        "keys",
        "product",
        "String",
        "findByIdAndDelete",
        "$pull",
        "Dht",
        "find",
        "dhts",
        "Pms",
        "pmss",
        "dht",
        "pms"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "sourcesContent": [
        "import User from \"../models/User\";\nimport Product from \"../models/Product\"\nimport Dht from '../models/Dht';\nimport Pms from \"../models/Pms\";\n\n// Users\nexport const getMe =  async (req, res) => {\n    const { \n        user: { id }\n    } = req;\n    try {\n        const user = await User.findById(id)\n        res.json({ user })\n    } catch(err) {\n        res.json({ error: \"해당 페이지를 찾을 수 없습니다.\"});\n    }\n};\n\nexport const postChangePassword =  async (req,res) => {\n    const { \n        body: {\n                oldPassword,\n                Password,\n                Password2,\n                userId\n        },\n        params: { id }\n    } = req; // 비밀번호 변경 관련 클라이언트 데이터\n    try {\n        if(!userId || !Password || !Password2 || !oldPassword) { // 인증 확인 알고리즘\n            return res.json({\n                success: false, \n                message: \"모든 정보를 입력해주세요😅\"\n            })\n        }\n        if(Password !== Password2) {\n            return res.json({\n                success: false, \n                message: \"비밀번호 확인이 일치하지 않습니다😅\"\n            })\n        }\n        const user = await User.findById(id); // 모든 정보가 입력됬다면 유저 조회\n        const checkPassword = await user.checkPassword(oldPassword); // 유저 기존 패스워드 조회\n        if(!checkPassword) {\n            return res.json({ \n                success: false,\n                message: \"기존 비밀번호를 확인해주세요😅\"\n            });\n        }\n        const newPassword = await user.setPassword(Password); // 이상없다면 비밀번호 변경\n        await User.findByIdAndUpdate(id, { hashedPassword: newPassword });\n        user.save();\n        res.json({\n            success: true,\n            message: \"비밀번호 변경 성공\"\n        })\n    } catch(err) {\n        res.json({ \n            success: false,\n            error: '에러 발생😅'\n        })\n    }\n};\n   \nexport const postAddKey = async (req, res) => {\n    const {\n        body: { \n            userId, \n            newKey \n        }\n    } = req;\n    try{\n        if(!userId || !newKey) {\n            return res.json({\n                success: false,\n                message: \"모든 정보를 입력해주세요😅\"\n            })\n        }\n        const user = await User.findById(userId)\n        const existedKey = await Product.findOne({ keyName: newKey });\n        if(existedKey) {\n            return res.json({\n                success: false,\n                message: \"이미 등록된 제품번호입니다😅\"\n            });\n        }\n        const key = await Product.create({\n            keyName: newKey,\n            user: userId\n        })\n        await user.keyList.push(key.id);\n        await user.save();\n        // await User.findByIdAndUpdate(userId, {$addToSet: { keyList: key.id }});\n        res.json({\n            data: key,\n            success: true,\n            message: \"제품 등록 완료!\"\n        });\n    } catch(err) {\n        res.json({\n            success: false,\n            error: \"알수없는 오류가 발생했습니다😅\"\n        });\n    }\n};\n\nexport const postDeleteKey = async(req, res) => { // 키삭제 콜백\n    const {\n        body,\n        user: { _id: userId }\n    } = req; \n    const id = Object.keys(body)[0] // 클라이언트로부터 정보 받아오기\n    try {\n        const product = await Product.findById(id); // 제품 조회\n        if(String(product.user) === String(userId)) { // 제품소유 유저와 로그인 유저가 같다면\n            await Product.findByIdAndDelete(id); // 제품디비에서 삭제\n            await User.findByIdAndUpdate(userId, {$pull: { keyList: id }}); // 유저 제품 리스트 수정\n            const dhts = await Dht.find({product: id}); // 센서 디비에서 삭제\n            const pmss = await Pms.find({product: id});\n            for(const dht of dhts) {\n                await Dht.findByIdAndDelete(dht._id)\n            };\n            for(const pms of pmss) {\n                await Pms.findByIdAndDelete(pms._id);\n            };\n            res.json({\n                success: true,\n                message: \"삭제 성공\"\n            });\n        }\n    } catch (err) {\n        res.json({\n            success: false,\n            message: \"삭제 실패\"\n        });\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1623268058379
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/middleware.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/middleware.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/middleware.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/middleware.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "middleware.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _User = _interopRequireDefault(require(\"./models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// 인증\nvar jwtMiddleware = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var token, userToken, user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = req.cookies['access_token'];\n\n            if (token) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              isAuth: false\n            }));\n\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _User[\"default\"].findByToken(token);\n\n          case 6:\n            userToken = _context.sent;\n            _context.next = 9;\n            return _User[\"default\"].findOne({\n              token: token\n            });\n\n          case 9:\n            user = _context.sent;\n\n            if (!(userToken && user)) {\n              _context.next = 15;\n              break;\n            }\n\n            if (!(userToken._id === String(user._id))) {\n              _context.next = 15;\n              break;\n            }\n\n            req.user = user;\n            req.token = token;\n            return _context.abrupt(\"return\", next());\n\n          case 15:\n            return _context.abrupt(\"return\");\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 18]]);\n  }));\n\n  return function jwtMiddleware(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = jwtMiddleware;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsiand0TWlkZGxld2FyZSIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImNvb2tpZXMiLCJqc29uIiwiaXNBdXRoIiwiVXNlciIsImZpbmRCeVRva2VuIiwidXNlclRva2VuIiwiZmluZE9uZSIsInVzZXIiLCJfaWQiLCJTdHJpbmciLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxhQUFhO0FBQUEscUVBQUcsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWixFQUFpQkMsSUFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2RDLFlBQUFBLEtBRGMsR0FDTkgsR0FBRyxDQUFDSSxPQUFKLENBQVksY0FBWixDQURNOztBQUFBLGdCQUVoQkQsS0FGZ0I7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBR1hGLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQ2RDLGNBQUFBLE1BQU0sRUFBRTtBQURNLGFBQVQsQ0FIVzs7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFRTUMsaUJBQUtDLFdBQUwsQ0FBaUJMLEtBQWpCLENBUk47O0FBQUE7QUFRWk0sWUFBQUEsU0FSWTtBQUFBO0FBQUEsbUJBU0NGLGlCQUFLRyxPQUFMLENBQWE7QUFBRVAsY0FBQUEsS0FBSyxFQUFMQTtBQUFGLGFBQWIsQ0FURDs7QUFBQTtBQVNaUSxZQUFBQSxJQVRZOztBQUFBLGtCQVVmRixTQUFTLElBQUlFLElBVkU7QUFBQTtBQUFBO0FBQUE7O0FBQUEsa0JBV2JGLFNBQVMsQ0FBQ0csR0FBVixLQUFrQkMsTUFBTSxDQUFDRixJQUFJLENBQUNDLEdBQU4sQ0FYWDtBQUFBO0FBQUE7QUFBQTs7QUFZZFosWUFBQUEsR0FBRyxDQUFDVyxJQUFKLEdBQVdBLElBQVg7QUFDQVgsWUFBQUEsR0FBRyxDQUFDRyxLQUFKLEdBQVlBLEtBQVo7QUFiYyw2Q0FjUEQsSUFBSSxFQWRHOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBbUJsQlksWUFBQUEsT0FBTyxDQUFDQyxHQUFSOztBQW5Ca0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBYmhCLGFBQWE7QUFBQTtBQUFBO0FBQUEsR0FBbkI7O2VBdUJlQSxhIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXIgZnJvbSBcIi4vbW9kZWxzL1VzZXJcIjtcblxuLy8g7J247KadXG5jb25zdCBqd3RNaWRkbGV3YXJlID0gYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHRva2VuID0gcmVxLmNvb2tpZXNbJ2FjY2Vzc190b2tlbiddO1xuICBpZighdG9rZW4pIHtcbiAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgaXNBdXRoOiBmYWxzZVxuICAgIH0pXG4gIH1cbiAgdHJ5e1xuICAgIGNvbnN0IHVzZXJUb2tlbiA9IGF3YWl0IFVzZXIuZmluZEJ5VG9rZW4odG9rZW4pO1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyB0b2tlbiB9KTtcbiAgICBpZih1c2VyVG9rZW4gJiYgdXNlcikge1xuICAgICAgaWYodXNlclRva2VuLl9pZCA9PT0gU3RyaW5nKHVzZXIuX2lkKSkge1xuICAgICAgICByZXEudXNlciA9IHVzZXI7XG4gICAgICAgIHJlcS50b2tlbiA9IHRva2VuO1xuICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgICAgfVxuICAgIH0gXG4gICAgcmV0dXJuO1xuICB9IGNhdGNoKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycilcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgand0TWlkZGxld2FyZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "middleware.js"
      ],
      "names": [
        "jwtMiddleware",
        "req",
        "res",
        "next",
        "token",
        "cookies",
        "json",
        "isAuth",
        "User",
        "findByToken",
        "userToken",
        "findOne",
        "user",
        "_id",
        "String",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA;AACA,IAAMA,aAAa;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,KADc,GACNH,GAAG,CAACI,OAAJ,CAAY,cAAZ,CADM;;AAAA,gBAEhBD,KAFgB;AAAA;AAAA;AAAA;;AAAA,6CAGXF,GAAG,CAACI,IAAJ,CAAS;AACdC,cAAAA,MAAM,EAAE;AADM,aAAT,CAHW;;AAAA;AAAA;AAAA;AAAA,mBAQMC,iBAAKC,WAAL,CAAiBL,KAAjB,CARN;;AAAA;AAQZM,YAAAA,SARY;AAAA;AAAA,mBASCF,iBAAKG,OAAL,CAAa;AAAEP,cAAAA,KAAK,EAALA;AAAF,aAAb,CATD;;AAAA;AASZQ,YAAAA,IATY;;AAAA,kBAUfF,SAAS,IAAIE,IAVE;AAAA;AAAA;AAAA;;AAAA,kBAWbF,SAAS,CAACG,GAAV,KAAkBC,MAAM,CAACF,IAAI,CAACC,GAAN,CAXX;AAAA;AAAA;AAAA;;AAYdZ,YAAAA,GAAG,CAACW,IAAJ,GAAWA,IAAX;AACAX,YAAAA,GAAG,CAACG,KAAJ,GAAYA,KAAZ;AAbc,6CAcPD,IAAI,EAdG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBlBY,YAAAA,OAAO,CAACC,GAAR;;AAnBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbhB,aAAa;AAAA;AAAA;AAAA,GAAnB;;eAuBeA,a",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "import User from \"./models/User\";\n\n// 인증\nconst jwtMiddleware = async (req, res, next) => {\n  const token = req.cookies['access_token'];\n  if(!token) {\n    return res.json({\n      isAuth: false\n    })\n  }\n  try{\n    const userToken = await User.findByToken(token);\n    const user = await User.findOne({ token });\n    if(userToken && user) {\n      if(userToken._id === String(user._id)) {\n        req.user = user;\n        req.token = token;\n        return next();\n      }\n    } \n    return;\n  } catch(err) {\n    console.log(err)\n  }\n};\n\nexport default jwtMiddleware;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621312563800
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/routers/userRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/userRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/routers/userRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/userRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
        "sourceFileName": "userRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middleware = _interopRequireDefault(require(\"../middleware\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar userRouter = _express[\"default\"].Router();\n\nuserRouter.post(_routes[\"default\"].changePassword(), _middleware[\"default\"], _userController.postChangePassword);\nuserRouter.post(_routes[\"default\"].addKey, _middleware[\"default\"], _userController.postAddKey);\nuserRouter.post(_routes[\"default\"].deleteKey, _middleware[\"default\"], _userController.postDeleteKey);\nvar _default = userRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJSb3V0ZXIuanMiXSwibmFtZXMiOlsidXNlclJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Iiwicm91dGVzIiwiY2hhbmdlUGFzc3dvcmQiLCJqd3RNaWRkbGV3YXJlIiwicG9zdENoYW5nZVBhc3N3b3JkIiwiYWRkS2V5IiwicG9zdEFkZEtleSIsImRlbGV0ZUtleSIsInBvc3REZWxldGVLZXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkI7O0FBRUFGLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQkMsbUJBQU9DLGNBQVAsRUFBaEIsRUFBeUNDLHNCQUF6QyxFQUF3REMsa0NBQXhEO0FBRUFQLFVBQVUsQ0FBQ0csSUFBWCxDQUFnQkMsbUJBQU9JLE1BQXZCLEVBQStCRixzQkFBL0IsRUFBOENHLDBCQUE5QztBQUVBVCxVQUFVLENBQUNHLElBQVgsQ0FBZ0JDLG1CQUFPTSxTQUF2QixFQUFrQ0osc0JBQWxDLEVBQWlESyw2QkFBakQ7ZUFFZVgsVSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvc2VydmVyL3JvdXRlcnMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBwb3N0Q2hhbmdlUGFzc3dvcmQsIHBvc3RBZGRLZXksIHBvc3REZWxldGVLZXkgfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XG5pbXBvcnQgand0TWlkZGxld2FyZSBmcm9tICcuLi9taWRkbGV3YXJlJztcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi4vcm91dGVzJztcblxuY29uc3QgdXNlclJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnVzZXJSb3V0ZXIucG9zdChyb3V0ZXMuY2hhbmdlUGFzc3dvcmQoKSwgand0TWlkZGxld2FyZSwgcG9zdENoYW5nZVBhc3N3b3JkKTtcblxudXNlclJvdXRlci5wb3N0KHJvdXRlcy5hZGRLZXksIGp3dE1pZGRsZXdhcmUsIHBvc3RBZGRLZXkpO1xuXG51c2VyUm91dGVyLnBvc3Qocm91dGVzLmRlbGV0ZUtleSwgand0TWlkZGxld2FyZSwgcG9zdERlbGV0ZUtleSk7XG5cbmV4cG9ydCBkZWZhdWx0IHVzZXJSb3V0ZXI7XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "userRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "post",
        "routes",
        "changePassword",
        "jwtMiddleware",
        "postChangePassword",
        "addKey",
        "postAddKey",
        "deleteKey",
        "postDeleteKey"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,IAAX,CAAgBC,mBAAOC,cAAP,EAAhB,EAAyCC,sBAAzC,EAAwDC,kCAAxD;AAEAP,UAAU,CAACG,IAAX,CAAgBC,mBAAOI,MAAvB,EAA+BF,sBAA/B,EAA8CG,0BAA9C;AAEAT,UAAU,CAACG,IAAX,CAAgBC,mBAAOM,SAAvB,EAAkCJ,sBAAlC,EAAiDK,6BAAjD;eAEeX,U",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "sourcesContent": [
        "import express from 'express';\nimport { postChangePassword, postAddKey, postDeleteKey } from '../controllers/userController';\nimport jwtMiddleware from '../middleware';\nimport routes from '../routes';\n\nconst userRouter = express.Router();\n\nuserRouter.post(routes.changePassword(), jwtMiddleware, postChangePassword);\n\nuserRouter.post(routes.addKey, jwtMiddleware, postAddKey);\n\nuserRouter.post(routes.deleteKey, jwtMiddleware, postDeleteKey);\n\nexport default userRouter;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1623721069780
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/routers/dataRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/dataRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/routers/dataRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/dataRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
        "sourceFileName": "dataRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dataController = require(\"../controllers/dataController\");\n\nvar _middleware = _interopRequireDefault(require(\"../middleware\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar dataRouter = _express[\"default\"].Router();\n\ndataRouter.get(_routes[\"default\"].dataUser(), _middleware[\"default\"], _dataController.dataUser);\ndataRouter.get(_routes[\"default\"].detailData(), _middleware[\"default\"], _dataController.deviceDetail);\ndataRouter.post(_routes[\"default\"].detailData(), _middleware[\"default\"], _dataController.postDateData);\nvar _default = dataRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFSb3V0ZXIuanMiXSwibmFtZXMiOlsiZGF0YVJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyb3V0ZXMiLCJkYXRhVXNlciIsImp3dE1pZGRsZXdhcmUiLCJkZXRhaWxEYXRhIiwiZGV2aWNlRGV0YWlsIiwicG9zdCIsInBvc3REYXRlRGF0YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBR0EsSUFBTUEsVUFBVSxHQUFHQyxvQkFBUUMsTUFBUixFQUFuQjs7QUFFQUYsVUFBVSxDQUFDRyxHQUFYLENBQWVDLG1CQUFPQyxRQUFQLEVBQWYsRUFBa0NDLHNCQUFsQyxFQUFpREQsd0JBQWpEO0FBRUFMLFVBQVUsQ0FBQ0csR0FBWCxDQUFlQyxtQkFBT0csVUFBUCxFQUFmLEVBQW1DRCxzQkFBbkMsRUFBa0RFLDRCQUFsRDtBQUNBUixVQUFVLENBQUNTLElBQVgsQ0FBZ0JMLG1CQUFPRyxVQUFQLEVBQWhCLEVBQW9DRCxzQkFBcEMsRUFBbURJLDRCQUFuRDtlQUVlVixVIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvcm91dGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IGRhdGFVc2VyLCBkZXZpY2VEZXRhaWwsIHBvc3REYXRlRGF0YSB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL2RhdGFDb250cm9sbGVyJztcbmltcG9ydCBqd3RNaWRkbGV3YXJlIGZyb20gJy4uL21pZGRsZXdhcmUnO1xuaW1wb3J0IHJvdXRlcyBmcm9tICcuLi9yb3V0ZXMnO1xuXG5cbmNvbnN0IGRhdGFSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5kYXRhUm91dGVyLmdldChyb3V0ZXMuZGF0YVVzZXIoKSwgand0TWlkZGxld2FyZSwgZGF0YVVzZXIpO1xuXG5kYXRhUm91dGVyLmdldChyb3V0ZXMuZGV0YWlsRGF0YSgpLGp3dE1pZGRsZXdhcmUsIGRldmljZURldGFpbCk7XG5kYXRhUm91dGVyLnBvc3Qocm91dGVzLmRldGFpbERhdGEoKSxqd3RNaWRkbGV3YXJlLCBwb3N0RGF0ZURhdGEpO1xuXG5leHBvcnQgZGVmYXVsdCBkYXRhUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dataRouter.js"
      ],
      "names": [
        "dataRouter",
        "express",
        "Router",
        "get",
        "routes",
        "dataUser",
        "jwtMiddleware",
        "detailData",
        "deviceDetail",
        "post",
        "postDateData"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;AAEAF,UAAU,CAACG,GAAX,CAAeC,mBAAOC,QAAP,EAAf,EAAkCC,sBAAlC,EAAiDD,wBAAjD;AAEAL,UAAU,CAACG,GAAX,CAAeC,mBAAOG,UAAP,EAAf,EAAmCD,sBAAnC,EAAkDE,4BAAlD;AACAR,UAAU,CAACS,IAAX,CAAgBL,mBAAOG,UAAP,EAAhB,EAAoCD,sBAApC,EAAmDI,4BAAnD;eAEeV,U",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "sourcesContent": [
        "import express from 'express';\nimport { dataUser, deviceDetail, postDateData } from '../controllers/dataController';\nimport jwtMiddleware from '../middleware';\nimport routes from '../routes';\n\n\nconst dataRouter = express.Router();\n\ndataRouter.get(routes.dataUser(), jwtMiddleware, dataUser);\n\ndataRouter.get(routes.detailData(),jwtMiddleware, deviceDetail);\ndataRouter.post(routes.detailData(),jwtMiddleware, postDateData);\n\nexport default dataRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622057084605
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/routers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/routers/apiRouter.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/apiRouter.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/routers/apiRouter.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/routers/apiRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
        "sourceFileName": "apiRouter.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar apiRouter = _express[\"default\"].Router();\n\nvar _default = apiRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaVJvdXRlci5qcyJdLCJuYW1lcyI6WyJhcGlSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWxCOztlQUdlRixTIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvcm91dGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IHJvdXRlcyBmcm9tIFwiLi4vcm91dGVzXCI7XG5cbmNvbnN0IGFwaVJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cblxuZXhwb3J0IGRlZmF1bHQgYXBpUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "apiRouter.js"
      ],
      "names": [
        "apiRouter",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,SAAS,GAAGC,oBAAQC,MAAR,EAAlB;;eAGeF,S",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/routers/",
      "sourcesContent": [
        "import express from \"express\";\nimport routes from \"../routes\";\n\nconst apiRouter = express.Router();\n\n\nexport default apiRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620898547580
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/passport.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/passport.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/passport.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "passport.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _User = _interopRequireDefault(require(\"./models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_passport[\"default\"].use(_User[\"default\"].createStrategy());\n\n_passport[\"default\"].serializeUser(_User[\"default\"].serializeUser(function (user, done) {\n  return done(null, user);\n}));\n\n_passport[\"default\"].deserializeUser(function (id, done) {\n  _User[\"default\"].findOne({\n    email: id\n  }, function (err, user) {\n    done(err, user);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwidXNlIiwiVXNlciIsImNyZWF0ZVN0cmF0ZWd5Iiwic2VyaWFsaXplVXNlciIsInVzZXIiLCJkb25lIiwiZGVzZXJpYWxpemVVc2VyIiwiaWQiLCJmaW5kT25lIiwiZW1haWwiLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEscUJBQVNDLEdBQVQsQ0FBYUMsaUJBQUtDLGNBQUwsRUFBYjs7QUFFQUgscUJBQVNJLGFBQVQsQ0FBdUJGLGlCQUFLRSxhQUFMLENBQW1CLFVBQUNDLElBQUQsRUFBT0MsSUFBUCxFQUFnQjtBQUN0RCxTQUFPQSxJQUFJLENBQUMsSUFBRCxFQUFPRCxJQUFQLENBQVg7QUFDSCxDQUZzQixDQUF2Qjs7QUFJQUwscUJBQVNPLGVBQVQsQ0FBeUIsVUFBQ0MsRUFBRCxFQUFLRixJQUFMLEVBQWM7QUFDbkNKLG1CQUFLTyxPQUFMLENBQWE7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFRjtBQUFSLEdBQWIsRUFBMEIsVUFBQ0csR0FBRCxFQUFNTixJQUFOLEVBQWU7QUFDckNDLElBQUFBLElBQUksQ0FBQ0ssR0FBRCxFQUFNTixJQUFOLENBQUo7QUFDSCxHQUZEO0FBR0gsQ0FKRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNzcG9ydCBmcm9tIFwicGFzc3BvcnRcIjtcbmltcG9ydCBVc2VyIGZyb20gXCIuL21vZGVscy9Vc2VyXCI7XG5cbnBhc3Nwb3J0LnVzZShVc2VyLmNyZWF0ZVN0cmF0ZWd5KCkpO1xuXG5wYXNzcG9ydC5zZXJpYWxpemVVc2VyKFVzZXIuc2VyaWFsaXplVXNlcigodXNlciwgZG9uZSkgPT4ge1xuICAgIHJldHVybiBkb25lKG51bGwsIHVzZXIpO1xufSkpO1xuXG5wYXNzcG9ydC5kZXNlcmlhbGl6ZVVzZXIoKGlkLCBkb25lKSA9PiB7XG4gICAgVXNlci5maW5kT25lKHtlbWFpbDogaWR9LCAoZXJyLCB1c2VyKSA9PiB7XG4gICAgICAgIGRvbmUoZXJyLCB1c2VyKTtcbiAgICB9KTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "use",
        "User",
        "createStrategy",
        "serializeUser",
        "user",
        "done",
        "deserializeUser",
        "id",
        "findOne",
        "email",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,qBAASC,GAAT,CAAaC,iBAAKC,cAAL,EAAb;;AAEAH,qBAASI,aAAT,CAAuBF,iBAAKE,aAAL,CAAmB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACtD,SAAOA,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAX;AACH,CAFsB,CAAvB;;AAIAL,qBAASO,eAAT,CAAyB,UAACC,EAAD,EAAKF,IAAL,EAAc;AACnCJ,mBAAKO,OAAL,CAAa;AAACC,IAAAA,KAAK,EAAEF;AAAR,GAAb,EAA0B,UAACG,GAAD,EAAMN,IAAN,EAAe;AACrCC,IAAAA,IAAI,CAACK,GAAD,EAAMN,IAAN,CAAJ;AACH,GAFD;AAGH,CAJD",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "import passport from \"passport\";\nimport User from \"./models/User\";\n\npassport.use(User.createStrategy());\n\npassport.serializeUser(User.serializeUser((user, done) => {\n    return done(null, user);\n}));\n\npassport.deserializeUser((id, done) => {\n    User.findOne({email: id}, (err, user) => {\n        done(err, user);\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1619963307602
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Data.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Data.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Data.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Data.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DataSchema = new _mongoose[\"default\"].Schema({\n  humidity: Number,\n  degree: Number,\n  dust: Number,\n  measuredAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  }\n});\n\nvar model = _mongoose[\"default\"].model('Data', DataSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGEuanMiXSwibmFtZXMiOlsiRGF0YVNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwiaHVtaWRpdHkiLCJOdW1iZXIiLCJkZWdyZWUiLCJkdXN0IiwibWVhc3VyZWRBdCIsInR5cGUiLCJEYXRlIiwibm93IiwiY29udHJvbGxlciIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ25DQyxFQUFBQSxRQUFRLEVBQUVDLE1BRHlCO0FBRW5DQyxFQUFBQSxNQUFNLEVBQUVELE1BRjJCO0FBR25DRSxFQUFBQSxJQUFJLEVBQUVGLE1BSDZCO0FBSW5DRyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxJQURFO0FBRVIsZUFBU0EsSUFBSSxDQUFDQztBQUZOLEdBSnVCO0FBUW5DQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkgsSUFBQUEsSUFBSSxFQUFFUCxxQkFBU0MsTUFBVCxDQUFnQlUsS0FBaEIsQ0FBc0JDLFFBRHBCO0FBRVJDLElBQUFBLEdBQUcsRUFBRTtBQUZHO0FBUnVCLENBQXBCLENBQW5COztBQWNBLElBQU1DLEtBQUssR0FBR2QscUJBQVNjLEtBQVQsQ0FBZSxNQUFmLEVBQXVCZixVQUF2QixDQUFkOztlQUVlZSxLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IERhdGFTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBodW1pZGl0eTogTnVtYmVyLFxuICAgIGRlZ3JlZTogTnVtYmVyLFxuICAgIGR1c3Q6IE51bWJlcixcbiAgICBtZWFzdXJlZEF0OiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgfSxcbiAgICBjb250cm9sbGVyOiB7XG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiBcIlVzZXJcIlxuICAgIH1cbn0pO1xuXG5jb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdEYXRhJywgRGF0YVNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Data.js"
      ],
      "names": [
        "DataSchema",
        "mongoose",
        "Schema",
        "humidity",
        "Number",
        "degree",
        "dust",
        "measuredAt",
        "type",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,QAAQ,EAAEC,MADyB;AAEnCC,EAAAA,MAAM,EAAED,MAF2B;AAGnCE,EAAAA,IAAI,EAAEF,MAH6B;AAInCG,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAJuB;AAQnCC,EAAAA,UAAU,EAAE;AACRH,IAAAA,IAAI,EAAEP,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADpB;AAERC,IAAAA,GAAG,EAAE;AAFG;AARuB,CAApB,CAAnB;;AAcA,IAAMC,KAAK,GAAGd,qBAASc,KAAT,CAAe,MAAf,EAAuBf,UAAvB,CAAd;;eAEee,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst DataSchema = new mongoose.Schema({\n    humidity: Number,\n    degree: Number,\n    dust: Number,\n    measuredAt: {\n        type: Date,\n        default: Date.now\n    },\n    controller: {\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n    }\n});\n\nconst model = mongoose.model('Data', DataSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620737289575
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/controllers/globalController.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/globalController.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/controllers/globalController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/controllers/globalController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
        "sourceFileName": "globalController.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.logout = exports.auth = exports.postLogin = exports.postJoin = void 0;\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _Product = _interopRequireDefault(require(\"../models/Product\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Global\nvar postJoin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, name, email, password, confirmPassword, key, existedUser, existedKey, user, product;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, confirmPassword = _req$body.confirmPassword, key = _req$body.key; // 웹 클라이언트로부터 데이터 받기\n\n            _context.prev = 1;\n\n            if (!(!name || !email || !password || !confirmPassword || !key)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              success: false,\n              message: \"모든 정보를 입력해주세요😅\"\n            }));\n\n          case 4:\n            _context.next = 6;\n            return _User[\"default\"].findByEmail(email);\n\n          case 6:\n            existedUser = _context.sent;\n            _context.next = 9;\n            return _Product[\"default\"].findOne({\n              keyName: key\n            });\n\n          case 9:\n            existedKey = _context.sent;\n\n            if (!existedUser) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              success: false,\n              message: \"이미 가입된 이메일입니다😅\"\n            }));\n\n          case 12:\n            if (!existedKey) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              success: false,\n              message: \"이미 등록된 키입니다😅\"\n            }));\n\n          case 14:\n            if (!(password !== confirmPassword)) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              success: false,\n              message: \"비밀번호가 일치하지 않습니다😅\"\n            }));\n\n          case 16:\n            _context.next = 18;\n            return _User[\"default\"].create({\n              email: email,\n              name: name\n            });\n\n          case 18:\n            user = _context.sent;\n            _context.next = 21;\n            return user.setPassword(password);\n\n          case 21:\n            _context.next = 23;\n            return user.save();\n\n          case 23:\n            _context.next = 25;\n            return _Product[\"default\"].create({\n              keyName: key,\n              data: [],\n              user: user.id\n            });\n\n          case 25:\n            product = _context.sent;\n            _context.next = 28;\n            return product.save();\n\n          case 28:\n            user.keyList.push(product.id);\n            user.save();\n            res.json({\n              success: true,\n              message: \"회원가입에 성공하셨습니다.\"\n            });\n            _context.next = 36;\n            break;\n\n          case 33:\n            _context.prev = 33;\n            _context.t0 = _context[\"catch\"](1);\n            throw Error();\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 33]]);\n  }));\n\n  return function postJoin(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.postJoin = postJoin;\n\nvar postLogin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user, checkPassword, token;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password; // 웹 클라이언트에게 받은 정보\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _User[\"default\"].findByEmail(email);\n\n          case 4:\n            user = _context2.sent;\n\n            if (!(!email || !password)) {\n              _context2.next = 8;\n              break;\n            }\n\n            // 로그인 알고리즘\n            res.json({\n              success: false,\n              message: \"이메일과 비밀번호를 입력해주세요😅\"\n            });\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            if (user) {\n              _context2.next = 11;\n              break;\n            }\n\n            res.json({\n              success: false,\n              message: \"존재하지 않는 이메일입니다😅\"\n            });\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            _context2.next = 13;\n            return user.checkPassword(password);\n\n          case 13:\n            checkPassword = _context2.sent;\n\n            if (checkPassword) {\n              _context2.next = 17;\n              break;\n            }\n\n            res.json({\n              success: false,\n              message: \"비밀번호를 확인해주세요😅\"\n            });\n            return _context2.abrupt(\"return\");\n\n          case 17:\n            user.serialize();\n            _context2.next = 20;\n            return user.generateToken(user);\n\n          case 20:\n            token = _context2.sent;\n            // 이메일과 패스워드가 일치하다면 토큰 생성\n            user.save();\n            res.cookie('access_token', token, {\n              maxAge: 1000 * 60 * 60 * 24 * 7,\n              httpOnly: false\n            }).status(200).json({\n              success: true,\n              userId: user.id\n            });\n            _context2.next = 28;\n            break;\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](1);\n            throw Error();\n\n          case 28:\n            ;\n\n          case 29:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 25]]);\n  }));\n\n  return function postLogin(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.postLogin = postLogin;\n\nvar auth = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var keyInfos, _req$user, id, name, email, keyId, _iterator, _step, key, keyInfo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // 사용자 인증 과정\n            keyInfos = [];\n            _req$user = req.user, id = _req$user.id, name = _req$user.name, email = _req$user.email, keyId = _req$user.keyList; // \n\n            _context3.prev = 2;\n            _iterator = _createForOfIteratorHelper(keyId);\n            _context3.prev = 4;\n\n            _iterator.s();\n\n          case 6:\n            if ((_step = _iterator.n()).done) {\n              _context3.next = 14;\n              break;\n            }\n\n            key = _step.value;\n            _context3.next = 10;\n            return _Product[\"default\"].findById(key);\n\n          case 10:\n            keyInfo = _context3.sent;\n            // 제품디비에서 키 조회\n            keyInfos.push(keyInfo);\n\n          case 12:\n            _context3.next = 6;\n            break;\n\n          case 14:\n            _context3.next = 19;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](4);\n\n            _iterator.e(_context3.t0);\n\n          case 19:\n            _context3.prev = 19;\n\n            _iterator.f();\n\n            return _context3.finish(19);\n\n          case 22:\n            return _context3.abrupt(\"return\", res.status(200) // 이상 없다면 유저조회 발송\n            .json({\n              id: id,\n              name: name,\n              email: email,\n              keyList: keyInfos,\n              isAuth: true\n            }));\n\n          case 25:\n            _context3.prev = 25;\n            _context3.t1 = _context3[\"catch\"](2);\n            return _context3.abrupt(\"return\", res.json({\n              isAuth: false,\n              error: _context3.t1\n            }));\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 25], [4, 16, 19, 22]]);\n  }));\n\n  return function auth(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.auth = auth;\n\nvar logout = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            id = req.user._id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _User[\"default\"].findByIdAndUpdate(id, {\n              token: \"\"\n            });\n\n          case 4:\n            user = _context4.sent;\n            user.save();\n            res.cookie('access_token', \"\").status(200).json({\n              success: true,\n              isAuth: false\n            });\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.json({\n              success: false,\n              error: _context4.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 9]]);\n  }));\n\n  return function logout(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.logout = logout;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "globalController.js"
      ],
      "names": [
        "postJoin",
        "req",
        "res",
        "body",
        "name",
        "email",
        "password",
        "confirmPassword",
        "key",
        "json",
        "success",
        "message",
        "User",
        "findByEmail",
        "existedUser",
        "Product",
        "findOne",
        "keyName",
        "existedKey",
        "create",
        "user",
        "setPassword",
        "save",
        "data",
        "id",
        "product",
        "keyList",
        "push",
        "Error",
        "postLogin",
        "checkPassword",
        "serialize",
        "generateToken",
        "token",
        "cookie",
        "maxAge",
        "httpOnly",
        "status",
        "userId",
        "auth",
        "keyInfos",
        "keyId",
        "findById",
        "keyInfo",
        "isAuth",
        "error",
        "logout",
        "_id",
        "findByIdAndUpdate"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/controllers/",
      "sourcesContent": [
        "import User from \"../models/User\";\nimport Product from \"../models/Product\";\n\n// Global\nexport const postJoin = async (req, res) => {\n    const { \n        name, \n        email, \n        password, \n        confirmPassword, \n        key \n    } = req.body; // 웹 클라이언트로부터 데이터 받기\n    try {\n        if(!name || !email || !password || !confirmPassword || !key) {\n            return (\n                res.json({ \n                    success: false,\n                    message: \"모든 정보를 입력해주세요😅\" \n                })\n            )\n        } // 회원가입 인증 알고리즘\n        const existedUser = await User.findByEmail(email) // 이미 가입된 이메일 조회\n        const existedKey = await Product.findOne({ keyName: key }); // 이미 등록된 키값 조회\n        if(existedUser) {\n            return (\n                res.json({ \n                    success: false,\n                    message: \"이미 가입된 이메일입니다😅\"\n                })\n            )\n        } // 결과 \n        if(existedKey) {\n            return (\n                res.json({\n                    success: false,\n                    message: \"이미 등록된 키입니다😅\"\n                })\n            )\n        }\n        if(password !== confirmPassword) {\n            return (\n                res.json({ \n                    success: false,\n                    message: \"비밀번호가 일치하지 않습니다😅\"       \n                })\n            )\n        }\n        const user = await User.create({\n            email,\n            name\n        });\n        await user.setPassword(password);\n        await user.save();\n        const product = await Product.create({\n            keyName: key,\n            data: [],\n            user: user.id\n        });\n        await product.save();\n        user.keyList.push(product.id);\n        user.save();\n        res.json({ \n            success: true,\n            message: \"회원가입에 성공하셨습니다.\"\n        })\n    } catch(err) {\n        throw Error();\n    }\n};\n\nexport const postLogin = async (req, res) => {\n    const { email, password } = req.body; // 웹 클라이언트에게 받은 정보\n    try {\n        const user = await User.findByEmail(email); // 이메일 조회\n        if(!email || !password) { // 로그인 알고리즘\n            res.json({ \n                success: false,\n                message: \"이메일과 비밀번호를 입력해주세요😅\"\n            });\n            return;\n        }\n        if(!user) {\n            res.json({ \n                success: false,\n                message: \"존재하지 않는 이메일입니다😅\"\n            });\n            return; \n        }\n        const checkPassword = await user.checkPassword(password); // 이메일이 존재한다면 비밀번호 조회\n        if(!checkPassword) {\n            res.json({ \n                success: false,\n                message: \"비밀번호를 확인해주세요😅\"\n            });\n            return;\n        }\n        user.serialize();\n        const token = await user.generateToken(user); // 이메일과 패스워드가 일치하다면 토큰 생성\n        user.save();\n        res.cookie('access_token', token, {\n            maxAge: 1000 * 60 * 60 * 24 * 7,\n            httpOnly: false\n        })\n            .status(200)\n            .json({ \n                success: true,\n                userId: user.id    \n            });\n    } catch(err) {\n        throw Error();\n    };\n};\n\nexport const auth = async(req, res) => { // 사용자 인증 과정\n    let keyInfos = [];\n    const {\n        user: {\n            id,\n            name,\n            email,\n            keyList: keyId\n        }\n    } = req; // \n    try {\n        for(const key of keyId) { // 키 배열 원소 마다 실행\n            const keyInfo = await Product.findById(key); // 제품디비에서 키 조회\n            keyInfos.push(keyInfo);\n        }\n        return res.status(200) // 이상 없다면 유저조회 발송\n            .json({ \n                id,\n                name,\n                email,\n                keyList: keyInfos,\n                isAuth: true\n            });\n    } catch(err) {\n        return res.json({\n            isAuth: false,\n            error: err\n        });\n    }\n};\n\nexport const logout = async (req, res) => {\n    const {\n        user: { _id: id }\n    } = req;\n    try {\n        const user = await User.findByIdAndUpdate(id, {token: \"\"});\n        user.save();\n        res.cookie('access_token', \"\")\n            .status(200)\n            .json({ \n                success: true,\n                isAuth: false\n            });\n    } catch(err) {\n        res.json({ \n            success: false, \n            error: err\n        });\n    } \n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1622059947158
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Product.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Product.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Product.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Product.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Product.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar ProductSchema = new _mongoose[\"default\"].Schema({\n  keyName: {\n    type: String,\n    required: true\n  },\n  // 제품 시리얼 넘버\n  data: [// 데이터 Data 스키마 연동\n  {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Data\"\n  }],\n  user: {\n    // User 스키마와 연동\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  }\n});\n\nvar model = _mongoose[\"default\"].model('Product', ProductSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb2R1Y3QuanMiXSwibmFtZXMiOlsiUHJvZHVjdFNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwia2V5TmFtZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImRhdGEiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwidXNlciIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxhQUFhLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDdENDLEVBQUFBLE9BQU8sRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVDLE1BREQ7QUFFTEMsSUFBQUEsUUFBUSxFQUFFO0FBRkwsR0FENkI7QUFJbkM7QUFDSEMsRUFBQUEsSUFBSSxFQUFFLENBQUU7QUFDSjtBQUNJSCxJQUFBQSxJQUFJLEVBQUVILHFCQUFTQyxNQUFULENBQWdCTSxLQUFoQixDQUFzQkMsUUFEaEM7QUFFSUMsSUFBQUEsR0FBRyxFQUFFO0FBRlQsR0FERSxDQUxnQztBQVd0Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQUU7QUFDSlAsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQk0sS0FBaEIsQ0FBc0JDLFFBRDFCO0FBRUZDLElBQUFBLEdBQUcsRUFBRTtBQUZIO0FBWGdDLENBQXBCLENBQXRCOztBQWlCQSxJQUFNRSxLQUFLLEdBQUdYLHFCQUFTVyxLQUFULENBQWUsU0FBZixFQUEwQlosYUFBMUIsQ0FBZDs7ZUFFZVksSyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvc2VydmVyL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zdCBQcm9kdWN0U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAga2V5TmFtZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIH0sIC8vIOygnO2SiCDsi5zrpqzslrwg64SY67KEXG4gICAgZGF0YTogWyAvLyDrjbDsnbTthLAgRGF0YSDsiqTtgqTrp4gg7Jew64+ZXG4gICAgICAgIHtcbiAgICAgICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgICAgIHJlZjogXCJEYXRhXCJcbiAgICAgICAgfVxuICAgIF0sXG4gICAgdXNlcjogeyAvLyBVc2VyIOyKpO2CpOuniOyZgCDsl7Drj5lcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZWY6IFwiVXNlclwiXG4gICAgfVxufSlcblxuY29uc3QgbW9kZWwgPSBtb25nb29zZS5tb2RlbCgnUHJvZHVjdCcsIFByb2R1Y3RTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBtb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Product.js"
      ],
      "names": [
        "ProductSchema",
        "mongoose",
        "Schema",
        "keyName",
        "type",
        "String",
        "required",
        "data",
        "Types",
        "ObjectId",
        "ref",
        "user",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,aAAa,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACtCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAD6B;AAInC;AACHC,EAAAA,IAAI,EAAE,CAAE;AACJ;AACIH,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBM,KAAhB,CAAsBC,QADhC;AAEIC,IAAAA,GAAG,EAAE;AAFT,GADE,CALgC;AAWtCC,EAAAA,IAAI,EAAE;AAAE;AACJP,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBM,KAAhB,CAAsBC,QAD1B;AAEFC,IAAAA,GAAG,EAAE;AAFH;AAXgC,CAApB,CAAtB;;AAiBA,IAAME,KAAK,GAAGX,qBAASW,KAAT,CAAe,SAAf,EAA0BZ,aAA1B,CAAd;;eAEeY,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst ProductSchema = new mongoose.Schema({\n    keyName: {\n        type: String,\n        required: true,\n    }, // 제품 시리얼 넘버\n    data: [ // 데이터 Data 스키마 연동\n        {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: \"Data\"\n        }\n    ],\n    user: { // User 스키마와 연동\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n    }\n})\n\nconst model = mongoose.model('Product', ProductSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622506412724
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Dht.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Dht.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Dht.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Dht.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Dht.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar DhtSchema = new _mongoose[\"default\"].Schema({\n  hum: {\n    type: Number,\n    required: true,\n    \"default\": 0\n  },\n  // 온도\n  tmp: {\n    type: Number,\n    required: true,\n    \"default\": 0\n  },\n  // 습도\n  measuredAt: {\n    // 측정시간\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    // 사용 유저\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"User\"\n  },\n  product: {\n    // 제품 번호\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"Product\"\n  },\n  sensor: {\n    // 센서명\n    type: String,\n    \"default\": \"DHT\"\n  },\n  key: {\n    required: true,\n    type: String\n  } // 제품 이름\n\n});\n\nvar model = _mongoose[\"default\"].model('Dht', DhtSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRodC5qcyJdLCJuYW1lcyI6WyJEaHRTY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImh1bSIsInR5cGUiLCJOdW1iZXIiLCJyZXF1aXJlZCIsInRtcCIsIm1lYXN1cmVkQXQiLCJEYXRlIiwibm93IiwiY29udHJvbGxlciIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJwcm9kdWN0Iiwic2Vuc29yIiwiU3RyaW5nIiwia2V5IiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBU0MsTUFBYixDQUFvQjtBQUNsQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQ0RDLElBQUFBLElBQUksRUFBRUMsTUFETDtBQUVEQyxJQUFBQSxRQUFRLEVBQUUsSUFGVDtBQUdELGVBQVM7QUFIUixHQUQ2QjtBQUsvQjtBQUNIQyxFQUFBQSxHQUFHLEVBQUU7QUFDREgsSUFBQUEsSUFBSSxFQUFFQyxNQURMO0FBRURDLElBQUFBLFFBQVEsRUFBRSxJQUZUO0FBR0QsZUFBUztBQUhSLEdBTjZCO0FBVS9CO0FBQ0hFLEVBQUFBLFVBQVUsRUFBRTtBQUFFO0FBQ1ZKLElBQUFBLElBQUksRUFBRUssSUFERTtBQUVSLGVBQVNBLElBQUksQ0FBQ0M7QUFGTixHQVhzQjtBQWVsQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQUU7QUFDVlAsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQlUsS0FBaEIsQ0FBc0JDLFFBRHBCO0FBRVJQLElBQUFBLFFBQVEsRUFBRSxJQUZGO0FBR1JRLElBQUFBLEdBQUcsRUFBRTtBQUhHLEdBZnNCO0FBb0JsQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQUU7QUFDUFgsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQlUsS0FBaEIsQ0FBc0JDLFFBRHZCO0FBRUxQLElBQUFBLFFBQVEsRUFBRSxJQUZMO0FBR0xRLElBQUFBLEdBQUcsRUFBRTtBQUhBLEdBcEJ5QjtBQXlCbENFLEVBQUFBLE1BQU0sRUFBRTtBQUFFO0FBQ05aLElBQUFBLElBQUksRUFBRWEsTUFERjtBQUVKLGVBQVM7QUFGTCxHQXpCMEI7QUE2QmxDQyxFQUFBQSxHQUFHLEVBQUU7QUFDRFosSUFBQUEsUUFBUSxFQUFFLElBRFQ7QUFFREYsSUFBQUEsSUFBSSxFQUFDYTtBQUZKLEdBN0I2QixDQWdDaEM7O0FBaENnQyxDQUFwQixDQUFsQjs7QUFtQ0EsSUFBTUUsS0FBSyxHQUFHbEIscUJBQVNrQixLQUFULENBQWUsS0FBZixFQUFzQm5CLFNBQXRCLENBQWQ7O2VBRWVtQixLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IERodFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGh1bToge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICBkZWZhdWx0OiAwXG4gICAgfSwgLy8g7Jio64+EXG4gICAgdG1wOiB7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIGRlZmF1bHQ6IDBcbiAgICB9LCAvLyDsirXrj4RcbiAgICBtZWFzdXJlZEF0OiB7IC8vIOy4oeygleyLnOqwhFxuICAgICAgICB0eXBlOiBEYXRlLFxuICAgICAgICBkZWZhdWx0OiBEYXRlLm5vd1xuICAgIH0sXG4gICAgY29udHJvbGxlcjogeyAvLyDsgqzsmqkg7Jyg7KCAXG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHJlZjogXCJVc2VyXCJcbiAgICB9LFxuICAgIHByb2R1Y3Q6IHsgLy8g7KCc7ZKIIOuyiO2YuFxuICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IFwiUHJvZHVjdFwiXG4gICAgfSxcbiAgICBzZW5zb3I6IHsgLy8g7IS87ISc66qFXG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogXCJESFRcIlxuICAgIH0sXG4gICAga2V5OiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB0eXBlOlN0cmluZ1xuICAgIH0gLy8g7KCc7ZKIIOydtOumhFxufSk7XG5cbmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ0RodCcsIERodFNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Dht.js"
      ],
      "names": [
        "DhtSchema",
        "mongoose",
        "Schema",
        "hum",
        "type",
        "Number",
        "required",
        "tmp",
        "measuredAt",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "product",
        "sensor",
        "String",
        "key",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,IAAI,EAAEC,MADL;AAEDC,IAAAA,QAAQ,EAAE,IAFT;AAGD,eAAS;AAHR,GAD6B;AAK/B;AACHC,EAAAA,GAAG,EAAE;AACDH,IAAAA,IAAI,EAAEC,MADL;AAEDC,IAAAA,QAAQ,EAAE,IAFT;AAGD,eAAS;AAHR,GAN6B;AAU/B;AACHE,EAAAA,UAAU,EAAE;AAAE;AACVJ,IAAAA,IAAI,EAAEK,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAXsB;AAelCC,EAAAA,UAAU,EAAE;AAAE;AACVP,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADpB;AAERP,IAAAA,QAAQ,EAAE,IAFF;AAGRQ,IAAAA,GAAG,EAAE;AAHG,GAfsB;AAoBlCC,EAAAA,OAAO,EAAE;AAAE;AACPX,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADvB;AAELP,IAAAA,QAAQ,EAAE,IAFL;AAGLQ,IAAAA,GAAG,EAAE;AAHA,GApByB;AAyBlCE,EAAAA,MAAM,EAAE;AAAE;AACNZ,IAAAA,IAAI,EAAEa,MADF;AAEJ,eAAS;AAFL,GAzB0B;AA6BlCC,EAAAA,GAAG,EAAE;AACDZ,IAAAA,QAAQ,EAAE,IADT;AAEDF,IAAAA,IAAI,EAACa;AAFJ,GA7B6B,CAgChC;;AAhCgC,CAApB,CAAlB;;AAmCA,IAAME,KAAK,GAAGlB,qBAASkB,KAAT,CAAe,KAAf,EAAsBnB,SAAtB,CAAd;;eAEemB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst DhtSchema = new mongoose.Schema({\n    hum: {\n        type: Number,\n        required: true,\n        default: 0\n    }, // 온도\n    tmp: {\n        type: Number,\n        required: true,\n        default: 0\n    }, // 습도\n    measuredAt: { // 측정시간\n        type: Date,\n        default: Date.now\n    },\n    controller: { // 사용 유저\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"User\"\n    },\n    product: { // 제품 번호\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"Product\"\n    },\n    sensor: { // 센서명\n        type: String,\n        default: \"DHT\"\n    },\n    key: {\n        required: true,\n        type:String\n    } // 제품 이름\n});\n\nconst model = mongoose.model('Dht', DhtSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622506380625
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Pms.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Pms.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Pms.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Pms.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Pms.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PmsSchema = new _mongoose[\"default\"].Schema({\n  dust: {\n    type: Number,\n    \"default\": 0,\n    required: true\n  },\n  // 미세먼지\n  measuredAt: {\n    // 측정시간\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    required: true,\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"User\"\n  },\n  product: {\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"Product\"\n  },\n  sensor: {\n    type: String,\n    \"default\": \"PMS\"\n  },\n  key: {\n    required: true,\n    type: String\n  }\n});\n\nvar model = _mongoose[\"default\"].model('Pms', PmsSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBtcy5qcyJdLCJuYW1lcyI6WyJQbXNTY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImR1c3QiLCJ0eXBlIiwiTnVtYmVyIiwicmVxdWlyZWQiLCJtZWFzdXJlZEF0IiwiRGF0ZSIsIm5vdyIsImNvbnRyb2xsZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicHJvZHVjdCIsInNlbnNvciIsIlN0cmluZyIsImtleSIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDbENDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRixlQUFTLENBRlA7QUFHRkMsSUFBQUEsUUFBUSxFQUFFO0FBSFIsR0FENEI7QUFLL0I7QUFDSEMsRUFBQUEsVUFBVSxFQUFFO0FBQUU7QUFDVkgsSUFBQUEsSUFBSSxFQUFFSSxJQURFO0FBRVIsZUFBU0EsSUFBSSxDQUFDQztBQUZOLEdBTnNCO0FBVWxDQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkosSUFBQUEsUUFBUSxFQUFFLElBREY7QUFFUkYsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQlMsS0FBaEIsQ0FBc0JDLFFBRnBCO0FBR1JDLElBQUFBLEdBQUcsRUFBRTtBQUhHLEdBVnNCO0FBZ0JsQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ0xWLElBQUFBLElBQUksRUFBRUgscUJBQVNDLE1BQVQsQ0FBZ0JTLEtBQWhCLENBQXNCQyxRQUR2QjtBQUVMTixJQUFBQSxRQUFRLEVBQUUsSUFGTDtBQUdMTyxJQUFBQSxHQUFHLEVBQUU7QUFIQSxHQWhCeUI7QUFxQmxDRSxFQUFBQSxNQUFNLEVBQUU7QUFDSlgsSUFBQUEsSUFBSSxFQUFFWSxNQURGO0FBRUosZUFBUztBQUZMLEdBckIwQjtBQXlCbENDLEVBQUFBLEdBQUcsRUFBRTtBQUNEWCxJQUFBQSxRQUFRLEVBQUUsSUFEVDtBQUVERixJQUFBQSxJQUFJLEVBQUVZO0FBRkw7QUF6QjZCLENBQXBCLENBQWxCOztBQStCQSxJQUFNRSxLQUFLLEdBQUdqQixxQkFBU2lCLEtBQVQsQ0FBZSxLQUFmLEVBQXNCbEIsU0FBdEIsQ0FBZDs7ZUFFZWtCLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyL3NlcnZlci9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgUG1zU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgZHVzdDoge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIGRlZmF1bHQ6IDAsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSwgLy8g66+47IS466i87KeAXG4gICAgbWVhc3VyZWRBdDogeyAvLyDsuKHsoJXsi5zqsIRcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVmOiBcIlVzZXJcIlxuICAgICAgICBcbiAgICB9LFxuICAgIHByb2R1Y3Q6IHtcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgcmVmOiBcIlByb2R1Y3RcIlxuICAgIH0sXG4gICAgc2Vuc29yOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogXCJQTVNcIlxuICAgIH0sXG4gICAga2V5OiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9XG59KTtcblxuY29uc3QgbW9kZWwgPSBtb25nb29zZS5tb2RlbCgnUG1zJywgUG1zU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgbW9kZWw7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Pms.js"
      ],
      "names": [
        "PmsSchema",
        "mongoose",
        "Schema",
        "dust",
        "type",
        "Number",
        "required",
        "measuredAt",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "product",
        "sensor",
        "String",
        "key",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEF,eAAS,CAFP;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GAD4B;AAK/B;AACHC,EAAAA,UAAU,EAAE;AAAE;AACVH,IAAAA,IAAI,EAAEI,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GANsB;AAUlCC,EAAAA,UAAU,EAAE;AACRJ,IAAAA,QAAQ,EAAE,IADF;AAERF,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBS,KAAhB,CAAsBC,QAFpB;AAGRC,IAAAA,GAAG,EAAE;AAHG,GAVsB;AAgBlCC,EAAAA,OAAO,EAAE;AACLV,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBS,KAAhB,CAAsBC,QADvB;AAELN,IAAAA,QAAQ,EAAE,IAFL;AAGLO,IAAAA,GAAG,EAAE;AAHA,GAhByB;AAqBlCE,EAAAA,MAAM,EAAE;AACJX,IAAAA,IAAI,EAAEY,MADF;AAEJ,eAAS;AAFL,GArB0B;AAyBlCC,EAAAA,GAAG,EAAE;AACDX,IAAAA,QAAQ,EAAE,IADT;AAEDF,IAAAA,IAAI,EAAEY;AAFL;AAzB6B,CAApB,CAAlB;;AA+BA,IAAME,KAAK,GAAGjB,qBAASiB,KAAT,CAAe,KAAf,EAAsBlB,SAAtB,CAAd;;eAEekB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst PmsSchema = new mongoose.Schema({\n    dust: {\n        type: Number,\n        default: 0,\n        required: true\n    }, // 미세먼지\n    measuredAt: { // 측정시간\n        type: Date,\n        default: Date.now\n    },\n    controller: {\n        required: true,\n        type: mongoose.Schema.Types.ObjectId,\n        ref: \"User\"\n        \n    },\n    product: {\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"Product\"\n    },\n    sensor: {\n        type: String,\n        default: \"PMS\"\n    },\n    key: {\n        required: true,\n        type: String\n    }\n});\n\nconst model = mongoose.model('Pms', PmsSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622506347605
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/mqttFunction.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/mqttFunction.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/mqttFunction.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/mqttFunction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
        "sourceFileName": "mqttFunction.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "// export default timeConverter;\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1xdHRGdW5jdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZ2ltLWluZ3VnL0RvY3VtZW50cy9pb3RzZXJ2ZXIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4vLyBleHBvcnQgZGVmYXVsdCB0aW1lQ29udmVydGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mqttFunction.js"
      ],
      "names": [],
      "mappings": "AAEA",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/",
      "sourcesContent": [
        "\n\n// export default timeConverter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620841433072
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Led.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Led.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Led.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Led.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Led.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar LedSchema = new _mongoose[\"default\"].Schema({\n  auto: {\n    type: Boolean,\n    required: true,\n    \"default\": false\n  },\n  Red: Boolean,\n  Yellow: Boolean,\n  Green: Boolean,\n  measuredAt: {\n    // 측정시간\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    // 사용 유저\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"User\"\n  },\n  product: {\n    // 제품 번호\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"Product\"\n  },\n  key: {\n    required: true,\n    type: String\n  } // 제품 이름\n\n});\n\nvar model = _mongoose[\"default\"].model('Led', LedSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxlZC5qcyJdLCJuYW1lcyI6WyJMZWRTY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImF1dG8iLCJ0eXBlIiwiQm9vbGVhbiIsInJlcXVpcmVkIiwiUmVkIiwiWWVsbG93IiwiR3JlZW4iLCJtZWFzdXJlZEF0IiwiRGF0ZSIsIm5vdyIsImNvbnRyb2xsZXIiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicHJvZHVjdCIsImtleSIsIlN0cmluZyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDbENDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVDLE9BREo7QUFFRkMsSUFBQUEsUUFBUSxFQUFFLElBRlI7QUFHRixlQUFTO0FBSFAsR0FENEI7QUFNbENDLEVBQUFBLEdBQUcsRUFBRUYsT0FONkI7QUFPbENHLEVBQUFBLE1BQU0sRUFBRUgsT0FQMEI7QUFRbENJLEVBQUFBLEtBQUssRUFBRUosT0FSMkI7QUFTbENLLEVBQUFBLFVBQVUsRUFBRTtBQUFFO0FBQ1ZOLElBQUFBLElBQUksRUFBRU8sSUFERTtBQUVSLGVBQVNBLElBQUksQ0FBQ0M7QUFGTixHQVRzQjtBQWFsQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQUU7QUFDVlQsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQlksS0FBaEIsQ0FBc0JDLFFBRHBCO0FBRVJULElBQUFBLFFBQVEsRUFBRSxJQUZGO0FBR1JVLElBQUFBLEdBQUcsRUFBRTtBQUhHLEdBYnNCO0FBa0JsQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQUU7QUFDUGIsSUFBQUEsSUFBSSxFQUFFSCxxQkFBU0MsTUFBVCxDQUFnQlksS0FBaEIsQ0FBc0JDLFFBRHZCO0FBRUxULElBQUFBLFFBQVEsRUFBRSxJQUZMO0FBR0xVLElBQUFBLEdBQUcsRUFBRTtBQUhBLEdBbEJ5QjtBQXVCbENFLEVBQUFBLEdBQUcsRUFBRTtBQUNEWixJQUFBQSxRQUFRLEVBQUUsSUFEVDtBQUVERixJQUFBQSxJQUFJLEVBQUVlO0FBRkwsR0F2QjZCLENBMEJoQzs7QUExQmdDLENBQXBCLENBQWxCOztBQTZCQSxJQUFNQyxLQUFLLEdBQUduQixxQkFBU21CLEtBQVQsQ0FBZSxLQUFmLEVBQXNCcEIsU0FBdEIsQ0FBZDs7ZUFFZW9CLEsiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dpbS1pbmd1Zy9Eb2N1bWVudHMvaW90c2VydmVyL3NlcnZlci9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgTGVkU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgYXV0bzoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgZGVmYXVsdDogZmFsc2VcbiAgICB9LFxuICAgIFJlZDogQm9vbGVhbixcbiAgICBZZWxsb3c6IEJvb2xlYW4sXG4gICAgR3JlZW46IEJvb2xlYW4sXG4gICAgbWVhc3VyZWRBdDogeyAvLyDsuKHsoJXsi5zqsIRcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IHsgLy8g7IKs7JqpIOycoOyggFxuICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IFwiVXNlclwiXG4gICAgfSxcbiAgICBwcm9kdWN0OiB7IC8vIOygnO2SiCDrsojtmLhcbiAgICAgICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgcmVmOiBcIlByb2R1Y3RcIlxuICAgIH0sXG4gICAga2V5OiB7XG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9IC8vIOygnO2SiCDsnbTrpoRcbn0pO1xuXG5jb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdMZWQnLCBMZWRTY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCBtb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Led.js"
      ],
      "names": [
        "LedSchema",
        "mongoose",
        "Schema",
        "auto",
        "type",
        "Boolean",
        "required",
        "Red",
        "Yellow",
        "Green",
        "measuredAt",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "product",
        "key",
        "String",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,OADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGF,eAAS;AAHP,GAD4B;AAMlCC,EAAAA,GAAG,EAAEF,OAN6B;AAOlCG,EAAAA,MAAM,EAAEH,OAP0B;AAQlCI,EAAAA,KAAK,EAAEJ,OAR2B;AASlCK,EAAAA,UAAU,EAAE;AAAE;AACVN,IAAAA,IAAI,EAAEO,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GATsB;AAalCC,EAAAA,UAAU,EAAE;AAAE;AACVT,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QADpB;AAERT,IAAAA,QAAQ,EAAE,IAFF;AAGRU,IAAAA,GAAG,EAAE;AAHG,GAbsB;AAkBlCC,EAAAA,OAAO,EAAE;AAAE;AACPb,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBY,KAAhB,CAAsBC,QADvB;AAELT,IAAAA,QAAQ,EAAE,IAFL;AAGLU,IAAAA,GAAG,EAAE;AAHA,GAlByB;AAuBlCE,EAAAA,GAAG,EAAE;AACDZ,IAAAA,QAAQ,EAAE,IADT;AAEDF,IAAAA,IAAI,EAAEe;AAFL,GAvB6B,CA0BhC;;AA1BgC,CAApB,CAAlB;;AA6BA,IAAMC,KAAK,GAAGnB,qBAASmB,KAAT,CAAe,KAAf,EAAsBpB,SAAtB,CAAd;;eAEeoB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst LedSchema = new mongoose.Schema({\n    auto: {\n        type: Boolean,\n        required: true,\n        default: false\n    },\n    Red: Boolean,\n    Yellow: Boolean,\n    Green: Boolean,\n    measuredAt: { // 측정시간\n        type: Date,\n        default: Date.now\n    },\n    controller: { // 사용 유저\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"User\"\n    },\n    product: { // 제품 번호\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"Product\"\n    },\n    key: {\n        required: true,\n        type: String\n    } // 제품 이름\n});\n\nconst model = mongoose.model('Led', LedSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1622506304352
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Fan.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Fan.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Fan.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Fan.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Fan.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar FanSchema = new _mongoose[\"default\"].Schema({\n  auto: {\n    type: Boolean,\n    required: true,\n    \"default\": false\n  },\n  turnOn: {\n    \"default\": false,\n    type: Boolean,\n    required: true\n  },\n  measuredAt: {\n    // 측정시간\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    // 사용 유저\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"User\"\n  },\n  product: {\n    // 제품 번호\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"Product\"\n  },\n  key: {\n    required: true,\n    type: String\n  } // 제품 이름\n\n});\n\nvar model = _mongoose[\"default\"].model('Fan', FanSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZhbi5qcyJdLCJuYW1lcyI6WyJGYW5TY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImF1dG8iLCJ0eXBlIiwiQm9vbGVhbiIsInJlcXVpcmVkIiwidHVybk9uIiwibWVhc3VyZWRBdCIsIkRhdGUiLCJub3ciLCJjb250cm9sbGVyIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInByb2R1Y3QiLCJrZXkiLCJTdHJpbmciLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ2xDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxPQURKO0FBRUZDLElBQUFBLFFBQVEsRUFBRSxJQUZSO0FBR0YsZUFBUztBQUhQLEdBRDRCO0FBTWxDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSixlQUFTLEtBREw7QUFFSkgsSUFBQUEsSUFBSSxFQUFFQyxPQUZGO0FBR0pDLElBQUFBLFFBQVEsRUFBRTtBQUhOLEdBTjBCO0FBV2xDRSxFQUFBQSxVQUFVLEVBQUU7QUFBRTtBQUNWSixJQUFBQSxJQUFJLEVBQUVLLElBREU7QUFFUixlQUFTQSxJQUFJLENBQUNDO0FBRk4sR0FYc0I7QUFlbENDLEVBQUFBLFVBQVUsRUFBRTtBQUFFO0FBQ1ZQLElBQUFBLElBQUksRUFBRUgscUJBQVNDLE1BQVQsQ0FBZ0JVLEtBQWhCLENBQXNCQyxRQURwQjtBQUVSUCxJQUFBQSxRQUFRLEVBQUUsSUFGRjtBQUdSUSxJQUFBQSxHQUFHLEVBQUU7QUFIRyxHQWZzQjtBQW9CbENDLEVBQUFBLE9BQU8sRUFBRTtBQUFFO0FBQ1BYLElBQUFBLElBQUksRUFBRUgscUJBQVNDLE1BQVQsQ0FBZ0JVLEtBQWhCLENBQXNCQyxRQUR2QjtBQUVMUCxJQUFBQSxRQUFRLEVBQUUsSUFGTDtBQUdMUSxJQUFBQSxHQUFHLEVBQUU7QUFIQSxHQXBCeUI7QUF5QmxDRSxFQUFBQSxHQUFHLEVBQUU7QUFDRFYsSUFBQUEsUUFBUSxFQUFFLElBRFQ7QUFFREYsSUFBQUEsSUFBSSxFQUFFYTtBQUZMLEdBekI2QixDQTRCaEM7O0FBNUJnQyxDQUFwQixDQUFsQjs7QUErQkEsSUFBTUMsS0FBSyxHQUFHakIscUJBQVNpQixLQUFULENBQWUsS0FBZixFQUFzQmxCLFNBQXRCLENBQWQ7O2VBRWVrQixLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IEZhblNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGF1dG86IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICB0dXJuT246IHtcbiAgICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBtZWFzdXJlZEF0OiB7IC8vIOy4oeygleyLnOqwhFxuICAgICAgICB0eXBlOiBEYXRlLFxuICAgICAgICBkZWZhdWx0OiBEYXRlLm5vd1xuICAgIH0sXG4gICAgY29udHJvbGxlcjogeyAvLyDsgqzsmqkg7Jyg7KCAXG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHJlZjogXCJVc2VyXCJcbiAgICB9LFxuICAgIHByb2R1Y3Q6IHsgLy8g7KCc7ZKIIOuyiO2YuFxuICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IFwiUHJvZHVjdFwiXG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0gLy8g7KCc7ZKIIOydtOumhFxufSk7XG5cbmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ0ZhbicsIEZhblNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Fan.js"
      ],
      "names": [
        "FanSchema",
        "mongoose",
        "Schema",
        "auto",
        "type",
        "Boolean",
        "required",
        "turnOn",
        "measuredAt",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "product",
        "key",
        "String",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,OADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGF,eAAS;AAHP,GAD4B;AAMlCC,EAAAA,MAAM,EAAE;AACJ,eAAS,KADL;AAEJH,IAAAA,IAAI,EAAEC,OAFF;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAN0B;AAWlCE,EAAAA,UAAU,EAAE;AAAE;AACVJ,IAAAA,IAAI,EAAEK,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAXsB;AAelCC,EAAAA,UAAU,EAAE;AAAE;AACVP,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADpB;AAERP,IAAAA,QAAQ,EAAE,IAFF;AAGRQ,IAAAA,GAAG,EAAE;AAHG,GAfsB;AAoBlCC,EAAAA,OAAO,EAAE;AAAE;AACPX,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADvB;AAELP,IAAAA,QAAQ,EAAE,IAFL;AAGLQ,IAAAA,GAAG,EAAE;AAHA,GApByB;AAyBlCE,EAAAA,GAAG,EAAE;AACDV,IAAAA,QAAQ,EAAE,IADT;AAEDF,IAAAA,IAAI,EAAEa;AAFL,GAzB6B,CA4BhC;;AA5BgC,CAApB,CAAlB;;AA+BA,IAAMC,KAAK,GAAGjB,qBAASiB,KAAT,CAAe,KAAf,EAAsBlB,SAAtB,CAAd;;eAEekB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst FanSchema = new mongoose.Schema({\n    auto: {\n        type: Boolean,\n        required: true,\n        default: false\n    },\n    turnOn: {\n        default: false,\n        type: Boolean,\n        required: true\n    },\n    measuredAt: { // 측정시간\n        type: Date,\n        default: Date.now\n    },\n    controller: { // 사용 유저\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"User\"\n    },\n    product: { // 제품 번호\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"Product\"\n    },\n    key: {\n        required: true,\n        type: String\n    } // 제품 이름\n});\n\nconst model = mongoose.model('Fan', FanSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1623574960871
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/gim-ingug/Documents/iotserver/server/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gim-ingug/Documents/iotserver/server\",\"filename\":\"/Users/gim-ingug/Documents/iotserver/server/models/Buz.js\",\"targets\":{\"android\":\"4.0.0\",\"chrome\":\"4.0.0\",\"edge\":\"12.0.0\",\"firefox\":\"2.0.0\",\"ie\":\"5.5.0\",\"ios\":\"4.2.0\",\"opera\":\"9.0.0\",\"safari\":\"3.2.0\",\"samsung\":\"4.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gim-ingug/Documents/iotserver/server\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.15": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gim-ingug/Documents/iotserver/server",
      "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Buz.js",
      "targets": {
        "android": "4.0.0",
        "chrome": "4.0.0",
        "edge": "12.0.0",
        "firefox": "2.0.0",
        "ie": "5.5.0",
        "ios": "4.2.0",
        "opera": "9.0.0",
        "safari": "3.2.0",
        "samsung": "4.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/gim-ingug/Documents/iotserver/server",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gim-ingug/Documents/iotserver/server/models/Buz.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/gim-ingug/Documents/iotserver/server/models/Buz.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
        "sourceFileName": "Buz.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar BuzSchema = new _mongoose[\"default\"].Schema({\n  auto: {\n    type: Boolean,\n    required: true,\n    \"default\": false\n  },\n  turnOn: {\n    \"default\": false,\n    type: Boolean,\n    required: true\n  },\n  measuredAt: {\n    // 측정시간\n    type: Date,\n    \"default\": Date.now\n  },\n  controller: {\n    // 사용 유저\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"User\"\n  },\n  product: {\n    // 제품 번호\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    required: true,\n    ref: \"Product\"\n  },\n  key: {\n    required: true,\n    type: String\n  } // 제품 이름\n\n});\n\nvar model = _mongoose[\"default\"].model('Buz', BuzSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1ei5qcyJdLCJuYW1lcyI6WyJCdXpTY2hlbWEiLCJtb25nb29zZSIsIlNjaGVtYSIsImF1dG8iLCJ0eXBlIiwiQm9vbGVhbiIsInJlcXVpcmVkIiwidHVybk9uIiwibWVhc3VyZWRBdCIsIkRhdGUiLCJub3ciLCJjb250cm9sbGVyIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInByb2R1Y3QiLCJrZXkiLCJTdHJpbmciLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsU0FBUyxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ2xDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxPQURKO0FBRUZDLElBQUFBLFFBQVEsRUFBRSxJQUZSO0FBR0YsZUFBUztBQUhQLEdBRDRCO0FBTWxDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSixlQUFTLEtBREw7QUFFSkgsSUFBQUEsSUFBSSxFQUFFQyxPQUZGO0FBR0pDLElBQUFBLFFBQVEsRUFBRTtBQUhOLEdBTjBCO0FBV2xDRSxFQUFBQSxVQUFVLEVBQUU7QUFBRTtBQUNWSixJQUFBQSxJQUFJLEVBQUVLLElBREU7QUFFUixlQUFTQSxJQUFJLENBQUNDO0FBRk4sR0FYc0I7QUFlbENDLEVBQUFBLFVBQVUsRUFBRTtBQUFFO0FBQ1ZQLElBQUFBLElBQUksRUFBRUgscUJBQVNDLE1BQVQsQ0FBZ0JVLEtBQWhCLENBQXNCQyxRQURwQjtBQUVSUCxJQUFBQSxRQUFRLEVBQUUsSUFGRjtBQUdSUSxJQUFBQSxHQUFHLEVBQUU7QUFIRyxHQWZzQjtBQW9CbENDLEVBQUFBLE9BQU8sRUFBRTtBQUFFO0FBQ1BYLElBQUFBLElBQUksRUFBRUgscUJBQVNDLE1BQVQsQ0FBZ0JVLEtBQWhCLENBQXNCQyxRQUR2QjtBQUVMUCxJQUFBQSxRQUFRLEVBQUUsSUFGTDtBQUdMUSxJQUFBQSxHQUFHLEVBQUU7QUFIQSxHQXBCeUI7QUF5QmxDRSxFQUFBQSxHQUFHLEVBQUU7QUFDRFYsSUFBQUEsUUFBUSxFQUFFLElBRFQ7QUFFREYsSUFBQUEsSUFBSSxFQUFFYTtBQUZMLEdBekI2QixDQTRCaEM7O0FBNUJnQyxDQUFwQixDQUFsQjs7QUErQkEsSUFBTUMsS0FBSyxHQUFHakIscUJBQVNpQixLQUFULENBQWUsS0FBZixFQUFzQmxCLFNBQXRCLENBQWQ7O2VBRWVrQixLIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9naW0taW5ndWcvRG9jdW1lbnRzL2lvdHNlcnZlci9zZXJ2ZXIvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IEJ1elNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIGF1dG86IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICB0dXJuT246IHtcbiAgICAgICAgZGVmYXVsdDogZmFsc2UsXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBtZWFzdXJlZEF0OiB7IC8vIOy4oeygleyLnOqwhFxuICAgICAgICB0eXBlOiBEYXRlLFxuICAgICAgICBkZWZhdWx0OiBEYXRlLm5vd1xuICAgIH0sXG4gICAgY29udHJvbGxlcjogeyAvLyDsgqzsmqkg7Jyg7KCAXG4gICAgICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHJlZjogXCJVc2VyXCJcbiAgICB9LFxuICAgIHByb2R1Y3Q6IHsgLy8g7KCc7ZKIIOuyiO2YuFxuICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IFwiUHJvZHVjdFwiXG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0gLy8g7KCc7ZKIIOydtOumhFxufSk7XG5cbmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ0J1eicsIEJ1elNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Buz.js"
      ],
      "names": [
        "BuzSchema",
        "mongoose",
        "Schema",
        "auto",
        "type",
        "Boolean",
        "required",
        "turnOn",
        "measuredAt",
        "Date",
        "now",
        "controller",
        "Types",
        "ObjectId",
        "ref",
        "product",
        "key",
        "String",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AAClCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,OADJ;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGF,eAAS;AAHP,GAD4B;AAMlCC,EAAAA,MAAM,EAAE;AACJ,eAAS,KADL;AAEJH,IAAAA,IAAI,EAAEC,OAFF;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAN0B;AAWlCE,EAAAA,UAAU,EAAE;AAAE;AACVJ,IAAAA,IAAI,EAAEK,IADE;AAER,eAASA,IAAI,CAACC;AAFN,GAXsB;AAelCC,EAAAA,UAAU,EAAE;AAAE;AACVP,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADpB;AAERP,IAAAA,QAAQ,EAAE,IAFF;AAGRQ,IAAAA,GAAG,EAAE;AAHG,GAfsB;AAoBlCC,EAAAA,OAAO,EAAE;AAAE;AACPX,IAAAA,IAAI,EAAEH,qBAASC,MAAT,CAAgBU,KAAhB,CAAsBC,QADvB;AAELP,IAAAA,QAAQ,EAAE,IAFL;AAGLQ,IAAAA,GAAG,EAAE;AAHA,GApByB;AAyBlCE,EAAAA,GAAG,EAAE;AACDV,IAAAA,QAAQ,EAAE,IADT;AAEDF,IAAAA,IAAI,EAAEa;AAFL,GAzB6B,CA4BhC;;AA5BgC,CAApB,CAAlB;;AA+BA,IAAMC,KAAK,GAAGjB,qBAASiB,KAAT,CAAe,KAAf,EAAsBlB,SAAtB,CAAd;;eAEekB,K",
      "sourceRoot": "/Users/gim-ingug/Documents/iotserver/server/models/",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst BuzSchema = new mongoose.Schema({\n    auto: {\n        type: Boolean,\n        required: true,\n        default: false\n    },\n    turnOn: {\n        default: false,\n        type: Boolean,\n        required: true\n    },\n    measuredAt: { // 측정시간\n        type: Date,\n        default: Date.now\n    },\n    controller: { // 사용 유저\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"User\"\n    },\n    product: { // 제품 번호\n        type: mongoose.Schema.Types.ObjectId,\n        required: true,\n        ref: \"Product\"\n    },\n    key: {\n        required: true,\n        type: String\n    } // 제품 이름\n});\n\nconst model = mongoose.model('Buz', BuzSchema);\n\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1623574969397
  }
}